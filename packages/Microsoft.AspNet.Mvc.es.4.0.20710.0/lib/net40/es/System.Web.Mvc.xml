<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Web.Mvc</name>
  </assembly>
  <members>
    <member name="T:System.Web.Mvc.AcceptVerbsAttribute">
      <summary>Representa un atributo que especifica a qué verbos HTTP responderá un método de acción.</summary>
    </member>
    <member name="M:System.Web.Mvc.AcceptVerbsAttribute.#ctor(System.String[])">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.AcceptVerbsAttribute" /> mediante una lista de verbos HTTP a los que responderá el método de la acción.</summary>
      <param name="verbs">Los verbos HTTP a los que responderá el método de la acción.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="verbs" /> es null o tiene longitud cero.</exception>
    </member>
    <member name="M:System.Web.Mvc.AcceptVerbsAttribute.#ctor(System.Web.Mvc.HttpVerbs)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.AcceptVerbsAttribute" /> mediante los verbos HTTP a los que responderá el método de la acción.</summary>
      <param name="verbs">Los verbos HTTP a los que responderá el método de la acción.</param>
    </member>
    <member name="M:System.Web.Mvc.AcceptVerbsAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>Determina si la información de método especificada es válida para el contexto del controlador especificado.</summary>
      <returns>true si la información de método es válida; en caso contrario, false.</returns>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="methodInfo">Información de método.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="controllerContext " /> es null.</exception>
    </member>
    <member name="P:System.Web.Mvc.AcceptVerbsAttribute.Verbs">
      <summary>Obtiene o establece la lista de verbos HTTP a los que responderá el método de la acción.</summary>
      <returns>Lista de verbos HTTP a los que responderá el método de la acción.</returns>
    </member>
    <member name="T:System.Web.Mvc.ActionDescriptor">
      <summary>Proporciona información sobre un método de acción, tal como su nombre, controlador, parámetros, atributos y filtros.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.ActionDescriptor" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ActionDescriptor.ActionName">
      <summary>Obtiene el nombre del método de la acción.</summary>
      <returns>Nombre del método de la acción.</returns>
    </member>
    <member name="P:System.Web.Mvc.ActionDescriptor.ControllerDescriptor">
      <summary>Obtiene el descriptor del controlador.</summary>
      <returns>Descriptor del controlador.</returns>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.Execute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Ejecuta el método de la acción con los parámetros y el contexto del controlador especificados.</summary>
      <returns>Resultado de ejecutar el método de la acción.</returns>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="parameters">Parámetros del método de acción.</param>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>Devuelve una matriz de atributos personalizados definidos para este miembro, excluidos los atributos con nombre.</summary>
      <returns>Una matriz de atributos personalizados o una matriz vacía si no existen atributos personalizados.</returns>
      <param name="inherit">true para buscar la cadena de jerarquía del atributo personalizado heredado; de lo contrario, false.</param>
      <exception cref="T:System.TypeLoadException">El tipo de atributo personalizado no puede cargarse.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Se definió más de un atributo del tipo <paramref name="attributeType" /> para este miembro.</exception>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Devuelve una matriz de atributos personalizados definidos para este miembro, identificados según el tipo.</summary>
      <returns>Una matriz de atributos personalizados o una matriz vacía si no existe ningún atributo personalizado del tipo especificado.</returns>
      <param name="attributeType">Tipo de los atributos personalizados.</param>
      <param name="inherit">true para buscar la cadena de jerarquía del atributo personalizado heredado; de lo contrario, false.</param>
      <exception cref="T:System.TypeLoadException">El tipo de atributo personalizado no puede cargarse.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Se definió más de un atributo del tipo <paramref name="attributeType" /> para este miembro.</exception>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="attritubeType" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.GetFilterAttributes(System.Boolean)">
      <summary>Obtiene los atributos del filtro.</summary>
      <returns>Los atributos del filtro.</returns>
      <param name="useCache">true para usar la memoria caché, de lo contrario false.</param>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.GetFilters">
      <summary>Devuelve los filtros asociados a este método de acción.</summary>
      <returns>Filtros asociados a este método de acción.</returns>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.GetParameters">
      <summary>Devuelve los parámetros del método de la acción.</summary>
      <returns>Parámetros del método de acción.</returns>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.GetSelectors">
      <summary>Devuelve los selectores de método de acción.</summary>
      <returns>Selectores de método de acción.</returns>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>Determina si están definidas una o más instancias del tipo de atributo especificado para este miembro.</summary>
      <returns>true si se ha definido <paramref name="attributeType" /> para este miembro; de lo contrario, false.</returns>
      <param name="attributeType">Tipo del atributo personalizado.</param>
      <param name="inherit">true para buscar la cadena de jerarquía del atributo personalizado heredado; de lo contrario, false.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="attritubeType" /> es null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ActionDescriptor.UniqueId">
      <summary>Obtiene el identificador exclusivo del descriptor de la acción mediante la inicialización diferida.</summary>
      <returns>Identificador único.</returns>
    </member>
    <member name="T:System.Web.Mvc.ActionExecutedContext">
      <summary>Proporciona el contexto para el método ActionExecuted de la clase <see cref="T:System.Web.Mvc.ActionFilterAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionExecutedContext.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.ActionExecutedContext" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionExecutedContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor,System.Boolean,System.Exception)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.ActionExecutedContext" />.</summary>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="actionDescriptor">Descriptor del método de acción.</param>
      <param name="canceled">Es true si se cancela la acción.</param>
      <param name="exception">El objeto excepción.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="actionDescriptor" /> es null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutedContext.ActionDescriptor">
      <summary>Obtiene o establece el descriptor de acción de auditoría.</summary>
      <returns>Descriptor de la acción.</returns>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutedContext.Canceled">
      <summary>Obtiene o establece un valor que indica que este objeto <see cref="T:System.Web.Mvc.ActionExecutedContext" /> está cancelado.</summary>
      <returns>true si el contexto está cancelado; de lo contrario false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutedContext.Exception">
      <summary>Obtiene o establece la excepción que se produjo durante la ejecución del método de acción, si la hubo.</summary>
      <returns>La excepción que se produjo durante la ejecución del método de acción.</returns>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutedContext.ExceptionHandled">
      <summary>Obtiene o establece un valor que indica si la excepción está controlada.</summary>
      <returns>true si la excepción está controlada; de lo contrario, false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutedContext.Result">
      <summary>Obtiene o establece el resultado devuelto por el método de acción.</summary>
      <returns>El resultado devuelto por el método de acción.</returns>
    </member>
    <member name="T:System.Web.Mvc.ActionExecutingContext">
      <summary>Proporciona el contexto para el método ActionExecuting de la clase <see cref="T:System.Web.Mvc.ActionFilterAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionExecutingContext.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.ActionExecutingContext" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionExecutingContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.ActionExecutingContext" /> mediante el contexto del controlador especificado, el descriptor de la acción y parámetros acción-método.</summary>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="actionDescriptor">Descriptor de la acción.</param>
      <param name="actionParameters">Parámetros del método de acción.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="ActionParameters" /> o <paramref name="actionDescriptor" /> es null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutingContext.ActionDescriptor">
      <summary>Obtiene o establece el descriptor de acción de auditoría.</summary>
      <returns>Descriptor de la acción.</returns>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutingContext.ActionParameters">
      <summary>Obtiene o establece los parámetros de método de acción.</summary>
      <returns>Parámetros del método de acción.</returns>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutingContext.Result">
      <summary>Obtiene o establece el resultado devuelto por el método de la acción.</summary>
      <returns>El resultado devuelto por el método de la acción.</returns>
    </member>
    <member name="T:System.Web.Mvc.ActionFilterAttribute">
      <summary>Representa la clase base de los atributos de filtro.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionFilterAttribute.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.ActionFilterAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionFilterAttribute.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
      <summary>Es llamado por el marco de ASP.NET MVC cuando se ejecuta el método de acción.</summary>
      <param name="filterContext">Contexto del filtro.</param>
    </member>
    <member name="M:System.Web.Mvc.ActionFilterAttribute.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
      <summary>Es llamado por el marco de ASP.NET MVC antes de que se ejecute el método de acción.</summary>
      <param name="filterContext">Contexto del filtro.</param>
    </member>
    <member name="M:System.Web.Mvc.ActionFilterAttribute.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)">
      <summary>Es llamado por el marco de ASP.NET MVC cuando se ejecuta el resultado de la acción.</summary>
      <param name="filterContext">Contexto del filtro.</param>
    </member>
    <member name="M:System.Web.Mvc.ActionFilterAttribute.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)">
      <summary>Es llamado por el marco de ASP.NET MVC antes de que se ejecute el resultado de la acción.</summary>
      <param name="filterContext">Contexto del filtro.</param>
    </member>
    <member name="T:System.Web.Mvc.ActionMethodSelectorAttribute">
      <summary>Representa un atributo que se usa para influir en la selección de un método de acción.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionMethodSelectorAttribute.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.ActionMethodSelectorAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionMethodSelectorAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>Determina si la selección de método de acción es válida para el contexto del controlador especificado.</summary>
      <returns>true si la selección del método de acción es válida para el contexto del controlador especificado; de lo contrario, false.</returns>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="methodInfo">Información acerca del método de la acción.</param>
    </member>
    <member name="T:System.Web.Mvc.ActionNameAttribute">
      <summary>Representa un atributo que se utiliza para el nombre de una acción.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionNameAttribute.#ctor(System.String)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.ActionNameAttribute" />.</summary>
      <param name="name">Nombre de la acción.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.Mvc.ActionNameAttribute.IsValidName(System.Web.Mvc.ControllerContext,System.String,System.Reflection.MethodInfo)">
      <summary>Determina si el nombre de acción es válido dentro del contexto del controlador especificado.</summary>
      <returns>Es true si el nombre de acción es válido dentro del contexto del controlador especificado; de lo contrario, false.</returns>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="actionName">Nombre de la acción.</param>
      <param name="methodInfo">Información acerca del método de la acción.</param>
    </member>
    <member name="P:System.Web.Mvc.ActionNameAttribute.Name">
      <summary>Obtiene o establece el nombre de la acción.</summary>
      <returns>Nombre de la acción.</returns>
    </member>
    <member name="T:System.Web.Mvc.ActionNameSelectorAttribute">
      <summary>Representa un atributo que afecta a la selección de un método de acción.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionNameSelectorAttribute.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.ActionNameSelectorAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionNameSelectorAttribute.IsValidName(System.Web.Mvc.ControllerContext,System.String,System.Reflection.MethodInfo)">
      <summary>Determina si el nombre de acción es válido en el contexto del controlador especificado.</summary>
      <returns>Es true si el nombre de acción es válido en el contexto del controlador especificado; de lo contrario, false.</returns>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="actionName">Nombre de la acción.</param>
      <param name="methodInfo">Información acerca del método de la acción.</param>
    </member>
    <member name="T:System.Web.Mvc.ActionResult">
      <summary>Encapsula el resultado de un método de acción y se usa para realizar una operación de nivel de marco en nombre del método de acción.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionResult.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.ActionResult" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Habilita el procesamiento del resultado de un método de acción mediante un tipo personalizado que se hereda de la clase <see cref="T:System.Web.Mvc.ActionResult" />.</summary>
      <param name="context">Contexto en el que se ejecuta el resultado.La información de contexto incluye el controlador, el contenido HTTP, el contexto de la solicitud y los datos de la ruta.</param>
    </member>
    <member name="T:System.Web.Mvc.ActionSelector">
      <summary>Representa un delegado que contiene la lógica para seleccionar un método de acción.</summary>
      <returns>Es true si se seleccionó correctamente un método de acción; de lo contrario, es false.</returns>
      <param name="controllerContext">Contexto de la solicitud HTTP actual.</param>
    </member>
    <member name="T:System.Web.Mvc.AdditionalMetadataAttribute">
      <summary>Proporciona una clase que implementa la interfaz <see cref="T:System.Web.Mvc.IMetadataAware" /> para admitir metadatos adicionales. </summary>
    </member>
    <member name="M:System.Web.Mvc.AdditionalMetadataAttribute.#ctor(System.String,System.Object)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.AdditionalMetadataAttribute" />.</summary>
      <param name="name">Nombre de los metadatos del modelo.</param>
      <param name="value">Valor de los metadatos del modelo.</param>
    </member>
    <member name="P:System.Web.Mvc.AdditionalMetadataAttribute.Name">
      <summary>Obtiene el nombre del atributo de metadatos adicional.</summary>
      <returns>Nombre del atributo de metadatos adicional.</returns>
    </member>
    <member name="M:System.Web.Mvc.AdditionalMetadataAttribute.OnMetadataCreated(System.Web.Mvc.ModelMetadata)">
      <summary>Proporciona metadatos para el proceso de creación de los metadatos del modelo.</summary>
      <param name="metadata">Los metadatos.</param>
    </member>
    <member name="P:System.Web.Mvc.AdditionalMetadataAttribute.TypeId">
      <summary>Obtiene el tipo del atributo de metadatos adicional.</summary>
      <returns>Tipo del atributo de metadatos adicional.</returns>
    </member>
    <member name="P:System.Web.Mvc.AdditionalMetadataAttribute.Value">
      <summary>Obtiene el valor del atributo de metadatos adicional.</summary>
      <returns>Valor del atributo de metadatos adicional.</returns>
    </member>
    <member name="T:System.Web.Mvc.AjaxHelper">
      <summary>Representa la compatibilidad para representar HTML en escenarios AJAX dentro de una vista.</summary>
    </member>
    <member name="M:System.Web.Mvc.AjaxHelper.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.AjaxHelper" /> mediante el contexto de vista y el contenedor de datos de vista especificados.</summary>
      <param name="viewContext">Contexto de la vista.</param>
      <param name="viewDataContainer">Contenedor de datos de la vista.</param>
      <exception cref="T:System.ArgumentNullException">El valor de uno o ambos parámetros es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.AjaxHelper.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer,System.Web.Routing.RouteCollection)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.AjaxHelper" /> mediante el contexto de vista, el contenedor de datos de vista y la colección de rutas especificados.</summary>
      <param name="viewContext">Contexto de la vista.</param>
      <param name="viewDataContainer">Contenedor de datos de la vista.</param>
      <param name="routeCollection">Colección de rutas de dirección URL.</param>
      <exception cref="T:System.ArgumentNullException">El valor de uno o más parámetros es null.</exception>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper.GlobalizationScriptPath">
      <summary>Obtiene o establece la ruta de acceso raíz de la ubicación que se va a usar para los archivos de script de globalización.</summary>
      <returns>La ubicación de la carpeta donde se almacenarán los archivos de script de globalización.La ubicación predeterminada es "~/Scripts/Globalization".</returns>
    </member>
    <member name="M:System.Web.Mvc.AjaxHelper.JavaScriptStringEncode(System.String)">
      <summary>Serializa el mensaje especificado y devuelve la cadena con formato JSON resultante.</summary>
      <returns>Mensaje serializado como una cadena con formato JSON.</returns>
      <param name="message">Mensaje que se va a serializar.</param>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper.RouteCollection">
      <summary>Obtiene la colección de rutas de dirección URL para la aplicación.</summary>
      <returns>Colección de rutas para la aplicación.</returns>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper.ViewBag">
      <summary>Obtiene el elemento ViewBag.</summary>
      <returns>Elemento ViewBag.</returns>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper.ViewContext">
      <summary>Obtiene la información de contexto acerca de la vista.</summary>
      <returns>Contexto de la vista.</returns>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper.ViewData">
      <summary>Obtiene el diccionario de datos de la vista actual.</summary>
      <returns>Diccionario de datos de vista.</returns>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper.ViewDataContainer">
      <summary>Obtiene el contenedor de datos de la vista.</summary>
      <returns>Contenedor de datos de la vista.</returns>
    </member>
    <member name="T:System.Web.Mvc.AjaxHelper`1">
      <summary>Representa la compatibilidad para representar HTML en escenarios AJAS dentro de una vista fuertemente tipada.</summary>
      <typeparam name="TModel">Tipo del modelo.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.AjaxHelper`1.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.AjaxHelper`1" /> mediante el contexto de vista y el contenedor de datos de vista especificados.</summary>
      <param name="viewContext">Contexto de la vista.</param>
      <param name="viewDataContainer">Contenedor de datos de la vista.</param>
    </member>
    <member name="M:System.Web.Mvc.AjaxHelper`1.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer,System.Web.Routing.RouteCollection)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.AjaxHelper`1" /> mediante el contexto de vista, el contenedor de datos de vista y la colección de rutas de dirección URL especificados.</summary>
      <param name="viewContext">Contexto de la vista.</param>
      <param name="viewDataContainer">Contenedor de datos de la vista.</param>
      <param name="routeCollection">Colección de rutas de dirección URL.</param>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper`1.ViewBag">
      <summary>Obtiene el elemento ViewBag.</summary>
      <returns>Elemento ViewBag.</returns>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper`1.ViewData">
      <summary>Obtiene la versión fuertemente tipada del diccionario de datos de la vista.</summary>
      <returns>El diccionario de datos fuertemente tipado de la vista.</returns>
    </member>
    <member name="T:System.Web.Mvc.AjaxRequestExtensions">
      <summary>Representa una clase que extiende la clase <see cref="T:System.Web.HttpRequestBase" /> al agregar la capacidad de determinar si una solicitud HTTP es una solicitud AJAX.</summary>
    </member>
    <member name="M:System.Web.Mvc.AjaxRequestExtensions.IsAjaxRequest(System.Web.HttpRequestBase)"></member>
    <member name="T:System.Web.Mvc.AllowAnonymousAttribute">
      <summary>Representa un atributo que marca controladores y acciones para omitir <see cref="T:System.Web.Mvc.AuthorizeAttribute" /> durante la autorización.</summary>
    </member>
    <member name="M:System.Web.Mvc.AllowAnonymousAttribute.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.AllowAnonymousAttribute" />.</summary>
    </member>
    <member name="T:System.Web.Mvc.AllowHtmlAttribute">
      <summary>Permite que una solicitud incluya el formato HTML durante el enlace del modelo al omitir la validación de solicitudes de la propiedad.(Se recomienda que la aplicación compruebe explícitamente todos los modelos en los que deshabilite la validación de solicitudes para evitar los ataques mediante scripts).</summary>
    </member>
    <member name="M:System.Web.Mvc.AllowHtmlAttribute.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.AllowHtmlAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.AllowHtmlAttribute.OnMetadataCreated(System.Web.Mvc.ModelMetadata)">
      <summary>Este método es compatible con la infraestructura de validación de ASP.NET MVC y no está pensado para que se use directamente desde el código.</summary>
      <param name="metadata">Metadatos del modelo.</param>
    </member>
    <member name="T:System.Web.Mvc.AreaRegistration">
      <summary>Proporciona una manera de registrar una o más áreas en una aplicación ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistration.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.AreaRegistration" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.AreaRegistration.AreaName">
      <summary>Obtiene el nombre del área que se va a registrar.</summary>
      <returns>Nombre del área que se va a registrar.</returns>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistration.RegisterAllAreas">
      <summary>Registra todas las áreas en una aplicación ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistration.RegisterAllAreas(System.Object)">
      <summary>Registra todas las áreas de una aplicación ASP.NET MVC usando la información definida por el usuario especificada.</summary>
      <param name="state">Un objeto que contiene la información definida por el usuario que se va a pasar al área.</param>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistration.RegisterArea(System.Web.Mvc.AreaRegistrationContext)">
      <summary>Registra un área en una aplicación ASP.NET MVC usando la información de contexto del área especificada.</summary>
      <param name="context">Encapsula la información necesaria para registrar el área.</param>
    </member>
    <member name="T:System.Web.Mvc.AreaRegistrationContext">
      <summary>Encapsula la información necesaria para registrar un área en una aplicación de ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.#ctor(System.String,System.Web.Routing.RouteCollection)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.AreaRegistrationContext" /> mediante el nombre de área y la colección de rutas especificados.</summary>
      <param name="areaName">Nombre del área que se va a registrar.</param>
      <param name="routes">Colección de rutas para la aplicación.</param>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.#ctor(System.String,System.Web.Routing.RouteCollection,System.Object)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.AreaRegistrationContext" /> mediante el nombre de área, la colección de rutas y los datos definidos por el usuario especificados.</summary>
      <param name="areaName">Nombre del área que se va a registrar.</param>
      <param name="routes">Colección de rutas para la aplicación.</param>
      <param name="state">Un objeto que contiene la información definida por el usuario que se va a pasar al área.</param>
    </member>
    <member name="P:System.Web.Mvc.AreaRegistrationContext.AreaName">
      <summary>Obtiene el nombre del área que se va a registrar.</summary>
      <returns>Nombre del área que se va a registrar.</returns>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.MapRoute(System.String,System.String)">
      <summary>Asigna la ruta de la dirección URL especificada y la asocia al área especificada por la propiedad <see cref="P:System.Web.Mvc.AreaRegistrationContext.AreaName" />.</summary>
      <returns>Una referencia a la ruta asignada.</returns>
      <param name="name">Nombre de la ruta.</param>
      <param name="url">Modelo de dirección URL de la ruta.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="url" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.MapRoute(System.String,System.String,System.Object)">
      <summary>Asigna la ruta de la dirección URL especificada y la asocia al área especificada por la propiedad <see cref="P:System.Web.Mvc.AreaRegistrationContext.AreaName" /> mediante los valores predeterminados de la ruta especificados.</summary>
      <returns>Una referencia a la ruta asignada.</returns>
      <param name="name">Nombre de la ruta.</param>
      <param name="url">Modelo de dirección URL de la ruta.</param>
      <param name="defaults">Objeto que contiene los valores de ruta predeterminados.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="url" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.MapRoute(System.String,System.String,System.Object,System.Object)">
      <summary>Asigna la ruta de la dirección URL especificada y la asocia al área especificada por la propiedad <see cref="P:System.Web.Mvc.AreaRegistrationContext.AreaName" /> mediante la restricción y los valores predeterminados de la ruta especificados.</summary>
      <returns>Una referencia a la ruta asignada.</returns>
      <param name="name">Nombre de la ruta.</param>
      <param name="url">Modelo de dirección URL de la ruta.</param>
      <param name="defaults">Objeto que contiene los valores de ruta predeterminados.</param>
      <param name="constraints">Conjunto de expresiones que especifican los valores para un parámetro de dirección URL.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="url" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.MapRoute(System.String,System.String,System.Object,System.Object,System.String[])">
      <summary>Asigna la ruta de la dirección URL especificada y la asocia al área especificada por la propiedad <see cref="P:System.Web.Mvc.AreaRegistrationContext.AreaName" /> mediante los espacios de nombres, las restricciones y los valores predeterminados de la ruta especificados.</summary>
      <returns>Una referencia a la ruta asignada.</returns>
      <param name="name">Nombre de la ruta.</param>
      <param name="url">Modelo de dirección URL de la ruta.</param>
      <param name="defaults">Objeto que contiene los valores de ruta predeterminados.</param>
      <param name="constraints">Conjunto de expresiones que especifican los valores para un parámetro de dirección URL.</param>
      <param name="namespaces">Un conjunto enumerable de espacios de nombres para la aplicación.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="url" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.MapRoute(System.String,System.String,System.Object,System.String[])">
      <summary>Asigna la ruta de la dirección URL especificada y la asocia al área especificada por la propiedad <see cref="P:System.Web.Mvc.AreaRegistrationContext.AreaName" /> mediante los espacios de nombres y los valores predeterminados de la ruta especificados.</summary>
      <returns>Una referencia a la ruta asignada.</returns>
      <param name="name">Nombre de la ruta.</param>
      <param name="url">Modelo de dirección URL de la ruta.</param>
      <param name="defaults">Objeto que contiene los valores de ruta predeterminados.</param>
      <param name="namespaces">Un conjunto enumerable de espacios de nombres para la aplicación.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="url" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.MapRoute(System.String,System.String,System.String[])">
      <summary>Asigna la ruta de la dirección URL especificada y la asocia al área especificada por la propiedad <see cref="P:System.Web.Mvc.AreaRegistrationContext.AreaName" /> mediante los espacios de nombres especificados.</summary>
      <returns>Una referencia a la ruta asignada.</returns>
      <param name="name">Nombre de la ruta.</param>
      <param name="url">Modelo de dirección URL de la ruta.</param>
      <param name="namespaces">Un conjunto enumerable de espacios de nombres para la aplicación.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="url" /> es null.</exception>
    </member>
    <member name="P:System.Web.Mvc.AreaRegistrationContext.Namespaces">
      <summary>Obtiene los espacios de nombres para la aplicación.</summary>
      <returns>Un conjunto enumerable de espacios de nombres para la aplicación.</returns>
    </member>
    <member name="P:System.Web.Mvc.AreaRegistrationContext.Routes">
      <summary>Obtiene una colección de rutas definidas para la aplicación.</summary>
      <returns>Colección de rutas definidas para la aplicación.</returns>
    </member>
    <member name="P:System.Web.Mvc.AreaRegistrationContext.State">
      <summary>Obtiene un objeto que contiene la información definida por el usuario que se va a pasar al área.</summary>
      <returns>Un objeto que contiene la información definida por el usuario que se va a pasar al área.</returns>
    </member>
    <member name="T:System.Web.Mvc.AssociatedMetadataProvider">
      <summary>Proporciona una clase abstracta para implementar un proveedor de metadatos.</summary>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.#ctor">
      <summary>Se le llama desde los constructores en una clase derivada para inicializar la clase <see cref="T:System.Web.Mvc.AssociatedMetadataProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.CreateMetadata(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Func{System.Object},System.Type,System.String)">
      <summary>Cuando se invalida en una clase derivada, crea los metadatos del modelo para la propiedad.</summary>
      <returns>Metadatos del modelo para la propiedad.</returns>
      <param name="attributes">Conjunto de atributos.</param>
      <param name="containerType">Tipo del contenedor.</param>
      <param name="modelAccessor">Descriptor de acceso del modelo.</param>
      <param name="modelType">Tipo del modelo.</param>
      <param name="propertyName">Nombre de la propiedad.</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.FilterAttributes(System.Type,System.ComponentModel.PropertyDescriptor,System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>Obtiene una lista de atributos.</summary>
      <returns>Una lista de atributos.</returns>
      <param name="containerType">Tipo del contenedor.</param>
      <param name="propertyDescriptor">Descriptor de la propiedad.</param>
      <param name="attributes">Contenedor de atributo.</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.GetMetadataForProperties(System.Object,System.Type)">
      <summary>Devuelve una lista de propiedades para el modelo.</summary>
      <returns>Una lista de propiedades para el modelo.</returns>
      <param name="container">Contenedor del modelo.</param>
      <param name="containerType">Tipo del contenedor.</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.GetMetadataForProperty(System.Func{System.Object},System.Type,System.ComponentModel.PropertyDescriptor)">
      <summary>Devuelve los metadatos para la propiedad especificada mediante el tipo de contenedor y el descriptor de propiedad.</summary>
      <returns>Metadatos de la propiedad especificada mediante el tipo de contenedor y el descriptor de propiedad.</returns>
      <param name="modelAccessor">Descriptor de acceso del modelo.</param>
      <param name="containerType">Tipo del contenedor.</param>
      <param name="propertyDescriptor">Descriptor de propiedad</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.GetMetadataForProperty(System.Func{System.Object},System.Type,System.String)">
      <summary>Devuelve los metadatos para la propiedad especificada mediante el tipo de contenedor y el nombre de propiedad.</summary>
      <returns>Metadatos de la propiedad especificada mediante el tipo de contenedor y el nombre de propiedad.</returns>
      <param name="modelAccessor">Descriptor de acceso del modelo.</param>
      <param name="containerType">Tipo del contenedor.</param>
      <param name="propertyName">Nombre de la propiedad.</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.GetMetadataForType(System.Func{System.Object},System.Type)">
      <summary>Devuelve los metadatos para la propiedad especificada utilizando el tipo del modelo.</summary>
      <returns>Metadatos de la propiedad especificada mediante el tipo del modelo.</returns>
      <param name="modelAccessor">Descriptor de acceso del modelo.</param>
      <param name="modelType">Tipo del modelo.</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.GetTypeDescriptor(System.Type)">
      <summary>Devuelve el descriptor de tipos desde el tipo especificado.</summary>
      <returns>Descriptor de tipos.</returns>
      <param name="type">Tipo.</param>
    </member>
    <member name="T:System.Web.Mvc.AssociatedValidatorProvider">
      <summary>Proporciona una clase abstracta para las clases que implementan un proveedor de validación.</summary>
    </member>
    <member name="M:System.Web.Mvc.AssociatedValidatorProvider.#ctor">
      <summary>Se le llama desde los constructores en las clases derivadas para inicializar la clase <see cref="T:System.Web.Mvc.AssociatedMetadataProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.AssociatedValidatorProvider.GetTypeDescriptor(System.Type)">
      <summary>Obtiene un descriptor de tipos para el tipo especificado.</summary>
      <returns>Un descriptor de tipos para el tipo especificado.</returns>
      <param name="type">Tipo del proveedor de validación.</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Obtiene los validadores del modelo utilizando los metadatos y el contexto del controlador.</summary>
      <returns>Los validadores del modelo.</returns>
      <param name="metadata">Metadatos.</param>
      <param name="context">Contexto del controlador.</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>Obtiene los validadores del modelo utilizando los metadatos, el contexto del controlador y una lista de atributos.</summary>
      <returns>Los validadores del modelo.</returns>
      <param name="metadata">Metadatos.</param>
      <param name="context">Contexto del controlador.</param>
      <param name="attributes">Lista de atributos.</param>
    </member>
    <member name="T:System.Web.Mvc.AsyncController">
      <summary>Se proporciona para la compatibilidad con versiones anteriores a ASP.NET MVC 3.</summary>
    </member>
    <member name="M:System.Web.Mvc.AsyncController.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.AsyncController" />.</summary>
    </member>
    <member name="T:System.Web.Mvc.AsyncTimeoutAttribute">
      <summary>Representa un atributo que se usa para establecer el valor de tiempo de espera, en milisegundos, para un método asincrónico.</summary>
    </member>
    <member name="M:System.Web.Mvc.AsyncTimeoutAttribute.#ctor(System.Int32)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.AsyncTimeoutAttribute" />.</summary>
      <param name="duration">El valor del tiempo de espera, en milisegundos.</param>
    </member>
    <member name="P:System.Web.Mvc.AsyncTimeoutAttribute.Duration">
      <summary>Obtiene la duración del tiempo de espera, en milisegundos.</summary>
      <returns>Duración del tiempo de espera, en milisegundos.</returns>
    </member>
    <member name="M:System.Web.Mvc.AsyncTimeoutAttribute.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
      <summary>Lo llama ASP.NET antes de que se ejecute el método de acción asincrónica.</summary>
      <param name="filterContext">Contexto del filtro.</param>
    </member>
    <member name="T:System.Web.Mvc.AuthorizationContext">
      <summary>Encapsula la información necesaria para usar un atributo <see cref="T:System.Web.Mvc.AuthorizeAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.AuthorizationContext.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.AuthorizationContext" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.AuthorizationContext.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.Web.Mvc.AuthorizationContext" /> usando el controlador del contexto especificado.</summary>
      <param name="controllerContext">Contexto en el que se ejecuta el resultado.La información de contexto incluye el controlador, el contenido HTTP, el contexto de la solicitud y los datos de la ruta.</param>
    </member>
    <member name="M:System.Web.Mvc.AuthorizationContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.AuthorizationContext" /> mediante el contexto del controlador especificado y el descriptor de la acción.</summary>
      <param name="controllerContext">Contexto en el que se ejecuta el resultado.La información de contexto incluye el controlador, el contenido HTTP, el contexto de la solicitud y los datos de la ruta.</param>
      <param name="actionDescriptor">Un objeto que proporciona información sobre un método de acción, tal como su nombre, controlador, parámetros, atributos y filtros.</param>
    </member>
    <member name="P:System.Web.Mvc.AuthorizationContext.ActionDescriptor">
      <summary>Proporciona información sobre el método de acción marcado por el atributo <see cref="T:System.Web.Mvc.AuthorizeAttribute" />, tal como su nombre, controlador, parámetros, atributos y filtros.</summary>
      <returns>Descriptor de la acción para el método de acción marcado por el atributo <see cref="T:System.Web.Mvc.AuthorizeAttribute" />.</returns>
    </member>
    <member name="P:System.Web.Mvc.AuthorizationContext.Result">
      <summary>Obtiene o establece el resultado devuelto por un método de acción.</summary>
      <returns>El resultado devuelto por un método de acción.</returns>
    </member>
    <member name="T:System.Web.Mvc.AuthorizeAttribute">
      <summary>Representa un atributo que se usa para restringir el acceso por llamadores a un método de acción.</summary>
    </member>
    <member name="M:System.Web.Mvc.AuthorizeAttribute.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.AuthorizeAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.AuthorizeAttribute.AuthorizeCore(System.Web.HttpContextBase)">
      <summary>Cuando se reemplaza, proporciona un punto de entrada para las comprobaciones de autorización personalizada.</summary>
      <returns>true si el usuario está autorizado; de lo contrario, false.</returns>
      <param name="httpContext">Contexto HTTP, que encapsula toda la información específica de HTTP acerca de una solicitud HTTP individual.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="httpContext" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.AuthorizeAttribute.HandleUnauthorizedRequest(System.Web.Mvc.AuthorizationContext)">
      <summary>Procesa las solicitudes HTTP que producen un error en la autorización.</summary>
      <param name="filterContext">Encapsula la información para usar <see cref="T:System.Web.Mvc.AuthorizeAttribute" />.El objeto <paramref name="filterContext" /> contiene el controlador, el contexto HTTP, el contexto de la solicitud, el resultado de la acción y los datos de ruta.</param>
    </member>
    <member name="M:System.Web.Mvc.AuthorizeAttribute.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>Se llama cuando un proceso solicita autorización.</summary>
      <param name="filterContext">Contexto del filtro, que encapsula la información para usar <see cref="T:System.Web.Mvc.AuthorizeAttribute" />.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="filterContext" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.AuthorizeAttribute.OnCacheAuthorization(System.Web.HttpContextBase)">
      <summary>Se llama cuando el módulo de almacenamiento en caché solicita autorización.</summary>
      <returns>Referencia al estado de validación.</returns>
      <param name="httpContext">Contexto HTTP, que encapsula toda la información específica de HTTP acerca de una solicitud HTTP individual.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="httpContext" /> es null.</exception>
    </member>
    <member name="P:System.Web.Mvc.AuthorizeAttribute.Roles">
      <summary>Obtiene o establece los roles de usuario.</summary>
      <returns>Roles de usuario.</returns>
    </member>
    <member name="P:System.Web.Mvc.AuthorizeAttribute.TypeId">
      <summary>Obtiene un identificador único para este atributo.</summary>
      <returns>Identificador único para este atributo.</returns>
    </member>
    <member name="P:System.Web.Mvc.AuthorizeAttribute.Users">
      <summary>Obtiene o establece los usuarios autorizados.</summary>
      <returns>Usuarios autorizados.</returns>
    </member>
    <member name="T:System.Web.Mvc.BindAttribute">
      <summary>Representa un atributo que se usa para proporcionar detalles cómo debe producir el enlace del modelo a un parámetro.</summary>
    </member>
    <member name="M:System.Web.Mvc.BindAttribute.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.BindAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.BindAttribute.Exclude">
      <summary>Obtiene o establece una lista delimitada por comas de nombres de propiedades para las que no se permite el enlace.</summary>
      <returns>Lista de exclusión.</returns>
    </member>
    <member name="P:System.Web.Mvc.BindAttribute.Include">
      <summary>Obtiene o establece una lista delimitada por comas de nombres de propiedades para las que se permite el enlace.</summary>
      <returns>Lista de inclusión.</returns>
    </member>
    <member name="M:System.Web.Mvc.BindAttribute.IsPropertyAllowed(System.String)">
      <summary>Determina si se permite la propiedad especificada.</summary>
      <returns>true si la propiedad especificada se permite; en caso contrario, false.</returns>
      <param name="propertyName">Nombre de la propiedad.</param>
    </member>
    <member name="P:System.Web.Mvc.BindAttribute.Prefix">
      <summary>Obtiene o establece el prefijo que se va a usa cuando se represente el marcado para enlazar a un argumento de acción o a una propiedad de modelo.</summary>
      <returns>Prefijo que se va a usar.</returns>
    </member>
    <member name="T:System.Web.Mvc.BuildManagerCompiledView">
      <summary>Representa la clase base para las vistas que recopila la clase BuildManager antes de que las represente un motor de vistas.</summary>
    </member>
    <member name="M:System.Web.Mvc.BuildManagerCompiledView.#ctor(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.BuildManagerCompiledView" /> mediante el contexto de controlador especificado y la ruta de acceso de la vista.</summary>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="viewPath">Ruta de acceso a la vista.</param>
    </member>
    <member name="M:System.Web.Mvc.BuildManagerCompiledView.#ctor(System.Web.Mvc.ControllerContext,System.String,System.Web.Mvc.IViewPageActivator)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.BuildManagerCompiledView" /> mediante el contexto de controlador, la ruta de acceso de vista y el activador de página de vista especificados.</summary>
      <param name="controllerContext">Información de contexto para el controlador actual.Esta información incluye el contexto HTTP, el contexto de la solicitud, los datos de la ruta, el contexto de la vista de acción primaria, etc.</param>
      <param name="viewPath">Ruta de acceso a la vista que se representará.</param>
      <param name="viewPageActivator">Objeto responsable de la creación dinámica de la página de vista en tiempo de ejecución. </param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="controllerContext" /> es null.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="viewPath" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.Mvc.BuildManagerCompiledView.Render(System.Web.Mvc.ViewContext,System.IO.TextWriter)">
      <summary>Representa el contexto de vista especificado mediante el objeto de sistema de escritura especificado.</summary>
      <param name="viewContext">Información relacionada con la representación de una vista, tales como los datos de vista, los datos temporales y el contexto de formulario.</param>
      <param name="writer">Objeto de sistema de escritura.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="viewContext" /> es null.</exception>
      <exception cref="T:SInvalidOperationException">No se pudo crear una instancia del tipo de vista.</exception>
    </member>
    <member name="M:System.Web.Mvc.BuildManagerCompiledView.RenderView(System.Web.Mvc.ViewContext,System.IO.TextWriter,System.Object)">
      <summary>Cuando se reemplaza en una clase derivada, representa el contexto de vista especificado mediante el objeto de escritor y la instancia de objeto especificados.</summary>
      <param name="viewContext">Información relacionada con la representación de una vista, tales como los datos de vista, los datos temporales y el contexto de formulario.</param>
      <param name="writer">Objeto de sistema de escritura.</param>
      <param name="instance">Objeto que contiene información adicional que se puede usar en la vista.</param>
    </member>
    <member name="P:System.Web.Mvc.BuildManagerCompiledView.ViewPath">
      <summary>Obtiene o establece la ruta de acceso a la vista.</summary>
      <returns>Ruta de acceso a la vista.</returns>
    </member>
    <member name="T:System.Web.Mvc.BuildManagerViewEngine">
      <summary>Proporciona una clase base para los motores de vista.</summary>
    </member>
    <member name="M:System.Web.Mvc.BuildManagerViewEngine.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.BuildManagerViewEngine" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.BuildManagerViewEngine.#ctor(System.Web.Mvc.IViewPageActivator)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.BuildManagerViewEngine" /> mediante el activador de página de vista especificado.</summary>
      <param name="viewPageActivator">Activador de la página de vista.</param>
    </member>
    <member name="M:System.Web.Mvc.BuildManagerViewEngine.FileExists(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Obtiene un valor que indica si existe un archivo en el sistema de archivos virtual especificado (ruta de acceso).</summary>
      <returns>true si el archivo existe en el sistema de archivos virtual; de lo contrario, false.</returns>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="virtualPath">Ruta de acceso virtual.</param>
    </member>
    <member name="P:System.Web.Mvc.BuildManagerViewEngine.ViewPageActivator">
      <summary>Obtiene el activador de la página de vista.</summary>
      <returns>Activador de la página de vista.</returns>
    </member>
    <member name="T:System.Web.Mvc.ByteArrayModelBinder">
      <summary>Asigna una solicitud del explorador a una matriz de bytes.</summary>
    </member>
    <member name="M:System.Web.Mvc.ByteArrayModelBinder.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.ByteArrayModelBinder" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ByteArrayModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Enlaza el modelo utilizando el contexto del controlador y el contexto de enlace especificados.</summary>
      <returns>Objeto de datos enlazado.</returns>
      <param name="controllerContext">Contexto en el que funciona el controlador.La información de contexto incluye el controlador, el contenido HTTP, el contexto de la solicitud y los datos de la ruta.</param>
      <param name="bindingContext">Contexto en el que se enlaza el modelo.El contexto incluye información como el objeto de modelo, el nombre de modelo, el tipo de modelo, el filtro de propiedades y el proveedor de valores.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="bindingContext" /> es null.</exception>
    </member>
    <member name="T:System.Web.Mvc.CachedAssociatedMetadataProvider`1">
      <summary>Proporciona una clase abstracta para implementar un proveedor de metadatos almacenado en caché.</summary>
      <typeparam name="TModelMetadata"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.CachedAssociatedMetadataProvider`1.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.CachedAssociatedMetadataProvider`1" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.CachedAssociatedMetadataProvider`1.CacheItemPolicy">
      <summary>Obtiene la directiva del elemento en caché.</summary>
      <returns>La directiva del elemento en caché.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedAssociatedMetadataProvider`1.CacheKeyPrefix">
      <summary>Obtiene el prefijo de la clave en caché.</summary>
      <returns>Prefijo de la clave en caché.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedAssociatedMetadataProvider`1.CreateMetadata(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Func{System.Object},System.Type,System.String)">
      <summary>Cuando se invalida en una clase derivada, crea los metadatos del modelo en caché para la propiedad.</summary>
      <returns>Metadatos del modelo en caché para la propiedad.</returns>
      <param name="attributes">Atributos.</param>
      <param name="containerType">Tipo de contenedor.</param>
      <param name="modelAccessor">Descriptor de acceso del modelo.</param>
      <param name="modelType">Tipo del modelo.</param>
      <param name="propertyName">El nombre de la propiedad.</param>
    </member>
    <member name="M:System.Web.Mvc.CachedAssociatedMetadataProvider`1.CreateMetadataFromPrototype(`0,System.Func{System.Object})">
      <summary>Crea metadatos de prototipo al aplicar el prototipo y el acceso de modelo para producir los metadatos finales.</summary>
      <returns>Metadatos de prototipo.</returns>
      <param name="prototype">El prototipo.</param>
      <param name="modelAccessor">Descriptor de acceso del modelo.</param>
    </member>
    <member name="M:System.Web.Mvc.CachedAssociatedMetadataProvider`1.CreateMetadataPrototype(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Type,System.String)">
      <summary>Crea un prototipo de metadatos.</summary>
      <returns>Prototipo de metadatos.</returns>
      <param name="attributes">Atributos.</param>
      <param name="containerType">Tipo de contenedor.</param>
      <param name="modelType">Tipo del modelo.</param>
      <param name="propertyName">El nombre de la propiedad.</param>
    </member>
    <member name="M:System.Web.Mvc.CachedAssociatedMetadataProvider`1.GetMetadataForProperties(System.Object,System.Type)">
      <summary>Obtiene los metadatos para las propiedades.</summary>
      <returns>Metadatos para las propiedades.</returns>
      <param name="container">Contenedor.</param>
      <param name="containerType">Tipo de contenedor.</param>
    </member>
    <member name="M:System.Web.Mvc.CachedAssociatedMetadataProvider`1.GetMetadataForProperty(System.Func{System.Object},System.Type,System.ComponentModel.PropertyDescriptor)">
      <summary>Devuelve los metadatos para la propiedad especificada.</summary>
      <returns>Los metadatos de la propiedad especificada.</returns>
      <param name="modelAccessor">Descriptor de acceso del modelo.</param>
      <param name="containerType">Tipo de contenedor.</param>
      <param name="propertyDescriptor">Descriptor de la propiedad.</param>
    </member>
    <member name="M:System.Web.Mvc.CachedAssociatedMetadataProvider`1.GetMetadataForProperty(System.Func{System.Object},System.Type,System.String)">
      <summary>Devuelve los metadatos para la propiedad especificada.</summary>
      <returns>Los metadatos de la propiedad especificada.</returns>
      <param name="modelAccessor">Descriptor de acceso del modelo.</param>
      <param name="containerType">Tipo de contenedor.</param>
      <param name="propertyName">El nombre de la propiedad.</param>
    </member>
    <member name="M:System.Web.Mvc.CachedAssociatedMetadataProvider`1.GetMetadataForType(System.Func{System.Object},System.Type)">
      <summary>Devuelve los metadatos en caché para la propiedad especificada mediante el tipo del modelo.</summary>
      <returns>Metadatos en caché de la propiedad especificada mediante el tipo del modelo.</returns>
      <param name="modelAccessor">Descriptor de acceso del modelo.</param>
      <param name="modelType">Tipo del contenedor.</param>
    </member>
    <member name="P:System.Web.Mvc.CachedAssociatedMetadataProvider`1.PrototypeCache">
      <summary>Obtiene la memoria caché de prototipo.</summary>
      <returns>La memoria caché de prototipo.</returns>
    </member>
    <member name="T:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes">
      <summary>Proporciona un contenedor para almacenar los atributos <see cref="N:System.ComponentModel.DataAnnotations" /> en caché.</summary>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.#ctor(System.Attribute[])">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes" />.</summary>
      <param name="attributes">Atributos.</param>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.DataType">
      <summary>Obtiene el tipo de datos.</summary>
      <returns>Tipo de datos.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.Display">
      <summary>Obtiene la presentación.</summary>
      <returns>Presentación.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.DisplayColumn">
      <summary>Obtiene la columna de presentación.</summary>
      <returns>Columna de presentación.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.DisplayFormat">
      <summary>Obtiene la formato de presentación.</summary>
      <returns>Formato de presentación.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.DisplayName">
      <summary>Obtiene el nombre para mostrar.</summary>
      <returns>El nombre para mostrar.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.Editable">
      <summary>Indica si un campo de datos es editable.</summary>
      <returns>true si el campo es editable; en caso contrario, false.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.HiddenInput">
      <summary>Obtiene las entradas ocultas.</summary>
      <returns>Entradas ocultas.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.ReadOnly">
      <summary>Indica si un campo de datos es de solo lectura.</summary>
      <returns>true si el campo es de solo lectura; en caso contrario, false.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.Required">
      <summary>Indica si un campo de datos es obligatorio.</summary>
      <returns>true si el campo es obligatorio; en caso contrario, false.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.ScaffoldColumn">
      <summary>Indica si en un campo de datos se puede aplicar la técnica scaffolding.</summary>
      <returns>true si en el campo se puede aplicar la técnica scaffolding; en caso contrario, false.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.UIHint">
      <summary>Obtiene la sugerencia de la interfaz de usuario.</summary>
      <returns>Sugerencia de la interfaz de usuario</returns>
    </member>
    <member name="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata">
      <summary>Proporciona un contenedor para almacenar <see cref="T:System.Web.Mvc.DataAnnotationsModelMetadata" /> en caché.</summary>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.#ctor(System.Web.Mvc.CachedDataAnnotationsModelMetadata,System.Func{System.Object})">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" /> mediante el prototipo y el acceso de modelo.</summary>
      <param name="prototype">El prototipo.</param>
      <param name="modelAccessor">Descriptor de acceso del modelo.</param>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.#ctor(System.Web.Mvc.CachedDataAnnotationsModelMetadataProvider,System.Type,System.Type,System.String,System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" /> mediante el proveedor, el tipo de contenedor, el tipo de modelo, el nombre de la propiedad y los atributos.</summary>
      <param name="provider">Proveedor.</param>
      <param name="containerType">Tipo de contenedor.</param>
      <param name="modelType">Tipo del modelo.</param>
      <param name="propertyName">El nombre de la propiedad.</param>
      <param name="attributes">Atributos.</param>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeConvertEmptyStringToNull">
      <summary>Obtiene un valor almacenado en caché que indica si las cadenas vacías que se devuelven en formularios deben convertirse en Nada.Si el valor se almacena en caché, se devuelve el valor almacenado en caché; de lo contrario, el valor se recupera de los metadatos del modelo y se almacena en la memoria caché.</summary>
      <returns>Un valor almacenado en caché que indica si las cadenas vacías que se devuelven en formularios deben convertirse en Nada. </returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeDataTypeName">
      <summary>Obtiene metainformación acerca del tipo de datos.Si el valor se almacena en caché, se devuelve el valor almacenado en caché; de lo contrario, el valor se recupera de los metadatos del modelo y se almacena en la memoria caché.</summary>
      <returns>Metainformación acerca del tipo de datos.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeDescription">
      <summary>Obtiene la descripción del modelo.Si el valor se almacena en caché, se devuelve el valor almacenado en caché; de lo contrario, el valor se recupera de los metadatos del modelo y se almacena en la memoria caché.</summary>
      <returns>Descripción del modelo.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeDisplayFormatString">
      <summary>Obtiene la cadena de formato de presentación para el modelo.Si el valor se almacena en caché, se devuelve el valor almacenado en caché; de lo contrario, el valor se recupera de los metadatos del modelo y se almacena en la memoria caché.</summary>
      <returns>Cadena de formato de presentación para el modelo.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeDisplayName">
      <summary>Obtiene el nombre para mostrar del modelo.Si el valor se almacena en caché, se devuelve el valor almacenado en caché; de lo contrario, el valor se recupera de los metadatos del modelo y se almacena en la memoria caché.</summary>
      <returns>Nombre para mostrar del modelo.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeEditFormatString">
      <summary>Obtiene la cadena de formato de edición del modelo.Si el valor se almacena en caché, se devuelve el valor almacenado en caché; de lo contrario, el valor se recupera de los metadatos del modelo y se almacena en la memoria caché.</summary>
      <returns>Cadena de formato de edición del modelo.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeHideSurroundingHtml">
      <summary>Obtiene un valor almacenado en caché que indica si el objeto de modelo se debe representar mediante los elementos HTML asociados.Obtiene un valor almacenado en caché que indica si el objeto de modelo se debe representar mediante los elementos HTML asociados.Si el valor se almacena en caché, se devuelve el valor almacenado en caché; de lo contrario, el valor se recupera de los metadatos del modelo y se almacena en la memoria caché.</summary>
      <returns>Un valor que indica si el objeto de modelo se debe representar mediante los elementos HTML asociados.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeIsReadOnly">
      <summary>Obtiene un valor que indica si el modelo es de solo lectura.Si el valor se almacena en caché, se devuelve el valor almacenado en caché; de lo contrario, el valor se recupera de los metadatos del modelo y se almacena en la memoria caché.</summary>
      <returns>Un valor que indica si el modelo es de solo lectura.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeIsRequired">
      <summary>Obtiene un valor que indica si el modelo es obligatorio.Si el valor se almacena en caché, se devuelve el valor almacenado en caché; de lo contrario, el valor se recupera de los metadatos del modelo y se almacena en la memoria caché.</summary>
      <returns>Un valor que indica si el modelo es obligatorio.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeNullDisplayText">
      <summary>Obtiene la cadena que se va a mostrar para los valores NULL.Si el valor se almacena en caché, se devuelve el valor almacenado en caché; de lo contrario, el valor se recupera de los metadatos del modelo y se almacena en la memoria caché.</summary>
      <returns>Cadena que se va a mostrar para los valores NULL.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeOrder">
      <summary>Obtiene un valor almacenado en caché que representa el orden de los metadatos actuales.Si el valor se almacena en caché, se devuelve el valor almacenado en caché; de lo contrario, el valor se recupera de los metadatos del modelo y se almacena en la memoria caché.</summary>
      <returns>Un valor que representa el orden de los metadatos actuales.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeShortDisplayName">
      <summary>Obtiene un nombre para mostrar corto.Si el valor se almacena en caché, se devuelve el valor almacenado en caché; de lo contrario, el valor se recupera de los metadatos del modelo y se almacena en la memoria caché.</summary>
      <returns>Nombre para mostrar corto.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeShowForDisplay">
      <summary>Obtiene un valor que indica si la propiedad se debería mostrar en vistas de solo lectura, tal como vistas en lista y de detalle.Si el valor se almacena en caché, se devuelve el valor almacenado en caché; de lo contrario, el valor se recupera de los metadatos del modelo y se almacena en la memoria caché.</summary>
      <returns>Un valor que indica si la propiedad se debería mostrar en vistas de solo lectura, tal como vistas en lista y de detalle.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeShowForEdit">
      <summary>Obtiene o establece un valor que indica si el modelo se debe mostrar en las vistas editables.Si el valor se almacena en caché, se devuelve el valor almacenado en caché; de lo contrario, el valor se recupera de los metadatos del modelo y se almacena en la memoria caché.</summary>
      <returns>Devuelve <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeSimpleDisplayText">
      <summary>Obtiene la cadena de presentación simple para el modelo.Si el valor se almacena en caché, se devuelve el valor almacenado en caché; de lo contrario, el valor se recupera de los metadatos del modelo y se almacena en la memoria caché.</summary>
      <returns>Cadena de presentación simple para el modelo.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeTemplateHint">
      <summary>Obtiene una sugerencia que indica qué plantilla se debe usar para este modelo.Si el valor se almacena en caché, se devuelve el valor almacenado en caché; de lo contrario, el valor se recupera de los metadatos del modelo y se almacena en la memoria caché.</summary>
      <returns>Una sugerencia que indica qué plantilla se debe usar para este modelo.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeWatermark">
      <summary>Obtiene un valor que se puede usar como una marca de agua.Si el valor se almacena en caché, se devuelve el valor almacenado en caché; de lo contrario, el valor se recupera de los metadatos del modelo y se almacena en la memoria caché.</summary>
      <returns>Un valor que se puede usar como una marca de agua.</returns>
    </member>
    <member name="T:System.Web.Mvc.CachedDataAnnotationsModelMetadataProvider">
      <summary>Implementa el proveedor de metadatos del modelo predeterminado almacenado en caché para ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadataProvider.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadataProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadataProvider.CreateMetadataFromPrototype(System.Web.Mvc.CachedDataAnnotationsModelMetadata,System.Func{System.Object})">
      <summary>Devuelve un contenedor de instancias reales de la clase de metadatos almacenada en caché según el prototipo y el acceso de modelo.</summary>
      <returns>Un contenedor de instancias reales de la clase de metadatos almacenada en caché.</returns>
      <param name="prototype">El prototipo.</param>
      <param name="modelAccessor">Descriptor de acceso del modelo.</param>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadataProvider.CreateMetadataPrototype(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Type,System.String)">
      <summary>Devuelve una instancia de prototipo de contenedor de la clase de metadatos.</summary>
      <returns>Una instancia de prototipo de contenedor de la clase de metadatos.</returns>
      <param name="attributes">El tipo de atributos.</param>
      <param name="containerType">Tipo de contenedor.</param>
      <param name="modelType">Tipo del modelo.</param>
      <param name="propertyName">El nombre de la propiedad.</param>
    </member>
    <member name="T:System.Web.Mvc.CachedModelMetadata`1">
      <summary>Proporciona un contenedor para metadatos almacenados en caché.</summary>
      <typeparam name="TPrototypeCache">Tipo del contenedor.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.#ctor(System.Web.Mvc.CachedDataAnnotationsModelMetadataProvider,System.Type,System.Type,System.String,`0)">
      <summary>Constructor para crear instancias reales de la clase de metadatos basadas en un prototipo.</summary>
      <param name="provider">Proveedor.</param>
      <param name="containerType">Tipo de contenedor.</param>
      <param name="modelType">Tipo del modelo.</param>
      <param name="propertyName">El nombre de la propiedad.</param>
      <param name="prototypeCache">El prototipo.</param>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.#ctor(System.Web.Mvc.CachedModelMetadata{`0},System.Func{System.Object})">
      <summary>Constructor para crear las instancias de prototipo de la clase de metadatos.</summary>
      <param name="prototype">El prototipo.</param>
      <param name="modelAccessor">Descriptor de acceso del modelo.</param>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeConvertEmptyStringToNull">
      <summary>Este método está protegido, por lo que no puede llamarse directamente.El método se diseño para invalidarse en una clase de derivación, tal como <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Obtiene o establece un valor almacenado en caché que indica si las cadenas vacías que se devuelven en formularios deben convertirse en null.</summary>
      <returns>Valor almacenado en caché que indica si las cadenas vacías que se devuelven en formularios deben convertirse en null.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeDataTypeName">
      <summary>Este método está protegido, por lo que no puede llamarse directamente.El método se diseño para invalidarse en una clase de derivación, tal como <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Obtiene o establece metainformación acerca del tipo de datos.</summary>
      <returns>Metainformación acerca del tipo de datos.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeDescription">
      <summary>Este método está protegido, por lo que no puede llamarse directamente.El método se diseño para invalidarse en una clase de derivación, tal como <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Obtiene o establece la descripción del modelo.</summary>
      <returns>Descripción del modelo.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeDisplayFormatString">
      <summary>Este método está protegido, por lo que no puede llamarse directamente.El método se diseño para invalidarse en una clase de derivación, tal como <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Obtiene o establece la cadena de formato de presentación para el modelo.</summary>
      <returns>Cadena de formato de presentación para el modelo.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeDisplayName">
      <summary>Este método está protegido, por lo que no puede llamarse directamente.El método se diseño para invalidarse en una clase de derivación, tal como <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Obtiene o establece el nombre para mostrar del modelo.</summary>
      <returns>Nombre para mostrar del modelo.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeEditFormatString">
      <summary>Este método está protegido, por lo que no puede llamarse directamente.El método se diseño para invalidarse en una clase de derivación, tal como <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Obtiene o establece la cadena de formato de edición del modelo.</summary>
      <returns>Cadena de formato de edición del modelo.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeHideSurroundingHtml">
      <summary>Este método está protegido, por lo que no puede llamarse directamente.El método se diseño para invalidarse en una clase de derivación, tal como <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Obtiene o establece un valor almacenado en caché que indica si el objeto de modelo se debe representar mediante los elementos HTML asociados.</summary>
      <returns>Un valor almacenado en caché que indica si el objeto de modelo se debe representar mediante los elementos HTML asociados.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeIsReadOnly">
      <summary>Este método está protegido, por lo que no puede llamarse directamente.El método se diseño para invalidarse en una clase de derivación, tal como <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Obtiene o establece un valor almacenado en caché que indica si el modelo es de solo lectura.</summary>
      <returns>Un valor almacenado en caché que indica si el modelo es de solo lectura.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeIsRequired">
      <summary>Este método está protegido, por lo que no puede llamarse directamente.El método se diseño para invalidarse en una clase de derivación, tal como <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Obtiene o establece un valor almacenado en caché que indica si el modelo es obligatorio.</summary>
      <returns>Un valor almacenado en caché que indica si el modelo es obligatorio.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeNullDisplayText">
      <summary>Este método está protegido, por lo que no puede llamarse directamente.El método se diseño para invalidarse en una clase de derivación, tal como <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Obtiene o establece la cadena almacenada en caché que se va a mostrar para los valores NULL.</summary>
      <returns>Cadena almacenada en caché que se va a mostrar para los valores NULL.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeOrder">
      <summary>Este método está protegido, por lo que no puede llamarse directamente.El método se diseño para invalidarse en una clase de derivación, tal como <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Obtiene o establece un valor almacenado en caché que representa el orden de los metadatos actuales.</summary>
      <returns>Un valor almacenado en caché que representa el orden de los metadatos actuales.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeShortDisplayName">
      <summary>Este método está protegido, por lo que no puede llamarse directamente.El método se diseño para invalidarse en una clase de derivación, tal como <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Obtiene o establece un nombre para mostrar corto.</summary>
      <returns>Nombre para mostrar corto.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeShowForDisplay">
      <summary>Este método está protegido, por lo que no puede llamarse directamente.El método se diseño para invalidarse en una clase de derivación, tal como <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Obtiene o establece un valor almacenado en caché que indica si la propiedad se debería mostrar en vistas de solo lectura, tal como vistas en lista y de detalle.</summary>
      <returns>Un valor almacenado en caché que indica si la propiedad se debería mostrar en vistas de solo lectura, tal como vistas en lista y de detalle.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeShowForEdit">
      <summary>Este método está protegido, por lo que no puede llamarse directamente.El método se diseño para invalidarse en una clase de derivación, tal como <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Obtiene o establece un valor almacenado en caché que indica si el modelo se debe mostrar en las vistas editables.</summary>
      <returns>Un valor almacenado en caché que indica si el modelo se debe mostrar en las vistas editables.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeSimpleDisplayText">
      <summary>Este método está protegido, por lo que no puede llamarse directamente.El método se diseño para invalidarse en una clase de derivación, tal como <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Obtiene o establece la cadena almacenada en caché de presentación simple para el modelo.</summary>
      <returns>Cadena almacenada en caché de presentación simple para el modelo.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeTemplateHint">
      <summary>Este método está protegido, por lo que no puede llamarse directamente.El método se diseño para invalidarse en una clase de derivación, tal como <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Obtiene o establece una sugerencia almacenada en caché que indica qué plantilla se debe usar para este modelo.</summary>
      <returns>Una sugerencia almacenada en caché que indica qué plantilla se debe usar para este modelo.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeWatermark">
      <summary>Este método está protegido, por lo que no puede llamarse directamente.El método se diseño para invalidarse en una clase de derivación, tal como <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Obtiene o establece un valor almacenado en caché que se puede usar como una marca de agua.</summary>
      <returns>Un valor almacenado en caché que se puede usar como una marca de agua.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.ConvertEmptyStringToNull">
      <summary>Obtiene o establece un valor almacenado en caché que indica si las cadenas vacías que se devuelven en formularios deben convertirse en null.</summary>
      <returns>Valor almacenado en caché que indica si las cadenas vacías que se devuelven en formularios deben convertirse en null.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.DataTypeName">
      <summary>Obtiene o establece metainformación acerca del tipo de datos.</summary>
      <returns>Metainformación acerca del tipo de datos.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.Description">
      <summary>Obtiene o establece la descripción del modelo.</summary>
      <returns>Descripción del modelo.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.DisplayFormatString">
      <summary>Obtiene o establece la cadena de formato de presentación para el modelo.</summary>
      <returns>Cadena de formato de presentación para el modelo.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.DisplayName">
      <summary>Obtiene o establece el nombre para mostrar del modelo.</summary>
      <returns>Nombre para mostrar del modelo.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.EditFormatString">
      <summary>Obtiene o establece la cadena de formato de edición del modelo.</summary>
      <returns>Cadena de formato de edición del modelo.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.GetSimpleDisplayText">
      <summary>Obtiene o establece la cadena de presentación simple para el modelo.</summary>
      <returns>Cadena de presentación simple para el modelo.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.HideSurroundingHtml">
      <summary>Obtiene o establece un valor que indica si el objeto de modelo se debe representar mediante los elementos HTML asociados.</summary>
      <returns>Un valor que indica si el objeto de modelo se debe representar mediante los elementos HTML asociados.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.IsReadOnly">
      <summary>Obtiene o establece un valor que indica si el modelo es de solo lectura.</summary>
      <returns>Un valor que indica si el modelo es de solo lectura.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.IsRequired">
      <summary>Obtiene o establece un valor que indica si el modelo es obligatorio.</summary>
      <returns>Un valor que indica si el modelo es obligatorio.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.NullDisplayText">
      <summary>Obtiene o establece la cadena que se va a mostrar para los valores NULL.</summary>
      <returns>Cadena que se va a mostrar para los valores NULL.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.Order">
      <summary>Obtiene o establece un valor que representa el orden de los metadatos actuales.</summary>
      <returns>El valor de orden de los metadatos actuales.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.PrototypeCache">
      <summary>Obtiene o establece la memoria caché de prototipo.</summary>
      <returns>La memoria caché de prototipo.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.ShortDisplayName">
      <summary>Obtiene o establece un nombre para mostrar corto.</summary>
      <returns>Nombre para mostrar corto.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.ShowForDisplay">
      <summary>Obtiene o establece un valor que indica si la propiedad se debería mostrar en vistas de solo lectura, tal como vistas en lista y de detalle.</summary>
      <returns>true si el modelo se debe mostrar en las vistas de solo lectura; de lo contrario, false.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.ShowForEdit">
      <summary>Obtiene o establece un valor que indica si el modelo se debe mostrar en las vistas editables.</summary>
      <returns>true si el modelo se debe mostrar en las vistas editables; de lo contrario, false.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.SimpleDisplayText">
      <summary>Obtiene o establece la cadena de presentación simple para el modelo.</summary>
      <returns>Cadena de presentación simple para el modelo.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.TemplateHint">
      <summary>Obtiene o establece una sugerencia que indica qué plantilla se debe usar para este modelo.</summary>
      <returns>Una sugerencia que indica qué plantilla se debe usar para este modelo.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.Watermark">
      <summary>Obtiene o establece un valor que se puede usar como una marca de agua.</summary>
      <returns>Un valor que se puede usar como una marca de agua.</returns>
    </member>
    <member name="T:System.Web.Mvc.CancellationTokenModelBinder">
      <summary>Proporciona un mecanismo para propagar notificaciones de que las operaciones del enlazador de modelos deben cancelarse.</summary>
    </member>
    <member name="M:System.Web.Mvc.CancellationTokenModelBinder.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.CancellationTokenModelBinder" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.CancellationTokenModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Devuelve el token de cancelación predeterminado.</summary>
      <returns>El token de cancelación predeterminado.</returns>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="bindingContext">Contexto de enlace.</param>
    </member>
    <member name="T:System.Web.Mvc.ChildActionOnlyAttribute">
      <summary>Representa un atributo que se usa para indicar que se debería llamar a un método de acción solo como una acción secundaria.</summary>
    </member>
    <member name="M:System.Web.Mvc.ChildActionOnlyAttribute.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.ChildActionOnlyAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ChildActionOnlyAttribute.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>Se llama cuando se necesita autorización.</summary>
      <param name="filterContext">Objeto que encapsula la información necesaria para autorizar el acceso a la acción secundaria.</param>
    </member>
    <member name="T:System.Web.Mvc.ChildActionValueProvider">
      <summary>Representa un proveedor de valores para los valores de las acciones secundarias.</summary>
    </member>
    <member name="M:System.Web.Mvc.ChildActionValueProvider.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.ChildActionValueProvider" />.</summary>
      <param name="controllerContext">Contexto del controlador.</param>
    </member>
    <member name="M:System.Web.Mvc.ChildActionValueProvider.GetValue(System.String)">
      <summary>Recupera un objeto de valor usando la clave especificada.</summary>
      <returns>Objeto de valor para la clave especificada.</returns>
      <param name="key">Clave.</param>
    </member>
    <member name="T:System.Web.Mvc.ChildActionValueProviderFactory">
      <summary>Representa un generador para crear objetos de proveedor para acciones secundarias.</summary>
    </member>
    <member name="M:System.Web.Mvc.ChildActionValueProviderFactory.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.ChildActionValueProviderFactory" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ChildActionValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>Devuelve un objeto <see cref="T:System.Web.Mvc.ChildActionValueProvider" /> para el contexto de controlador especificado.</summary>
      <returns>Un objeto <see cref="T:System.Web.Mvc.ChildActionValueProvider" />.</returns>
      <param name="controllerContext">Contexto del controlador.</param>
    </member>
    <member name="T:System.Web.Mvc.ClientDataTypeModelValidatorProvider">
      <summary>Devuelve los validadores de modelo de tipo de datos de cliente.</summary>
    </member>
    <member name="M:System.Web.Mvc.ClientDataTypeModelValidatorProvider.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.ClientDataTypeModelValidatorProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ClientDataTypeModelValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Devuelve los validadores de modelo de tipo de datos de cliente.</summary>
      <returns>Los validadores de modelo de tipo de datos de cliente.</returns>
      <param name="metadata">Metadatos.</param>
      <param name="context">Contexto.</param>
    </member>
    <member name="P:System.Web.Mvc.ClientDataTypeModelValidatorProvider.ResourceClassKey">
      <summary>Obtiene la clave de clase de recurso.</summary>
      <returns>Clave de clase de recurso.</returns>
    </member>
    <member name="T:System.Web.Mvc.CompareAttribute">
      <summary>Proporciona un atributo que compara dos propiedades de un modelo.</summary>
    </member>
    <member name="M:System.Web.Mvc.CompareAttribute.#ctor(System.String)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.CompareAttribute" />.</summary>
      <param name="otherProperty">Propiedad que se va a comparar con la propiedad actual.</param>
    </member>
    <member name="M:System.Web.Mvc.CompareAttribute.FormatErrorMessage(System.String)">
      <summary>Aplica formato a un mensaje de error en función del campo de datos en el que se produjo el error de comparación.</summary>
      <returns>Mensaje de error con formato.</returns>
      <param name="name">Nombre del campo que provocó el error de validación.</param>
    </member>
    <member name="M:System.Web.Mvc.CompareAttribute.FormatPropertyForClientValidation(System.String)">
      <summary>Da formato a la propiedad de validación de clientes al anteponerle un asterisco (*) y un punto.</summary>
      <returns>La cadena "*." se antepone a la propiedad.</returns>
      <param name="property">Propiedad.</param>
    </member>
    <member name="M:System.Web.Mvc.CompareAttribute.GetClientValidationRules(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Obtiene una lista de reglas de validación de clientes para la comparación de valores de la propiedad mediante los metadatos del modelo y el contexto de controlador especificados.</summary>
      <returns>Lista de reglas de validación de clientes para la comparación de valores.</returns>
      <param name="metadata">Metadatos del modelo.</param>
      <param name="context">Contexto del controlador.</param>
    </member>
    <member name="M:System.Web.Mvc.CompareAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary>Determina si el objeto especificado es igual que el objeto comparado.</summary>
      <returns>null si el valor de la propiedad comparada es igual que el parámetro de valor; de lo contrario, un resultado de validación que contiene el mensaje de error que indica que la comparación produjo un error.</returns>
      <param name="value">Valor del objeto que se va a comparar.</param>
      <param name="validationContext">Contexto de validación.</param>
    </member>
    <member name="P:System.Web.Mvc.CompareAttribute.OtherProperty">
      <summary>Obtiene la propiedad que se va a comparar con la propiedad actual.</summary>
      <returns>Propiedad que se va a comparar con la propiedad actual.</returns>
    </member>
    <member name="P:System.Web.Mvc.CompareAttribute.OtherPropertyDisplayName">
      <summary>Obtiene el nombre para mostrar de las otras propiedades.</summary>
      <returns>El nombre para mostrar de las otras propiedades.</returns>
    </member>
    <member name="T:System.Web.Mvc.ContentResult">
      <summary>Representa un tipo de contenido definido por el usuario que es el resultado de un método de acción.</summary>
    </member>
    <member name="M:System.Web.Mvc.ContentResult.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.ContentResult" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ContentResult.Content">
      <summary>Obtiene o establece el contenido.</summary>
      <returns>Contenido.</returns>
    </member>
    <member name="P:System.Web.Mvc.ContentResult.ContentEncoding">
      <summary>Obtiene o establece la codificación del contenido.</summary>
      <returns>Codificación del contenido.</returns>
    </member>
    <member name="P:System.Web.Mvc.ContentResult.ContentType">
      <summary>Obtiene o establece el tipo de contenido.</summary>
      <returns>Tipo del contenido.</returns>
    </member>
    <member name="M:System.Web.Mvc.ContentResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Habilita el procesamiento del resultado de un método de acción mediante un tipo personalizado que se hereda de la clase <see cref="T:System.Web.Mvc.ActionResult" />.</summary>
      <param name="context">Contexto en el que se ejecuta el resultado.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="context" /> es null.</exception>
    </member>
    <member name="T:System.Web.Mvc.Controller">
      <summary>Proporciona los métodos que responden a las solicitudes HTTP que se realizan para un sitio web MVC ASP.NET.</summary>
    </member>
    <member name="M:System.Web.Mvc.Controller.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.Controller" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.Controller.ActionInvoker">
      <summary>Obtiene el invocador de acción para el controlador.</summary>
      <returns>Invocador de acción.</returns>
    </member>
    <member name="P:System.Web.Mvc.Controller.AsyncManager">
      <summary>Proporciona operaciones asincrónicas.</summary>
      <returns>Devuelve <see cref="T:System.Web.Mvc.Async.AsyncManager" />.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object)">
      <summary>Inicia la ejecución del contexto de solicitud especificado</summary>
      <returns>Devuelve una instancia IAsyncController. </returns>
      <param name="requestContext">Contexto de la solicitud.</param>
      <param name="callback">Devolución.</param>
      <param name="state">Estado.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.BeginExecuteCore(System.AsyncCallback,System.Object)">
      <summary>Comienza a invocar la acción en el contexto del controlador actual.</summary>
      <returns>Devuelve una instancia IAsyncController.</returns>
      <param name="callback">Devolución.</param>
      <param name="state">Estado.</param>
    </member>
    <member name="P:System.Web.Mvc.Controller.Binders">
      <summary>Obtiene o establece el enlazador.</summary>
      <returns>Enlazador.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.Content(System.String)">
      <summary>Crea un objeto de resultado de contenido utilizando una cadena.</summary>
      <returns>Instancia del resultado de contenido.</returns>
      <param name="content">Contenido que se va a escribir en la respuesta.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Content(System.String,System.String)">
      <summary>Crea un objeto de resultado de contenido utilizando una cadena y el tipo de contenido. </summary>
      <returns>Instancia del resultado de contenido.</returns>
      <param name="content">Contenido que se va a escribir en la respuesta.</param>
      <param name="contentType">Tipo de contenido (tipo MIME).</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Content(System.String,System.String,System.Text.Encoding)">
      <summary>Crea un objeto de resultado de contenido utilizando una cadena, el tipo de contenido y la codificación del contenido.</summary>
      <returns>Instancia del resultado de contenido.</returns>
      <param name="content">Contenido que se va a escribir en la respuesta.</param>
      <param name="contentType">Tipo de contenido (tipo MIME).</param>
      <param name="contentEncoding">Codificación del contenido.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.CreateActionInvoker">
      <summary>Crea un invocador de acción.</summary>
      <returns>Un invocador de acción.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.CreateTempDataProvider">
      <summary>Crea un proveedor de datos temporal.</summary>
      <returns>Un proveedor de datos temporal.</returns>
    </member>
    <member name="P:System.Web.Mvc.Controller.DisableAsyncSupport">
      <summary>Deshabilita la compatibilidad asincrónica para proporcionar compatibilidad anterior.</summary>
      <returns>true si la compatibilidad asincrónica está deshabilitada; de lo contrario, false.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.Dispose">
      <summary>Libera todos los recursos utilizados por la instancia actual de la clase <see cref="T:System.Web.Mvc.Controller" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Controller.Dispose(System.Boolean)">
      <summary>Libera los recursos no administrados y, opcionalmente, los recursos administrados.</summary>
      <param name="disposing">true para liberar tanto los recursos administrados como los no administrados; false para liberar únicamente los recursos no administrados.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.EndExecute(System.IAsyncResult)">
      <summary>Finaliza la invocación de la acción en el contexto del controlador actual.</summary>
      <param name="asyncResult">Resultado asincrónico.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.EndExecuteCore(System.IAsyncResult)">
      <summary>Finaliza el núcleo de ejecución.</summary>
      <param name="asyncResult">Resultado asincrónico.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.ExecuteCore">
      <summary>Invoca la acción en el contexto del controlador actual.</summary>
    </member>
    <member name="M:System.Web.Mvc.Controller.File(System.Byte[],System.String)">
      <summary>Crea un objeto <see cref="T:System.Web.Mvc.FileContentResult" /> utilizando el contenido del archivo y el tipo de archivo.</summary>
      <returns>Objeto de resultado de contenido del archivo.</returns>
      <param name="fileContents">Contenido binario que se va a enviar a la respuesta.</param>
      <param name="contentType">Tipo de contenido (tipo MIME).</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.File(System.Byte[],System.String,System.String)">
      <summary>Crea un objeto <see cref="T:System.Web.Mvc.FileContentResult" /> utilizando el contenido del archivo, el tipo de contenido y el nombre del archivo de destino.</summary>
      <returns>Objeto de resultado de contenido del archivo.</returns>
      <param name="fileContents">Contenido binario que se va a enviar a la respuesta.</param>
      <param name="contentType">Tipo de contenido (tipo MIME).</param>
      <param name="fileDownloadName">Nombre de archivo que se va a usar en el cuadro de diálogo de descarga de archivos que se muestra en el explorador.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.File(System.IO.Stream,System.String)">
      <summary>Crea un objeto <see cref="T:System.Web.Mvc.FileStreamResult" /> utilizando el objeto <see cref="T:System.IO.Stream" /> y el tipo de contenido. </summary>
      <returns>Objeto de resultado de contenido del archivo.</returns>
      <param name="fileStream">Secuencia que se va a enviar a la respuesta.</param>
      <param name="contentType">Tipo de contenido (tipo MIME).</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.File(System.IO.Stream,System.String,System.String)">
      <summary>Crea un objeto <see cref="T:System.Web.Mvc.FileStreamResult" /> utilizando el objeto <see cref="T:System.IO.Stream" />, el tipo de contenido y el nombre del archivo de destino. </summary>
      <returns>Objeto de resultado de la secuencia de archivos.</returns>
      <param name="fileStream">Secuencia que se va a enviar a la respuesta.</param>
      <param name="contentType">Tipo de contenido (tipo MIME).</param>
      <param name="fileDownloadName">Nombre de archivo que se va a usar en el cuadro de diálogo de descarga de archivos que se muestra en el explorador.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.File(System.String,System.String)">
      <summary>Crea un objeto <see cref="T:System.Web.Mvc.FilePathResult" /> utilizando el nombre de archivo y el tipo de contenido.</summary>
      <returns>Objeto de resultado de la secuencia de archivos.</returns>
      <param name="fileName">Ruta de acceso del archivo que se va a enviar a la respuesta.</param>
      <param name="contentType">Tipo de contenido (tipo MIME).</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.File(System.String,System.String,System.String)">
      <summary>Crea un objeto <see cref="T:System.Web.Mvc.FilePathResult" /> utilizando el nombre de archivo, el tipo de contenido y el nombre de descarga del archivo.</summary>
      <returns>Objeto de resultado de la secuencia de archivos.</returns>
      <param name="fileName">Ruta de acceso del archivo que se va a enviar a la respuesta.</param>
      <param name="contentType">Tipo de contenido (tipo MIME).</param>
      <param name="fileDownloadName">Nombre de archivo que se va a usar en el cuadro de diálogo de descarga de archivos que se muestra en el explorador.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.HandleUnknownAction(System.String)">
      <summary>Se le llama cuando una solicitud coincide con este controlador, pero no se encuentra ningún método con el nombre de acción especificado en el controlador.</summary>
      <param name="actionName">Nombre de la acción que se ha intentado.</param>
    </member>
    <member name="P:System.Web.Mvc.Controller.HttpContext">
      <summary>Obtiene la información específica de HTTP sobre una solicitud HTTP individual.</summary>
      <returns>Contexto HTTP.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.HttpNotFound">
      <summary>Devuelve una instancia de la clase <see cref="T:System.Web.Mvc.HttpNotFoundResult" />.</summary>
      <returns>Instancia de la clase <see cref="T:System.Web.Mvc.HttpNotFoundResult" />.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.HttpNotFound(System.String)">
      <summary>Devuelve una instancia de la clase <see cref="T:System.Web.Mvc.HttpNotFoundResult" />.</summary>
      <returns>Instancia de la clase <see cref="T:System.Web.Mvc.HttpNotFoundResult" />.</returns>
      <param name="statusDescription">Descripción del estado.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Initialize(System.Web.Routing.RequestContext)">
      <summary>Inicializa datos que quizás no estén disponibles cuando se llame al constructor.</summary>
      <param name="requestContext">Contexto HTTP y datos de la ruta.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.JavaScript(System.String)">
      <summary>Crea un objeto <see cref="T:System.Web.Mvc.JavaScriptResult" />.</summary>
      <returns>Objeto <see cref="T:System.Web.Mvc.JavaScriptResult" /> que escribe el script para la respuesta.</returns>
      <param name="script">Código JavaScript que se va a ejecutar en el cliente.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Json(System.Object)">
      <summary>Crea un objeto <see cref="T:System.Web.Mvc.JsonResult" /> que serializa el objeto especificado en formato JSON (JavaScript Object Notation).</summary>
      <returns>Objeto de resultado JSON que serializa el objeto especificado en formato JSON.El marco ASP.NET MVC escribe en la respuesta el objeto de resultado preparado por este método cuando se ejecuta el objeto.</returns>
      <param name="data">Gráfico de objeto JavaScript que se va a serializar.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Json(System.Object,System.String)">
      <summary>Crea un objeto <see cref="T:System.Web.Mvc.JsonResult" /> que serializa el objeto especificado en formato JSON (JavaScript Object Notation).</summary>
      <returns>Objeto de resultado JSON que serializa el objeto especificado en formato JSON.</returns>
      <param name="data">Gráfico de objeto JavaScript que se va a serializar.</param>
      <param name="contentType">Tipo de contenido (tipo MIME).</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Json(System.Object,System.String,System.Text.Encoding)">
      <summary>Crea un objeto <see cref="T:System.Web.Mvc.JsonResult" /> que serializa el objeto especificado en formato JSON (JavaScript Object Notation).</summary>
      <returns>Objeto de resultado JSON que serializa el objeto especificado en formato JSON.</returns>
      <param name="data">Gráfico de objeto JavaScript que se va a serializar.</param>
      <param name="contentType">Tipo de contenido (tipo MIME).</param>
      <param name="contentEncoding">Codificación del contenido.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Json(System.Object,System.String,System.Text.Encoding,System.Web.Mvc.JsonRequestBehavior)">
      <summary>Crea un objeto <see cref="T:System.Web.Mvc.JsonResult" /> que serializa el objeto especificado al formato de notación de objetos JavaScript (JSON) usando el tipo de contenido, la codificación de contenido y el comportamiento de solicitud JSON.</summary>
      <returns>El objeto de resultado que serializa el objeto especificado en formato JSON.</returns>
      <param name="data">Gráfico de objeto JavaScript que se va a serializar.</param>
      <param name="contentType">Tipo de contenido (tipo MIME).</param>
      <param name="contentEncoding">Codificación del contenido.</param>
      <param name="behavior">Comportamiento de solicitud JSON. </param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Json(System.Object,System.String,System.Web.Mvc.JsonRequestBehavior)">
      <summary>Crea un objeto <see cref="T:System.Web.Mvc.JsonResult" /> que serializa el objeto especificado al formato de notación de objetos JavaScript (JSON) usando el tipo de contenido y el comportamiento de solicitud JSON especificados.</summary>
      <returns>El objeto de resultado que serializa el objeto especificado en formato JSON.</returns>
      <param name="data">Gráfico de objeto JavaScript que se va a serializar.</param>
      <param name="contentType">Tipo de contenido (tipo MIME).</param>
      <param name="behavior">Comportamiento de solicitud JSON.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Json(System.Object,System.Web.Mvc.JsonRequestBehavior)">
      <summary>Crea un objeto <see cref="T:System.Web.Mvc.JsonResult" /> que serializa el objeto especificado al formato de notación de objetos JavaScript (JSON) usando el comportamiento de solicitud JSON especificado.</summary>
      <returns>El objeto de resultado que serializa el objeto especificado en formato JSON.</returns>
      <param name="data">Gráfico de objeto JavaScript que se va a serializar.</param>
      <param name="behavior">Comportamiento de solicitud JSON.</param>
    </member>
    <member name="P:System.Web.Mvc.Controller.ModelState">
      <summary>Obtiene el objeto de diccionario de estados del modelo que contiene el estado del modelo y la validación de enlace del modelo.</summary>
      <returns>Diccionario de estado del modelo.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
      <summary>Se le llama después de invocar al método de acción.</summary>
      <param name="filterContext">Información sobre la solicitud y la acción actuales.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
      <summary>Se le llama antes de invocar al método de acción.</summary>
      <param name="filterContext">Información sobre la solicitud y la acción actuales.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>Se le llama cuando se produce la autorización.</summary>
      <param name="filterContext">Información sobre la solicitud y la acción actuales.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnException(System.Web.Mvc.ExceptionContext)">
      <summary>Se le llama cuando se produce una excepción no controlada en la acción.</summary>
      <param name="filterContext">Información sobre la solicitud y la acción actuales.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)">
      <summary>Se le llama después de ejecutar el resultado de la acción devuelto por un método de acción.</summary>
      <param name="filterContext">Información sobre el resultado de la solicitud y la acción actuales.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)">
      <summary>Se le llama antes de ejecutar el resultado de la acción devuelto por un método de acción.</summary>
      <param name="filterContext">Información sobre el resultado de la solicitud y la acción actuales.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.PartialView">
      <summary>Crea un objeto <see cref="T:System.Web.Mvc.PartialViewResult" /> que presenta una vista parcial.</summary>
      <returns>Un objeto de resultado de vista parcial.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.PartialView(System.Object)">
      <summary>Crea un objeto <see cref="T:System.Web.Mvc.PartialViewResult" /> que presenta una vista parcial utilizando el modelo especificado. </summary>
      <returns>Un objeto de resultado de vista parcial.</returns>
      <param name="model">Modelo presentado por la vista parcial.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.PartialView(System.String)">
      <summary>Crea un objeto <see cref="T:System.Web.Mvc.PartialViewResult" /> que presenta una vista parcial utilizando el nombre de vista especificado. </summary>
      <returns>Un objeto de resultado de vista parcial.</returns>
      <param name="viewName">Nombre de la vista que se presenta para la respuesta.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.PartialView(System.String,System.Object)">
      <summary>Crea un objeto <see cref="T:System.Web.Mvc.PartialViewResult" /> que presenta una vista parcial utilizando el nombre de vista y el modelo especificados. </summary>
      <returns>Un objeto de resultado de vista parcial.</returns>
      <param name="viewName">Nombre de la vista que se presenta para la respuesta.</param>
      <param name="model">Modelo presentado por la vista parcial.</param>
    </member>
    <member name="P:System.Web.Mvc.Controller.Profile">
      <summary>Obtiene el perfil de contexto HTTP.</summary>
      <returns>Perfil de contexto HTTP.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.Redirect(System.String)">
      <summary>Crea un objeto <see cref="T:System.Web.Mvc.RedirectResult" /> que redirige a la dirección URL especificada.</summary>
      <returns>Objeto de resultado de la redirección.</returns>
      <param name="url">Dirección URL a la que se va a redirigir.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectPermanent(System.String)">
      <summary>Devuelve una instancia de la clase <see cref="T:System.Web.Mvc.RedirectResult" /> con la propiedad <see cref="P:System.Web.Mvc.RedirectResult.Permanent" /> establecida en true.</summary>
      <returns>Instancia de la clase <see cref="T:System.Web.Mvc.RedirectResult" /> con la propiedad <see cref="P:System.Web.Mvc.RedirectResult.Permanent" /> establecida en true.</returns>
      <param name="url">Dirección URL a la que se va a redirigir.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToAction(System.String)">
      <summary>Redirige a la acción especificada utilizando el nombre de acción.</summary>
      <returns>Objeto de resultado de la redirección.</returns>
      <param name="actionName">Nombre de la acción.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToAction(System.String,System.Object)">
      <summary>Redirige a la acción especificada utilizando los valores de ruta y nombre de acción.</summary>
      <returns>Objeto de resultado de la redirección.</returns>
      <param name="actionName">Nombre de la acción.</param>
      <param name="routeValues">Parámetros de una ruta. </param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToAction(System.String,System.String)">
      <summary>Redirige a la acción especificada utilizando el nombre de acción y controlador.</summary>
      <returns>Objeto de resultado de la redirección.</returns>
      <param name="actionName">Nombre de la acción.</param>
      <param name="controllerName">Nombre del controlador.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToAction(System.String,System.String,System.Object)">
      <summary>Redirige a la acción especificada utilizando los valores de ruta y el nombre de acción y controlador.</summary>
      <returns>Objeto de resultado de la redirección.</returns>
      <param name="actionName">Nombre de la acción.</param>
      <param name="controllerName">Nombre del controlador.</param>
      <param name="routeValues">Parámetros de una ruta. </param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToAction(System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Redirige a la acción especificada utilizando el diccionario de ruta y el nombre de acción y controlador.</summary>
      <returns>Objeto de resultado de la redirección.</returns>
      <param name="actionName">Nombre de la acción.</param>
      <param name="controllerName">Nombre del controlador.</param>
      <param name="routeValues">Parámetros de una ruta.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToAction(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Redirige a la acción especificada utilizando el diccionario de ruta y el nombre de acción.</summary>
      <returns>Objeto de resultado de la redirección.</returns>
      <param name="actionName">Nombre de la acción.</param>
      <param name="routeValues">Parámetros de una ruta.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String)">
      <summary>Devuelve una instancia de la clase <see cref="T:System.Web.Mvc.RedirectResult" /> con la propiedad <see cref="P:System.Web.Mvc.RedirectResult.Permanent" /> establecida en true usando el nombre de acción especificado.</summary>
      <returns>Una instancia de la clase <see cref="T:System.Web.Mvc.RedirectResult" /> con la propiedad <see cref="P:System.Web.Mvc.RedirectResult.Permanent" /> establecida en true usando el nombre de acción, el nombre de controlador y los valores de ruta especificados.</returns>
      <param name="actionName">Nombre de la acción.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.Object)">
      <summary>Devuelve una instancia de la clase <see cref="T:System.Web.Mvc.RedirectResult" /> con la propiedad <see cref="P:System.Web.Mvc.RedirectResult.Permanent" /> establecida en true usando el nombre de acción y los valores de ruta especificados.</summary>
      <returns>Una instancia de la clase <see cref="T:System.Web.Mvc.RedirectResult" /> con la propiedad <see cref="P:System.Web.Mvc.RedirectResult.Permanent" /> establecida en true usando el nombre de acción y los valores de ruta especificados.</returns>
      <param name="actionName">Nombre de la acción.</param>
      <param name="routeValues">Valores de ruta.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String)">
      <summary>Devuelve una instancia de la clase <see cref="T:System.Web.Mvc.RedirectResult" /> con la propiedad <see cref="P:System.Web.Mvc.RedirectResult.Permanent" /> establecida en true usando el nombre de acción y el nombre de controlador especificados.</summary>
      <returns>Una instancia de la clase <see cref="T:System.Web.Mvc.RedirectResult" /> con la propiedad <see cref="P:System.Web.Mvc.RedirectResult.Permanent" /> establecida en true usando el nombre de acción y el nombre de controlador especificados.</returns>
      <param name="actionName">Nombre de la acción.</param>
      <param name="controllerName">Nombre del controlador.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String,System.Object)">
      <summary>Devuelve una instancia de la clase <see cref="T:System.Web.Mvc.RedirectResult" /> con la propiedad <see cref="P:System.Web.Mvc.RedirectResult.Permanent" /> establecida en true, usando el nombre de acción, el nombre de controlador y los valores de ruta especificados.</summary>
      <returns>Instancia de la clase <see cref="T:System.Web.Mvc.RedirectResult" /> con la propiedad <see cref="P:System.Web.Mvc.RedirectResult.Permanent" /> establecida en true.</returns>
      <param name="actionName">Nombre de la acción.</param>
      <param name="controllerName">Nombre del controlador.</param>
      <param name="routeValues">Valores de ruta.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Devuelve una instancia de la clase <see cref="T:System.Web.Mvc.RedirectResult" /> con la propiedad <see cref="P:System.Web.Mvc.RedirectResult.Permanent" /> establecida en true, usando el nombre de acción, el nombre de controlador y los valores de ruta especificados.</summary>
      <returns>Una instancia de la clase <see cref="T:System.Web.Mvc.RedirectResult" /> con la propiedad <see cref="P:System.Web.Mvc.RedirectResult.Permanent" /> establecida en true usando el nombre de acción, el nombre de controlador y los valores de ruta especificados.</returns>
      <param name="actionName">Nombre de la acción.</param>
      <param name="controllerName">Nombre del controlador.</param>
      <param name="routeValues">Valores de ruta.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Devuelve una instancia de la clase <see cref="T:System.Web.Mvc.RedirectResult" /> con la propiedad <see cref="P:System.Web.Mvc.RedirectResult.Permanent" /> establecida en true usando el nombre de acción y los valores de ruta especificados.</summary>
      <returns>Una instancia de la clase <see cref="T:System.Web.Mvc.RedirectResult" /> con la propiedad <see cref="P:System.Web.Mvc.RedirectResult.Permanent" /> establecida en true usando el nombre de acción y los valores de ruta especificados.</returns>
      <param name="actionName">Nombre de la acción.</param>
      <param name="routeValues">Valores de ruta.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoute(System.Object)">
      <summary>Redirige a la ruta especificada utilizando los valores de ruta especificados.</summary>
      <returns>Objeto de resultado de redirección a una ruta.</returns>
      <param name="routeValues">Parámetros de una ruta. </param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoute(System.String)">
      <summary>Redirige a la ruta especificada utilizando el nombre de ruta.</summary>
      <returns>Objeto de resultado de redirección a una ruta.</returns>
      <param name="routeName">Nombre de la ruta.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoute(System.String,System.Object)">
      <summary>Redirige a la ruta especificada utilizando los valores de ruta y nombre de ruta.</summary>
      <returns>Objeto de resultado de redirección a una ruta.</returns>
      <param name="routeName">Nombre de la ruta.</param>
      <param name="routeValues">Parámetros de una ruta. </param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Redirige a la ruta especificada utilizando el nombre de ruta y el diccionario de ruta.</summary>
      <returns>Objeto de resultado de redirección a una ruta.</returns>
      <param name="routeName">Nombre de la ruta.</param>
      <param name="routeValues">Parámetros de una ruta.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoute(System.Web.Routing.RouteValueDictionary)">
      <summary>Redirige a la ruta especificada utilizando el diccionario de ruta.</summary>
      <returns>Objeto de resultado de redirección a una ruta.</returns>
      <param name="routeValues">Parámetros de una ruta.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoutePermanent(System.Object)">
      <summary>Devuelve una instancia de la clase <see cref="T:System.Web.Mvc.RedirectResult" /> con la propiedad <see cref="P:System.Web.Mvc.RedirectResult.Permanent" /> establecida en true usando los valores de ruta especificados.</summary>
      <returns>Devuelve una instancia de la clase <see cref="T:System.Web.Mvc.RedirectResult" /> con la propiedad <see cref="P:System.Web.Mvc.RedirectResult.Permanent" /> establecida en true.</returns>
      <param name="routeValues">Nombre de la ruta.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String)">
      <summary>Devuelve una instancia de la clase <see cref="T:System.Web.Mvc.RedirectResult" /> con la propiedad <see cref="P:System.Web.Mvc.RedirectResult.Permanent" /> establecida en true usando los valores de nombre especificados.</summary>
      <returns>Devuelve una instancia de la clase <see cref="T:System.Web.Mvc.RedirectResult" /> con la propiedad <see cref="P:System.Web.Mvc.RedirectResult.Permanent" /> establecida en true usando los valores de nombre especificados.</returns>
      <param name="routeName">Nombre de la ruta.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String,System.Object)">
      <summary>Devuelve una instancia de la clase <see cref="T:System.Web.Mvc.RedirectResult" /> con la propiedad <see cref="P:System.Web.Mvc.RedirectResult.Permanent" /> establecida en true usando el nombre de ruta y los valores de ruta especificados.</summary>
      <returns>Instancia de la clase <see cref="T:System.Web.Mvc.RedirectResult" /> con la propiedad <see cref="P:System.Web.Mvc.RedirectResult.Permanent" /> establecida en true.</returns>
      <param name="routeName">Nombre de la ruta.</param>
      <param name="routeValues">Valores de ruta.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Devuelve una instancia de la clase <see cref="T:System.Web.Mvc.RedirectResult" /> con la propiedad <see cref="P:System.Web.Mvc.RedirectResult.Permanent" /> establecida en true usando el nombre de ruta y los valores de ruta especificados.</summary>
      <returns>Una instancia de la clase <see cref="T:System.Web.Mvc.RedirectResult" /> con la propiedad <see cref="P:System.Web.Mvc.RedirectResult.Permanent" /> establecida en true usando el nombre de ruta y los valores de ruta especificados.</returns>
      <param name="routeName">Nombre de la ruta.</param>
      <param name="routeValues">Valores de ruta.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary)">
      <summary>Devuelve una instancia de la clase <see cref="T:System.Web.Mvc.RedirectResult" /> con la propiedad <see cref="P:System.Web.Mvc.RedirectResult.Permanent" /> establecida en true usando los valores de ruta especificados.</summary>
      <returns>Instancia de la clase <see cref="T:System.Web.Mvc.RedirectResult" /> con la propiedad <see cref="P:System.Web.Mvc.RedirectResult.Permanent" /> establecida en true usando los valores de ruta especificados.</returns>
      <param name="routeValues">Valores de ruta.</param>
    </member>
    <member name="P:System.Web.Mvc.Controller.Request">
      <summary>Obtiene el objeto <see cref="T:System.Web.HttpRequestBase" /> de la solicitud HTTP actual.</summary>
      <returns>Objeto de solicitud.</returns>
    </member>
    <member name="P:System.Web.Mvc.Controller.Response">
      <summary>Obtiene el objeto <see cref="T:System.Web.HttpResponseBase" /> de la respuesta HTTP actual.</summary>
      <returns>Objeto de respuesta.</returns>
    </member>
    <member name="P:System.Web.Mvc.Controller.RouteData">
      <summary>Obtiene los datos de ruta de la solicitud actual.</summary>
      <returns>Datos de la ruta.</returns>
    </member>
    <member name="P:System.Web.Mvc.Controller.Server">
      <summary>Obtiene el objeto <see cref="T:System.Web.HttpServerUtilityBase" /> que proporciona los métodos que se utilizan durante el procesamiento de solicitudes web.</summary>
      <returns>Objeto de servidor HTTP.</returns>
    </member>
    <member name="P:System.Web.Mvc.Controller.Session">
      <summary>Obtiene el objeto <see cref="T:System.Web.HttpSessionStateBase" /> de la solicitud HTTP actual.</summary>
      <returns>Objeto de estado de sesión HTTP de la solicitud HTTP actual.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#Async#IAsyncController#BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object)">
      <summary>Inicia una nueva instancia de la clase <see cref="M:System.Web.Mvc.Controller.System#Web#Mvc#Async#IAsyncController#BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object)" />.</summary>
      <returns>Devuelve una instancia IAsyncController.</returns>
      <param name="requestContext">Contexto de la solicitud.</param>
      <param name="callback">Devolución.</param>
      <param name="state">Estado.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#Async#IAsyncController#EndExecute(System.IAsyncResult)">
      <summary>Finaliza la tarea de ejecución.</summary>
      <param name="asyncResult">Resultado asincrónico.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#IActionFilter#OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
      <summary>Esta API admite la infraestructura de ASP.NET MVC y no está previsto su uso directo desde el código.Este método llama al método <see cref="M:System.Web.Mvc.Controller.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)" />.</summary>
      <param name="filterContext">Contexto del filtro.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#IActionFilter#OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
      <summary>Esta API admite la infraestructura de ASP.NET MVC y no está previsto su uso directo desde el código.Este método llama al método <see cref="M:System.Web.Mvc.Controller.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)" />.</summary>
      <param name="filterContext">Contexto del filtro.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#IAuthorizationFilter#OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>Esta API admite la infraestructura de ASP.NET MVC y no está previsto su uso directo desde el código.Este método llama al método <see cref="M:System.Web.Mvc.Controller.OnAuthorization(System.Web.Mvc.AuthorizationContext)" />.</summary>
      <param name="filterContext">Contexto del filtro.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#IExceptionFilter#OnException(System.Web.Mvc.ExceptionContext)">
      <summary>Esta API admite la infraestructura de ASP.NET MVC y no está previsto su uso directo desde el código.Este método llama al método <see cref="M:System.Web.Mvc.Controller.OnException(System.Web.Mvc.ExceptionContext)" />.</summary>
      <param name="filterContext">Contexto del filtro.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#IResultFilter#OnResultExecuted(System.Web.Mvc.ResultExecutedContext)">
      <summary>Esta API admite la infraestructura de ASP.NET MVC y no está previsto su uso directo desde el código.Este método llama al método <see cref="M:System.Web.Mvc.Controller.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)" />.</summary>
      <param name="filterContext">Contexto del filtro.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#IResultFilter#OnResultExecuting(System.Web.Mvc.ResultExecutingContext)">
      <summary>Esta API admite la infraestructura de ASP.NET MVC y no está previsto su uso directo desde el código.Este método llama al método <see cref="M:System.Web.Mvc.Controller.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)" />.</summary>
      <param name="filterContext">Contexto del filtro.</param>
    </member>
    <member name="P:System.Web.Mvc.Controller.TempDataProvider">
      <summary>Obtiene el objeto de proveedor de datos temporales que se utiliza para almacenar los datos para la solicitud siguiente.</summary>
      <returns>Proveedor de datos temporales.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0)">
      <summary>Actualiza la instancia de modelo especificada con los valores del proveedor de valores actual del controlador.</summary>
      <returns>true si la actualización se lleva a cabo correctamente; en caso contrario, false.</returns>
      <param name="model">Instancia de modelo que se va a actualizar.</param>
      <typeparam name="TModel">Tipo del objeto de modelo.</typeparam>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="model" /> o la propiedad <see cref="P:System.Web.Mvc.ControllerBase.ValueProvider" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String)">
      <summary>Actualiza la instancia de modelo especificada con los valores del proveedor de valores actual y un prefijo del controlador.</summary>
      <returns>true si la actualización se lleva a cabo correctamente; en caso contrario, false.</returns>
      <param name="model">Instancia de modelo que se va a actualizar.</param>
      <param name="prefix">Prefijo que se va a utilizar al buscar valores en el proveedor de valores.</param>
      <typeparam name="TModel">Tipo del objeto de modelo.</typeparam>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="model" /> o la propiedad <see cref="P:System.Web.Mvc.ControllerBase.ValueProvider" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[])">
      <summary>Actualiza la instancia de modelo especificada con los valores del proveedor de valores actual, un prefijo y las propiedades incluidas del controlador.</summary>
      <returns>true si la actualización se lleva a cabo correctamente; en caso contrario, false.</returns>
      <param name="model">Instancia de modelo que se va a actualizar.</param>
      <param name="prefix">Prefijo que se va a utilizar al buscar valores en el proveedor de valores.</param>
      <param name="includeProperties">Lista de propiedades del modelo que se va a actualizar.</param>
      <typeparam name="TModel">Tipo del objeto de modelo.</typeparam>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="model" /> o la propiedad <see cref="P:System.Web.Mvc.ControllerBase.ValueProvider" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.String[])">
      <summary>Actualiza la instancia de modelo especificada usando valores del proveedor de valores actual del controlador, un prefijo, una lista de propiedades para excluir y una lista de propiedades para incluir.</summary>
      <returns>true si la actualización se lleva a cabo correctamente; en caso contrario, false.</returns>
      <param name="model">Instancia de modelo que se va a actualizar.</param>
      <param name="prefix">Prefijo que se va a utilizar al buscar valores en el proveedor de valores.</param>
      <param name="includeProperties">Lista de propiedades del modelo que se va a actualizar.</param>
      <param name="excludeProperties">Lista de las propiedades que se van a excluir explícitamente de la actualización.Se excluyen aunque aparezcan en la lista del parámetro <paramref name="includeProperties" />.</param>
      <typeparam name="TModel">Tipo del objeto de modelo.</typeparam>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="model" /> o la propiedad <see cref="P:System.Web.Mvc.ControllerBase.ValueProvider" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.String[],System.Web.Mvc.IValueProvider)">
      <summary>Actualiza la instancia de modelo especificada usando valores del proveedor de valores, un prefijo, una lista de propiedades para excluir y una lista de propiedades para incluir.</summary>
      <returns>true si la actualización se lleva a cabo correctamente; en caso contrario, false.</returns>
      <param name="model">Instancia de modelo que se va a actualizar.</param>
      <param name="prefix">Prefijo que se va a utilizar al buscar valores en el proveedor de valores.</param>
      <param name="includeProperties">Lista de propiedades del modelo que se va a actualizar.</param>
      <param name="excludeProperties">Lista de las propiedades que se van a excluir explícitamente de la actualización.Se excluyen aunque aparezcan en la lista del parámetro <paramref name="includeProperties" />.</param>
      <param name="valueProvider">Diccionario de valores que se utiliza para actualizar el modelo.</param>
      <typeparam name="TModel">Tipo del objeto de modelo.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.Web.Mvc.IValueProvider)">
      <summary>Actualiza la instancia de modelo especificada con los valores del proveedor de valores, un prefijo y las propiedades incluidas.</summary>
      <returns>true si la actualización se lleva a cabo correctamente; en caso contrario, false.</returns>
      <param name="model">Instancia de modelo que se va a actualizar.</param>
      <param name="prefix">Prefijo que se va a utilizar al buscar valores en el proveedor de valores.</param>
      <param name="includeProperties">Lista de propiedades del modelo que se va a actualizar.</param>
      <param name="valueProvider">Diccionario de valores que se utiliza para actualizar el modelo.</param>
      <typeparam name="TModel">Tipo del objeto de modelo.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.Web.Mvc.IValueProvider)">
      <summary>Actualiza la instancia de modelo especificada con los valores del proveedor de valores y un prefijo.</summary>
      <returns>true si la actualización se lleva a cabo correctamente; en caso contrario, false.</returns>
      <param name="model">Instancia de modelo que se va a actualizar.</param>
      <param name="prefix">Prefijo que se va a utilizar al buscar valores en el proveedor de valores.</param>
      <param name="valueProvider">Diccionario de valores que se utiliza para actualizar el modelo.</param>
      <typeparam name="TModel">Tipo del objeto de modelo.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String[])">
      <summary>Actualiza la instancia de modelo especificada con los valores del proveedor de valores actual y las propiedades incluidas del controlador.</summary>
      <returns>true si la actualización se lleva a cabo correctamente; en caso contrario, false.</returns>
      <param name="model">Instancia de modelo que se va a actualizar.</param>
      <param name="includeProperties">Lista de propiedades del modelo que se va a actualizar.</param>
      <typeparam name="TModel">Tipo del objeto de modelo.</typeparam>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="model" /> o la propiedad <see cref="P:System.Web.Mvc.ControllerBase.ValueProvider" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String[],System.Web.Mvc.IValueProvider)">
      <summary>Actualiza la instancia de modelo especificada usando valores del proveedor de valores y una lista de propiedades para incluir.</summary>
      <returns>true si la actualización se lleva a cabo correctamente; en caso contrario, false.</returns>
      <param name="model">Instancia de modelo que se va a actualizar.</param>
      <param name="includeProperties">Lista de propiedades del modelo que se va a actualizar.</param>
      <param name="valueProvider">Diccionario de valores que se utiliza para actualizar el modelo.</param>
      <typeparam name="TModel">Tipo del objeto de modelo.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.Web.Mvc.IValueProvider)">
      <summary>Actualiza la instancia de modelo especificada con los valores del proveedor de valores.</summary>
      <returns>true si la actualización se lleva a cabo correctamente; en caso contrario, false.</returns>
      <param name="model">Instancia de modelo que se va a actualizar.</param>
      <param name="valueProvider">Diccionario de valores que se utiliza para actualizar el modelo.</param>
      <typeparam name="TModel">Tipo del objeto de modelo.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryValidateModel(System.Object)">
      <summary>Valida la instancia de modelo especificada.</summary>
      <returns>true si la validación del modelo se lleva a cabo correctamente; en caso contrario, false.</returns>
      <param name="model">Instancia de modelo que se va a validar.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryValidateModel(System.Object,System.String)">
      <summary>Valida la instancia de modelo especificada utilizando un prefijo HTML.</summary>
      <returns>true si la validación del modelo se lleva a cabo correctamente; en caso contrario, false.</returns>
      <param name="model">El modelo que se va a validar.</param>
      <param name="prefix">Prefijo que se va a utilizar al buscar valores en el proveedor de modelos.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0)">
      <summary>Actualiza la instancia de modelo especificada con los valores del proveedor de valores actual del controlador.</summary>
      <param name="model">Instancia de modelo que se va a actualizar.</param>
      <typeparam name="TModel">Tipo del objeto de modelo.</typeparam>
      <exception cref="T:System.InvalidOperationException">El modelo no se actualizó correctamente.</exception>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String)">
      <summary>Actualiza la instancia de modelo especificada con los valores del proveedor de valores actual y un prefijo del controlador.</summary>
      <param name="model">Instancia de modelo que se va a actualizar.</param>
      <param name="prefix">Prefijo que se va a utilizar al buscar valores en el proveedor de valores.</param>
      <typeparam name="TModel">Tipo del objeto de modelo.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[])">
      <summary>Actualiza la instancia de modelo especificada con los valores del proveedor de valores actual, un prefijo y las propiedades incluidas del controlador.</summary>
      <param name="model">Instancia de modelo que se va a actualizar.</param>
      <param name="prefix">Prefijo que se va a utilizar al buscar valores en el proveedor de valores.</param>
      <param name="includeProperties">Lista de propiedades del modelo que se va a actualizar.</param>
      <typeparam name="TModel">Tipo del objeto de modelo.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.String[])">
      <summary>Actualiza la instancia de modelo especificada usando valores del proveedor de valores actual del controlador, un prefijo, una lista de propiedades para excluir y una lista de propiedades para incluir.</summary>
      <param name="model">Instancia de modelo que se va a actualizar.</param>
      <param name="prefix">Prefijo que se va a utilizar al buscar valores en el proveedor de valores.</param>
      <param name="includeProperties">Lista de propiedades del modelo que se va a actualizar.</param>
      <param name="excludeProperties">Lista de las propiedades que se van a excluir explícitamente de la actualización.Se excluyen aunque aparezcan en la lista del parámetro <paramref name="includeProperties" />.</param>
      <typeparam name="TModel">Tipo del objeto de modelo.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.String[],System.Web.Mvc.IValueProvider)">
      <summary>Actualiza la instancia de modelo especificada usando valores del proveedor de valores, un prefijo, una lista de propiedades para excluir y una lista de propiedades para incluir.</summary>
      <param name="model">Instancia de modelo que se va a actualizar.</param>
      <param name="prefix">Prefijo que se va a utilizar al buscar valores en el proveedor de valores.</param>
      <param name="includeProperties">Lista de propiedades del modelo que se va a actualizar.</param>
      <param name="excludeProperties">Lista de las propiedades que se van a excluir explícitamente de la actualización.Se excluyen aunque aparezcan en la lista del parámetro <paramref name="includeProperties" />.</param>
      <param name="valueProvider">Diccionario de valores que se utiliza para actualizar el modelo.</param>
      <typeparam name="TModel">Tipo del objeto de modelo.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.Web.Mvc.IValueProvider)">
      <summary>Actualiza la instancia de modelo especificada usando valores del proveedor de valores, un prefijo y una lista de propiedades para incluir.</summary>
      <param name="model">Instancia de modelo que se va a actualizar.</param>
      <param name="prefix">Prefijo que se va a utilizar al buscar valores en el proveedor de valores.</param>
      <param name="includeProperties">Lista de propiedades del modelo que se va a actualizar.</param>
      <param name="valueProvider">Diccionario de valores que se utiliza para actualizar el modelo.</param>
      <typeparam name="TModel">Tipo del objeto de modelo.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.Web.Mvc.IValueProvider)">
      <summary>Actualiza la instancia de modelo especificada con los valores del proveedor de valores y un prefijo.</summary>
      <param name="model">Instancia de modelo que se va a actualizar.</param>
      <param name="prefix">Prefijo que se va a utilizar al buscar valores en el proveedor de valores.</param>
      <param name="valueProvider">Diccionario de valores que se utiliza para actualizar el modelo.</param>
      <typeparam name="TModel">Tipo del objeto de modelo.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String[])">
      <summary>Actualiza la instancia de modelo especificada con los valores del proveedor de valores actual del objeto controlador.</summary>
      <param name="model">Instancia de modelo que se va a actualizar.</param>
      <param name="includeProperties">Lista de propiedades del modelo que se va a actualizar.</param>
      <typeparam name="TModel">Tipo del objeto de modelo.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String[],System.Web.Mvc.IValueProvider)">
      <summary>Actualiza la instancia de modelo especificada usando valores del proveedor de valores, un prefijo y una lista de propiedades para incluir.</summary>
      <param name="model">Instancia de modelo que se va a actualizar.</param>
      <param name="includeProperties">Lista de propiedades del modelo que se va a actualizar.</param>
      <param name="valueProvider">Diccionario de valores que se utiliza para actualizar el modelo.</param>
      <typeparam name="TModel">Tipo del objeto de modelo.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.Web.Mvc.IValueProvider)">
      <summary>Actualiza la instancia de modelo especificada con los valores del proveedor de valores.</summary>
      <param name="model">Instancia de modelo que se va a actualizar.</param>
      <param name="valueProvider">Diccionario de valores que se utiliza para actualizar el modelo.</param>
      <typeparam name="TModel">Tipo del objeto de modelo.</typeparam>
    </member>
    <member name="P:System.Web.Mvc.Controller.Url">
      <summary>Obtiene el objeto auxiliar de direcciones URL que se usa para generar las direcciones URL mediante el enrutamiento.</summary>
      <returns>Objeto auxiliar URL.</returns>
    </member>
    <member name="P:System.Web.Mvc.Controller.User">
      <summary>Obtiene la información de seguridad del usuario para la solicitud HTTP actual.</summary>
      <returns>Información de seguridad del usuario para la solicitud HTTP actual.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.ValidateModel(System.Object)">
      <summary>Valida la instancia de modelo especificada.</summary>
      <param name="model">El modelo que se va a validar.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.ValidateModel(System.Object,System.String)">
      <summary>Valida la instancia de modelo especificada utilizando un prefijo HTML.</summary>
      <param name="model">El modelo que se va a validar.</param>
      <param name="prefix">Prefijo que se va a utilizar al buscar valores en el proveedor de modelos.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.View">
      <summary>Crea un objeto <see cref="T:System.Web.Mvc.ViewResult" /> que presenta una vista para la respuesta.</summary>
      <returns>Resultado de la vista que presenta una vista para la respuesta.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.View(System.Object)">
      <summary>Crea un objeto <see cref="T:System.Web.Mvc.ViewResult" /> utilizando el modelo que presenta una vista para la respuesta.</summary>
      <returns>Resultado de la vista.</returns>
      <param name="model">Modelo presentado por la vista.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.View(System.String)">
      <summary>Crea un objeto <see cref="T:System.Web.Mvc.ViewResult" /> utilizando el nombre de vista que presenta una vista.</summary>
      <returns>Resultado de la vista.</returns>
      <param name="viewName">Nombre de la vista que se presenta para la respuesta.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.View(System.String,System.Object)">
      <summary>Crea un objeto <see cref="T:System.Web.Mvc.ViewResult" /> utilizando el nombre de vista y el modelo que presenta una vista para la respuesta.</summary>
      <returns>Resultado de la vista.</returns>
      <param name="viewName">Nombre de la vista que se presenta para la respuesta.</param>
      <param name="model">Modelo presentado por la vista.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.View(System.String,System.String)">
      <summary>Crea un objeto <see cref="T:System.Web.Mvc.ViewResult" /> utilizando el nombre de vista y el nombre de la página maestra que presenta una vista para la respuesta.</summary>
      <returns>Resultado de la vista.</returns>
      <param name="viewName">Nombre de la vista que se presenta para la respuesta.</param>
      <param name="masterName">Nombre de la página maestra o plantilla que se va a usar cuando se presente la vista.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.View(System.String,System.String,System.Object)">
      <summary>Crea un objeto <see cref="T:System.Web.Mvc.ViewResult" /> utilizando el nombre de vista, el nombre de la página maestra y el modelo que presenta una vista.</summary>
      <returns>Resultado de la vista.</returns>
      <param name="viewName">Nombre de la vista que se presenta para la respuesta.</param>
      <param name="masterName">Nombre de la página maestra o plantilla que se va a usar cuando se presente la vista.</param>
      <param name="model">Modelo presentado por la vista.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.View(System.Web.Mvc.IView)">
      <summary>Crea un objeto <see cref="T:System.Web.Mvc.ViewResult" /> que presenta el objeto <see cref="T:System.Web.Mvc.IView" /> especificado.</summary>
      <returns>Resultado de la vista.</returns>
      <param name="view">Vista que se presenta para la respuesta.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.View(System.Web.Mvc.IView,System.Object)">
      <summary>Crea un objeto <see cref="T:System.Web.Mvc.ViewResult" /> que presenta el objeto <see cref="T:System.Web.Mvc.IView" /> especificado.</summary>
      <returns>Resultado de la vista.</returns>
      <param name="view">Vista que se presenta para la respuesta.</param>
      <param name="model">Modelo presentado por la vista.</param>
    </member>
    <member name="P:System.Web.Mvc.Controller.ViewEngineCollection">
      <summary>Obtiene la colección del motor de vista.</summary>
      <returns>Colección del motor de vista.</returns>
    </member>
    <member name="T:System.Web.Mvc.ControllerActionInvoker">
      <summary>Representa una clase responsable de invocar los métodos de acción de un controlador.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.ControllerActionInvoker" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ControllerActionInvoker.Binders">
      <summary>Obtiene o establece los enlazadores de modelos asociados a la acción.</summary>
      <returns>Enlazadores de modelos asociados a la acción.</returns>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.CreateActionResult(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor,System.Object)">
      <summary>Crea el resultado de la acción.</summary>
      <returns>Objeto resultado de la acción.</returns>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="actionDescriptor">Descriptor de la acción.</param>
      <param name="actionReturnValue">Valor devuelto de la acción.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.FindAction(System.Web.Mvc.ControllerContext,System.Web.Mvc.ControllerDescriptor,System.String)">
      <summary>Busca la información sobre el método de la acción.</summary>
      <returns>Información acerca del método de la acción.</returns>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="controllerDescriptor">Descriptor del controlador.</param>
      <param name="actionName">Nombre de la acción.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.GetControllerDescriptor(System.Web.Mvc.ControllerContext)">
      <summary>Recupera información acerca del controlador mediante el contexto del controlador especificado.</summary>
      <returns>Información acerca del controlador.</returns>
      <param name="controllerContext">Contexto del controlador.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.GetFilters(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Recupera información acerca de los filtros de acción.</summary>
      <returns>Información sobre los filtros de la acción.</returns>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="actionDescriptor">Descriptor de la acción.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.GetParameterValue(System.Web.Mvc.ControllerContext,System.Web.Mvc.ParameterDescriptor)">
      <summary>Obtiene el valor del parámetro de método de acción especificado.</summary>
      <returns>Valor del parámetro de método de acción.</returns>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="parameterDescriptor">Descriptor del parámetro.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.GetParameterValues(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Obtiene los valores de los parámetros de método de acción.</summary>
      <returns>Valores de los parámetros de método de acción.</returns>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="actionDescriptor">Descriptor de la acción.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeAction(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Invoca la acción especificada mediante el contexto del controlador especificado.</summary>
      <returns>Resultado de ejecutar la acción.</returns>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="actionName">Nombre de la acción que se va a invocar.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="controllerContext" /> es null.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="actionName" /> es null o está vacío.</exception>
      <exception cref="T:System.Threading.ThreadAbortException">El subproceso se anuló durante la invocación de la acción.</exception>
      <exception cref="T:System.Exception">Se produjo un error no especificado durante la invocación de la acción.</exception>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeActionMethod(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Invoca el método de la acción especificada mediante los parámetros especificados y el contexto del controlador.</summary>
      <returns>Resultado de ejecutar el método de la acción.</returns>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="actionDescriptor">Descriptor de la acción.</param>
      <param name="parameters">Parámetros.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodWithFilters(System.Web.Mvc.ControllerContext,System.Collections.Generic.IList{System.Web.Mvc.IActionFilter},System.Web.Mvc.ActionDescriptor,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Invoca el método de la acción especificada mediante los parámetros especificados, el contexto del controlador y los filtros de acción.</summary>
      <returns>Contexto para el método ActionExecuted de la clase <see cref="T:System.Web.Mvc.ActionFilterAttribute" />.</returns>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="filters">Filtros de acción.</param>
      <param name="actionDescriptor">Descriptor de la acción.</param>
      <param name="parameters">Parámetros.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeActionResult(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionResult)">
      <summary>Invoca el resultado de la acción especificada mediante el contexto del controlador especificado.</summary>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="actionResult">Resultado de la acción.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeActionResultWithFilters(System.Web.Mvc.ControllerContext,System.Collections.Generic.IList{System.Web.Mvc.IResultFilter},System.Web.Mvc.ActionResult)">
      <summary>Invoca el resultado de la acción especificada mediante los filtros de acción especificados y el contexto del controlador.</summary>
      <returns>Contexto para el método ResultExecuted de la clase <see cref="T:System.Web.Mvc.ActionFilterAttribute" />.</returns>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="filters">Filtros de acción.</param>
      <param name="actionResult">Resultado de la acción.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeAuthorizationFilters(System.Web.Mvc.ControllerContext,System.Collections.Generic.IList{System.Web.Mvc.IAuthorizationFilter},System.Web.Mvc.ActionDescriptor)">
      <summary>Invoca los filtros de autorización especificados mediante el descriptor de acción especificado y el contexto del controlador.</summary>
      <returns>Contexto para el objeto <see cref="T:System.Web.Mvc.AuthorizeAttribute" />.</returns>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="filters">Filtros de autorización.</param>
      <param name="actionDescriptor">Descriptor de la acción.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeExceptionFilters(System.Web.Mvc.ControllerContext,System.Collections.Generic.IList{System.Web.Mvc.IExceptionFilter},System.Exception)">
      <summary>Invoca los filtros de excepciones especificados mediante la excepción especificada y el contexto del controlador.</summary>
      <returns>Contexto para el objeto <see cref="T:System.Web.Mvc.HandleErrorAttribute" />.</returns>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="filters">Filtros de excepciones.</param>
      <param name="exception">Excepción.</param>
    </member>
    <member name="T:System.Web.Mvc.ControllerBase">
      <summary>Representa la clase base para todos los controladores MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerBase.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.ControllerBase" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ControllerBase.ControllerContext">
      <summary>Obtiene o establece el contexto del controlador.</summary>
      <returns>Contexto del controlador.</returns>
    </member>
    <member name="M:System.Web.Mvc.ControllerBase.Execute(System.Web.Routing.RequestContext)">
      <summary>Ejecuta el contexto de solicitud especificado.</summary>
      <param name="requestContext">Contexto de la solicitud.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="requestContext" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ControllerBase.ExecuteCore">
      <summary>Ejecuta la solicitud.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerBase.Initialize(System.Web.Routing.RequestContext)">
      <summary>Inicializa el contexto de solicitud especificado.</summary>
      <param name="requestContext">Contexto de la solicitud.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerBase.System#Web#Mvc#IController#Execute(System.Web.Routing.RequestContext)">
      <summary>Ejecuta el contexto de solicitud especificado.</summary>
      <param name="requestContext">Contexto de la solicitud.</param>
    </member>
    <member name="P:System.Web.Mvc.ControllerBase.TempData">
      <summary>Obtiene o establece el diccionario para datos temporales.</summary>
      <returns>Diccionario para datos temporales.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerBase.ValidateRequest">
      <summary>Obtiene o establece un valor que indica si está habilitada la validación de solicitudes para esta solicitud.</summary>
      <returns>true si la validación está habilitada para esta solicitud; en caso contrario, false.El valor predeterminado es true.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerBase.ValueProvider">
      <summary>Obtiene o establece el proveedor de valor para el controlador.</summary>
      <returns>Proveedor de valor para el controlador.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerBase.ViewBag">
      <summary>Obtiene el diccionario de datos de vista dinámicos.</summary>
      <returns>Diccionario de datos de vista dinámicos.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerBase.ViewData">
      <summary>Obtiene o establece el diccionario para datos de vista.</summary>
      <returns>Diccionario para los datos de la vista.</returns>
    </member>
    <member name="T:System.Web.Mvc.ControllerBuilder">
      <summary>Representa una clase que es responsable de compilar un controlador dinámicamente.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerBuilder.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.ControllerBuilder" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ControllerBuilder.Current">
      <summary>Obtiene el objeto generador del controlador actual.</summary>
      <returns>Generador del controlador actual.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerBuilder.DefaultNamespaces">
      <summary>Obtiene los espacios de nombres predeterminados.</summary>
      <returns>Espacios de nombres predeterminados.</returns>
    </member>
    <member name="M:System.Web.Mvc.ControllerBuilder.GetControllerFactory">
      <summary>Obtiene el generador del controlador asociado.</summary>
      <returns>El generador del controlador.</returns>
    </member>
    <member name="M:System.Web.Mvc.ControllerBuilder.SetControllerFactory(System.Type)">
      <summary>Establece el generador del controlador mediante el tipo especificado.</summary>
      <param name="controllerFactoryType">El tipo del generador del controlador.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="controllerFactoryType" /> es null.</exception>
      <exception cref="T:System.ArgumentException">El generador del controlador no se puede asignar a partir del tipo del parámetro <paramref name="controllerFactoryType" />.</exception>
      <exception cref="T:System.InvalidOperationException">Error mientras se establecía el generador del controlador.</exception>
    </member>
    <member name="M:System.Web.Mvc.ControllerBuilder.SetControllerFactory(System.Web.Mvc.IControllerFactory)">
      <summary>Establece el generador del controlador especificado.</summary>
      <param name="controllerFactory">El generador del controlador.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="controllerFactory" /> es null.</exception>
    </member>
    <member name="T:System.Web.Mvc.ControllerContext">
      <summary>Encapsula información sobre una solicitud HTTP que coincide con las instancias de <see cref="T:System.Web.Routing.RouteBase" /> y <see cref="T:System.Web.Mvc.ControllerBase" /> especificadas.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerContext.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.ControllerContext" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerContext.#ctor(System.Web.HttpContextBase,System.Web.Routing.RouteData,System.Web.Mvc.ControllerBase)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.ControllerContext" /> mediante el contexto HTTP, los datos de ruta de dirección URL y el controlador especificados.</summary>
      <param name="httpContext">Contexto HTTP.</param>
      <param name="routeData">Datos de la ruta.</param>
      <param name="controller">El controlador.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerContext.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.ControllerContext" /> mediante el contexto del controlador especificado.</summary>
      <param name="controllerContext">Contexto del controlador.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="controllerContext" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ControllerContext.#ctor(System.Web.Routing.RequestContext,System.Web.Mvc.ControllerBase)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.ControllerContext" /> mediante el contexto de solicitud y el controlador especificados.</summary>
      <param name="requestContext">Contexto de la solicitud.</param>
      <param name="controller">El controlador.</param>
      <exception cref="T:System.ArgumentNullException">El valor de uno o ambos parámetros es null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ControllerContext.Controller">
      <summary>Obtiene o establece el controlador.</summary>
      <returns>El controlador.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerContext.DisplayMode">
      <summary>Obtiene el modo de presentación.</summary>
      <returns>Modo de presentación.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerContext.HttpContext">
      <summary>Obtiene o establece el contexto HTTP.</summary>
      <returns>Contexto HTTP.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerContext.IsChildAction">
      <summary>Obtiene un valor que indica si el método de acción asociado es una acción secundaria.</summary>
      <returns>true si el método de acción asociado es una acción secundaria; de lo contrario, false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerContext.ParentActionViewContext">
      <summary>Obtiene un objeto que contiene la información de contexto de la vista para el método de acción primario.</summary>
      <returns>Un objeto que contiene la información de contexto de la vista para el método de acción primario.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerContext.RequestContext">
      <summary>Obtiene o establece el contexto de solicitud.</summary>
      <returns>Contexto de la solicitud.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerContext.RouteData">
      <summary>Obtiene o establece los datos de ruta de dirección URL.</summary>
      <returns>Datos de ruta de dirección URL.</returns>
    </member>
    <member name="T:System.Web.Mvc.ControllerDescriptor">
      <summary>Encapsula información que describe un controlador, tal como su nombre, su tipo y sus acciones.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerDescriptor.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.ControllerDescriptor" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ControllerDescriptor.ControllerName">
      <summary>Obtiene el nombre del controlador.</summary>
      <returns>Nombre del controlador.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerDescriptor.ControllerType">
      <summary>Obtiene el tipo del controlador.</summary>
      <returns>Tipo del controlador.</returns>
    </member>
    <member name="M:System.Web.Mvc.ControllerDescriptor.FindAction(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Busca un método de acción mediante el nombre especificado y el contexto del controlador.</summary>
      <returns>Información acerca del método de la acción.</returns>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="actionName">Nombre de la acción.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerDescriptor.GetCanonicalActions">
      <summary>Recupera una lista de descriptores método de acción del controlador.</summary>
      <returns>Lista de descriptores método de acción del controlador.</returns>
    </member>
    <member name="M:System.Web.Mvc.ControllerDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>Recupera atributos personalizados definidos para este miembro, excluidos los atributos con nombre.</summary>
      <returns>Una matriz de atributos personalizados o una matriz vacía si no existen atributos personalizados.</returns>
      <param name="inherit">true para buscar la cadena de jerarquía del atributo personalizado heredado; de lo contrario, false.</param>
      <exception cref="T:System.TypeLoadException">El tipo de atributo personalizado no puede cargarse.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Se definió más de un atributo del tipo <paramref name="attributeType" /> para este miembro.</exception>
    </member>
    <member name="M:System.Web.Mvc.ControllerDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Recupera atributos personalizados de un tipo especificado definidos para este miembro, excluidos los atributos con nombre.</summary>
      <returns>Una matriz de atributos personalizados o una matriz vacía si no existen atributos personalizados.</returns>
      <param name="attributeType">Tipo de los atributos personalizados.</param>
      <param name="inherit">true para buscar la cadena de jerarquía del atributo personalizado heredado; de lo contrario, false.</param>
      <exception cref="T:System.TypeLoadException">El tipo de atributo personalizado no puede cargarse.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Se definió más de un atributo del tipo <paramref name="attributeType" /> para este miembro.</exception>
      <exception cref="T:System.ArgumentNullException">El valor del parámetro <paramref name="attributeType" /> es null (Nothing en Visual Basic).</exception>
    </member>
    <member name="M:System.Web.Mvc.ControllerDescriptor.GetFilterAttributes(System.Boolean)">
      <summary>Obtiene los atributos del filtro.</summary>
      <returns>Los atributos del filtro.</returns>
      <param name="useCache">true si debe usarse la memoria caché; en caso contrario, false.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>Recupera un valor que indica si están definidas una o más instancias del atributo personalizado especificado para este miembro.</summary>
      <returns>true si se ha definido <paramref name="attributeType" /> para este miembro; de lo contrario, false.</returns>
      <param name="attributeType">Tipo del atributo personalizado.</param>
      <param name="inherit">true para buscar la cadena de jerarquía del atributo personalizado heredado; de lo contrario, false.</param>
      <exception cref="T:System.ArgumentNullException">El valor del parámetro <paramref name="attributeType" /> es null (Nothing en Visual Basic).</exception>
    </member>
    <member name="P:System.Web.Mvc.ControllerDescriptor.UniqueId">
      <summary>Cuando se implementa en una clase derivada, obtiene el identificador único para el descriptor del controlador mediante la inicialización diferida.</summary>
      <returns>Identificador único.</returns>
    </member>
    <member name="T:System.Web.Mvc.ControllerInstanceFilterProvider">
      <summary>Agrega el controlador a la instancia de <see cref="T:System.Web.Mvc.FilterProviderCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerInstanceFilterProvider.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.ControllerInstanceFilterProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerInstanceFilterProvider.GetFilters(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Devuelve la colección de filtros de instancias de controlador.</summary>
      <returns>La colección de filtros de instancias de controlador.</returns>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="actionDescriptor">Descriptor de la acción.</param>
    </member>
    <member name="T:System.Web.Mvc.CustomModelBinderAttribute">
      <summary>Representa un atributo que invoca un enlazador de modelos personalizado.</summary>
    </member>
    <member name="M:System.Web.Mvc.CustomModelBinderAttribute.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.CustomModelBinderAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.CustomModelBinderAttribute.GetBinder">
      <summary>Recupera el enlazador de modelos asociado.</summary>
      <returns>Referencia a un objeto que implementa la interfaz <see cref="T:System.Web.Mvc.IModelBinder" />.</returns>
    </member>
    <member name="T:System.Web.Mvc.DataAnnotationsModelMetadata">
      <summary>Proporciona un contenedor para los metadatos comunes, para la clase <see cref="T:System.Web.Mvc.DataAnnotationsModelMetadataProvider" /> y para la clase <see cref="T:System.Web.Mvc.DataAnnotationsModelValidator" /> de un modelo de datos.</summary>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelMetadata.#ctor(System.Web.Mvc.DataAnnotationsModelMetadataProvider,System.Type,System.Func{System.Object},System.Type,System.String,System.ComponentModel.DataAnnotations.DisplayColumnAttribute)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.DataAnnotationsModelMetadataProvider" />.</summary>
      <param name="provider">Proveedor de metadatos del modelo de anotaciones de datos.</param>
      <param name="containerType">Tipo del contenedor.</param>
      <param name="modelAccessor">Descriptor de acceso del modelo.</param>
      <param name="modelType">Tipo del modelo.</param>
      <param name="propertyName">Nombre de la propiedad.</param>
      <param name="displayColumnAttribute">Atributo de la columna de presentación.</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelMetadata.GetSimpleDisplayText">
      <summary>Devuelve texto simple para los datos del modelo.</summary>
      <returns>Texto simple para los datos del modelo.</returns>
    </member>
    <member name="T:System.Web.Mvc.DataAnnotationsModelMetadataProvider">
      <summary>Implementa el proveedor de metadatos del modelo predeterminado para ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelMetadataProvider.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.DataAnnotationsModelMetadataProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelMetadataProvider.CreateMetadata(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Func{System.Object},System.Type,System.String)">
      <summary>Obtiene los metadatos para la propiedad especificada.</summary>
      <returns>Los metadatos de la propiedad.</returns>
      <param name="attributes">Atributos.</param>
      <param name="containerType">Tipo del contenedor.</param>
      <param name="modelAccessor">Descriptor de acceso del modelo.</param>
      <param name="modelType">Tipo del modelo.</param>
      <param name="propertyName">Nombre de la propiedad.</param>
    </member>
    <member name="T:System.Web.Mvc.DataAnnotationsModelValidationFactory">
      <summary>Representa el método que crea una instancia de <see cref="T:System.Web.Mvc.DataAnnotationsModelValidatorProvider" />.</summary>
    </member>
    <member name="T:System.Web.Mvc.DataAnnotationsModelValidator">
      <summary>Proporciona un validador del modelo.</summary>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidator.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.ComponentModel.DataAnnotations.ValidationAttribute)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.DataAnnotationsModelValidator" />.</summary>
      <param name="metadata">Metadatos para el modelo.</param>
      <param name="context">Contexto del controlador para el modelo.</param>
      <param name="attribute">Atributo de validación para el modelo.</param>
    </member>
    <member name="P:System.Web.Mvc.DataAnnotationsModelValidator.Attribute">
      <summary>Obtiene el atributo de validación para el validador de modelo.</summary>
      <returns>Atributo de validación para el validador del modelo.</returns>
    </member>
    <member name="P:System.Web.Mvc.DataAnnotationsModelValidator.ErrorMessage">
      <summary>Obtiene el mensaje de error para el error de validación.</summary>
      <returns>Mensaje de error para el error de validación.</returns>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidator.GetClientValidationRules">
      <summary>Recupera una colección de reglas de validación de clientes.</summary>
      <returns>Colección de reglas de validación de clientes.</returns>
    </member>
    <member name="P:System.Web.Mvc.DataAnnotationsModelValidator.IsRequired">
      <summary>Obtiene un valor que indica si la validación del modelo es necesaria.</summary>
      <returns>true si la validación del modelo es requerida; en caso contrario, false.</returns>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidator.Validate(System.Object)">
      <summary>Devuelve una lista de mensajes de error de validación para el modelo.</summary>
      <returns>Una lista de mensajes de error de validación para el modelo, o una lista vacía si no se ha producido ningún error.</returns>
      <param name="container">Contenedor para el modelo.</param>
    </member>
    <member name="T:System.Web.Mvc.DataAnnotationsModelValidator`1">
      <summary>Proporciona un validador de modelo para un tipo de validación especificado.</summary>
      <typeparam name="TAttribute"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidator`1.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,`0)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.DataAnnotationsModelValidator" />.</summary>
      <param name="metadata">Metadatos para el modelo.</param>
      <param name="context">Contexto del controlador para el modelo.</param>
      <param name="attribute">Atributo de validación para el modelo.</param>
    </member>
    <member name="P:System.Web.Mvc.DataAnnotationsModelValidator`1.Attribute">
      <summary>Obtiene el atributo de validación del validador del modelo.</summary>
      <returns>Obtiene el atributo de validación del validador del modelo.</returns>
    </member>
    <member name="T:System.Web.Mvc.DataAnnotationsModelValidatorProvider">
      <summary>Implementa el proveedor de validación predeterminado para ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.DataAnnotationsModelValidatorProvider" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.DataAnnotationsModelValidatorProvider.AddImplicitRequiredAttributeForValueTypes">
      <summary>Obtiene o establece un valor que indica si se requieren tipos de valor que no aceptan valores NULL.</summary>
      <returns>true si se requieren tipos de valor que no aceptan valores NULL; de lo contrario, false.</returns>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>Obtiene una lista de validadores.</summary>
      <returns>Lista de validadores.</returns>
      <param name="metadata">Metadatos.</param>
      <param name="context">Contexto.</param>
      <param name="attributes">Lista de atributos de validación.</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterAdapter(System.Type,System.Type)">
      <summary>Registra un adaptador para proporcionar la validación en el lado cliente.</summary>
      <param name="attributeType">Tipo del atributo de validación.</param>
      <param name="adapterType">Tipo del adaptador.</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterAdapterFactory(System.Type,System.Web.Mvc.DataAnnotationsModelValidationFactory)">
      <summary>Registra un generador del adaptador para el proveedor de validación.</summary>
      <param name="attributeType">Tipo del atributo.</param>
      <param name="factory">Generador que se usará para crear el objeto <see cref="T:System.Web.Mvc.ModelValidator" /> para el atributo especificado.</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterDefaultAdapter(System.Type)">
      <summary>Registra el adaptador predeterminado.</summary>
      <param name="adapterType">Tipo del adaptador.</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterDefaultAdapterFactory(System.Web.Mvc.DataAnnotationsModelValidationFactory)">
      <summary>Registra el generador del adaptador predeterminado.</summary>
      <param name="factory">Generador que se utilizará para crear el objeto <see cref="T:System.Web.Mvc.ModelValidator" /> para el adaptador predeterminado.</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterDefaultValidatableObjectAdapter(System.Type)">
      <summary>Registra un adaptador para proporcionar la validación de objetos predeterminada.</summary>
      <param name="adapterType">Tipo del adaptador.</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterDefaultValidatableObjectAdapterFactory(System.Web.Mvc.DataAnnotationsValidatableObjectAdapterFactory)">
      <summary>Registra un generador del adaptador para el proveedor de la validación de objetos predeterminada.</summary>
      <param name="factory">Fábrica.</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterValidatableObjectAdapter(System.Type,System.Type)">
      <summary>Registra un adaptador para proporcionar la validación de objetos.</summary>
      <param name="modelType">Tipo del modelo.</param>
      <param name="adapterType">Tipo del adaptador.</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterValidatableObjectAdapterFactory(System.Type,System.Web.Mvc.DataAnnotationsValidatableObjectAdapterFactory)">
      <summary>Registra un generador del adaptador para el proveedor de validación de objetos.</summary>
      <param name="modelType">Tipo del modelo.</param>
      <param name="factory">Fábrica.</param>
    </member>
    <member name="T:System.Web.Mvc.DataAnnotationsValidatableObjectAdapterFactory">
      <summary>Proporciona un generador para los validadores basados en <see cref="T:System.ComponentModel.DataAnnotations.IValidatableObject" />.</summary>
    </member>
    <member name="T:System.Web.Mvc.DataErrorInfoModelValidatorProvider">
      <summary>Proporciona un contenedor para el validador de modelo de información de error.</summary>
    </member>
    <member name="M:System.Web.Mvc.DataErrorInfoModelValidatorProvider.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.DataErrorInfoModelValidatorProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.DataErrorInfoModelValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Obtiene una lista de validadores de modelo de información de error.</summary>
      <returns>Una lista de validadores de modelo de información de error.</returns>
      <param name="metadata">Metadatos del modelo.</param>
      <param name="context">Contexto del controlador.</param>
    </member>
    <member name="T:System.Web.Mvc.DefaultControllerFactory">
      <summary>Representa el generador de controladores registrado de forma predeterminada.</summary>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.DefaultControllerFactory" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.#ctor(System.Web.Mvc.IControllerActivator)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.DefaultControllerFactory" /> mediante un activador de controlador.</summary>
      <param name="controllerActivator">Un objeto que implementa la interfaz de activador de controlador.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.CreateController(System.Web.Routing.RequestContext,System.String)">
      <summary>Crea el controlador especificado mediante el contexto de solicitud especificado.</summary>
      <returns>El controlador.</returns>
      <param name="requestContext">Contexto de la solicitud HTTP, que incluye el contexto HTTP y los datos de la ruta.</param>
      <param name="controllerName">Nombre del controlador.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="requestContext" /> es null.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="controllerName" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.GetControllerInstance(System.Web.Routing.RequestContext,System.Type)">
      <summary>Recupera la instancia del controlador para el contexto de solicitud y el tipo de dispositivo especificados.</summary>
      <returns>Instancia del controlador.</returns>
      <param name="requestContext">Contexto de la solicitud HTTP, que incluye el contexto HTTP y los datos de la ruta.</param>
      <param name="controllerType">Tipo del controlador.</param>
      <exception cref="T:System.Web.HttpException">
        <paramref name="controllerType" /> es null.</exception>
      <exception cref="T:System.ArgumentException">No se puede asignar <paramref name="controllerType" />.</exception>
      <exception cref="T:System.InvalidOperationException">No se puede crear una instancia de <paramref name="controllerType" />.</exception>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.GetControllerSessionBehavior(System.Web.Routing.RequestContext,System.Type)">
      <summary>Devuelve el comportamiento de sesión del controlador.</summary>
      <returns>Comportamiento de sesión del controlador.</returns>
      <param name="requestContext">Contexto de la solicitud.</param>
      <param name="controllerType">Tipo del controlador.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.GetControllerType(System.Web.Routing.RequestContext,System.String)">
      <summary>Recupera el tipo de controlador para el nombre y el contexto de solicitud especificados.</summary>
      <returns>Tipo del controlador.</returns>
      <param name="requestContext">Contexto de la solicitud HTTP, que incluye el contexto HTTP y los datos de la ruta.</param>
      <param name="controllerName">Nombre del controlador.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.ReleaseController(System.Web.Mvc.IController)">
      <summary>Libera el controlador especificado.</summary>
      <param name="controller">Controlador que se va a liberar.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.System#Web#Mvc#IControllerFactory#GetControllerSessionBehavior(System.Web.Routing.RequestContext,System.String)">
      <summary>Esta API admite la infraestructura de ASP.NET MVC y no está previsto su uso directo desde el código.Este método llama al método <see cref="M:System.Web.Mvc.DefaultControllerFactory.GetControllerSessionBehavior(System.Web.Routing.RequestContext,System.Type)" />.</summary>
      <returns>Comportamiento de sesión del controlador.</returns>
      <param name="requestContext">Contexto de la solicitud.</param>
      <param name="controllerName">Nombre del controlador.</param>
    </member>
    <member name="T:System.Web.Mvc.DefaultModelBinder">
      <summary>Asigna una solicitud de explorador a un objeto de datos.Esta clase proporciona una implementación concreta de un enlazador de modelos.</summary>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.DefaultModelBinder" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.DefaultModelBinder.Binders">
      <summary>Obtiene o establece los enlazadores de modelos de la aplicación.</summary>
      <returns>Enlazadores de modelos de la aplicación.</returns>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Enlaza el modelo utilizando el contexto del controlador y el contexto de enlace especificados.</summary>
      <returns>Objeto enlazado.</returns>
      <param name="controllerContext">Contexto en el que funciona el controlador.La información de contexto incluye el controlador, el contenido HTTP, el contexto de la solicitud y los datos de la ruta.</param>
      <param name="bindingContext">Contexto en el que se enlaza el modelo.El contexto incluye información como el objeto de modelo, el nombre de modelo, el tipo de modelo, el filtro de propiedades y el proveedor de valores.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="bindingContext " /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.BindProperty(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.ComponentModel.PropertyDescriptor)">
      <summary>Enlaza la propiedad especificada utilizando el contexto del controlador, el contexto de enlace y el descriptor de propiedad especificados.</summary>
      <param name="controllerContext">Contexto en el que funciona el controlador.La información de contexto incluye el controlador, el contenido HTTP, el contexto de la solicitud y los datos de la ruta.</param>
      <param name="bindingContext">Contexto en el que se enlaza el modelo.El contexto incluye información como el objeto de modelo, el nombre de modelo, el tipo de modelo, el filtro de propiedades y el proveedor de valores.</param>
      <param name="propertyDescriptor">Describe una propiedad que se va a enlazar.El descriptor proporciona información como el tipo de componente, el tipo de propiedad y el valor de propiedad.También proporciona métodos para obtener o establecer el valor de propiedad.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.CreateModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.Type)">
      <summary>Crea el tipo de modelo especificado utilizando el contexto del controlador y el contexto de enlace especificados.</summary>
      <returns>Un objeto de datos del tipo especificado.</returns>
      <param name="controllerContext">Contexto en el que funciona el controlador.La información de contexto incluye el controlador, el contenido HTTP, el contexto de la solicitud y los datos de la ruta.</param>
      <param name="bindingContext">Contexto en el que se enlaza el modelo.El contexto incluye información como el objeto de modelo, el nombre de modelo, el tipo de modelo, el filtro de propiedades y el proveedor de valores.</param>
      <param name="modelType">Tipo del objeto de modelo que se va a devolver.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.CreateSubIndexName(System.String,System.Int32)">
      <summary>Crea un índice (un subíndice) basado en una categoría de componentes que constituyen un índice mayor, donde el valor de índice especificado es un entero.</summary>
      <returns>Nombre del subíndice.</returns>
      <param name="prefix">Prefijo para el subíndice.</param>
      <param name="index">Valor de índice.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.CreateSubIndexName(System.String,System.String)">
      <summary>Crea un índice (un subíndice) basado en una categoría de componentes que constituyen un índice mayor, donde el valor de índice especificado es una cadena.</summary>
      <returns>Nombre del subíndice.</returns>
      <param name="prefix">Prefijo para el subíndice.</param>
      <param name="index">Valor de índice.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.CreateSubPropertyName(System.String,System.String)">
      <summary>Crea el nombre de la subpropiedad utilizando el prefijo y el nombre de propiedad especificados.</summary>
      <returns>Nombre de la subpropiedad.</returns>
      <param name="prefix">Prefijo para la subpropiedad.</param>
      <param name="propertyName">Nombre de la propiedad.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.GetFilteredModelProperties(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Devuelve un conjunto de propiedades que coinciden con las restricciones de filtro de propiedad que establece el <paramref name="binding context" /> especificado.</summary>
      <returns>Un conjunto enumerable de descriptores de propiedad.</returns>
      <param name="controllerContext">Contexto en el que funciona el controlador.La información de contexto incluye el controlador, el contenido HTTP, el contexto de la solicitud y los datos de la ruta.</param>
      <param name="bindingContext">Contexto en el que se enlaza el modelo.El contexto incluye información como el objeto de modelo, el nombre de modelo, el tipo de modelo, el filtro de propiedades y el proveedor de valores.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.GetModelProperties(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Devuelve las propiedades del modelo utilizando el contexto del controlador y el contexto de enlace especificados.</summary>
      <returns>Colección de descriptores de propiedad.</returns>
      <param name="controllerContext">Contexto en el que funciona el controlador.La información de contexto incluye el controlador, el contenido HTTP, el contexto de la solicitud y los datos de la ruta.</param>
      <param name="bindingContext">Contexto en el que se enlaza el modelo.El contexto incluye información como el objeto de modelo, el nombre de modelo, el tipo de modelo, el filtro de propiedades y el proveedor de valores.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.GetPropertyValue(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.ComponentModel.PropertyDescriptor,System.Web.Mvc.IModelBinder)">
      <summary>Devuelve el valor de una propiedad utilizando el contexto del controlador, el contexto de enlace, el descriptor de propiedad y el enlazador de propiedad especificados.</summary>
      <returns>Objeto que representa el valor de propiedad.</returns>
      <param name="controllerContext">Contexto en el que funciona el controlador.La información de contexto incluye el controlador, el contenido HTTP, el contexto de la solicitud y los datos de la ruta.</param>
      <param name="bindingContext">Contexto en el que se enlaza el modelo.El contexto incluye información como el objeto de modelo, el nombre de modelo, el tipo de modelo, el filtro de propiedades y el proveedor de valores.</param>
      <param name="propertyDescriptor">Descriptor de la propiedad a la que se va a obtener acceso.El descriptor proporciona información como el tipo de componente, el tipo de propiedad y el valor de propiedad.También proporciona métodos para obtener o establecer el valor de propiedad.</param>
      <param name="propertyBinder">Un objeto que proporciona una manera de enlazar la propiedad.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.GetTypeDescriptor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Devuelve el objeto de descriptor para un tipo especificado por su contexto del controlador y contexto de enlace.</summary>
      <returns>Un objeto de descriptor de tipos personalizado.</returns>
      <param name="controllerContext">Contexto en el que funciona el controlador.La información de contexto incluye el controlador, el contenido HTTP, el contexto de la solicitud y los datos de la ruta.</param>
      <param name="bindingContext">Contexto en el que se enlaza el modelo.El contexto incluye información como el objeto de modelo, el nombre de modelo, el tipo de modelo, el filtro de propiedades y el proveedor de valores.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.IsModelValid(System.Web.Mvc.ModelBindingContext)">
      <summary>Determina si un modelo de datos es válido para el contexto de enlace especificado.</summary>
      <returns>true si el modelo es válido; en caso contrario, false.</returns>
      <param name="bindingContext">Contexto en el que se enlaza el modelo.El contexto incluye información como el objeto de modelo, el nombre de modelo, el tipo de modelo, el filtro de propiedades y el proveedor de valores.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="bindingContext" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.OnModelUpdated(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Se llama cuando se actualiza el modelo.</summary>
      <param name="controllerContext">Contexto en el que funciona el controlador.La información de contexto incluye el controlador, el contenido HTTP, el contexto de la solicitud y los datos de la ruta.</param>
      <param name="bindingContext">Contexto en el que se enlaza el modelo.El contexto incluye información como el objeto de modelo, el nombre de modelo, el tipo de modelo, el filtro de propiedades y el proveedor de valores.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.OnModelUpdating(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Se llama cuando se está actualizando el modelo.</summary>
      <returns>true si el modelo se está actualizando; en caso contrario, false.</returns>
      <param name="controllerContext">Contexto en el que funciona el controlador.La información de contexto incluye el controlador, el contenido HTTP, el contexto de la solicitud y los datos de la ruta.</param>
      <param name="bindingContext">Contexto en el que se enlaza el modelo.El contexto incluye información como el objeto de modelo, el nombre de modelo, el tipo de modelo, el filtro de propiedades y el proveedor de valores.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.OnPropertyValidated(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary>Se llama cuando se valida la propiedad especificada.</summary>
      <param name="controllerContext">Contexto en el que funciona el controlador.La información de contexto incluye el controlador, el contenido HTTP, el contexto de la solicitud y los datos de la ruta.</param>
      <param name="bindingContext">Contexto en el que se enlaza el modelo.El contexto incluye información como el objeto de modelo, el nombre de modelo, el tipo de modelo, el filtro de propiedades y el proveedor de valores.</param>
      <param name="propertyDescriptor">Describe una propiedad que se va a validar.El descriptor proporciona información como el tipo de componente, el tipo de propiedad y el valor de propiedad.También proporciona métodos para obtener o establecer el valor de propiedad.</param>
      <param name="value">Valor que se va a establecer para la propiedad.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.OnPropertyValidating(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary>Se llama cuando se está validando la propiedad especificada.</summary>
      <returns>true si la propiedad se está validando; en caso contrario, false.</returns>
      <param name="controllerContext">Contexto en el que funciona el controlador.La información de contexto incluye el controlador, el contenido HTTP, el contexto de la solicitud y los datos de la ruta.</param>
      <param name="bindingContext">Contexto en el que se enlaza el modelo.El contexto incluye información como el objeto de modelo, el nombre de modelo, el tipo de modelo, el filtro de propiedades y el proveedor de valores.</param>
      <param name="propertyDescriptor">Describe una propiedad que se está validando.El descriptor proporciona información como el tipo de componente, el tipo de propiedad y el valor de propiedad.También proporciona métodos para obtener o establecer el valor de propiedad.</param>
      <param name="value">Valor que se va a establecer para la propiedad.</param>
    </member>
    <member name="P:System.Web.Mvc.DefaultModelBinder.ResourceClassKey">
      <summary>Obtiene o establece el nombre del archivo de recursos (clave de clase) que contiene los valores de cadena adaptados.</summary>
      <returns>Nombre del archivo de recursos (clave de clase).</returns>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.SetProperty(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary>Establece la propiedad especificada utilizando el contexto del controlador, el contexto de enlace y el valor de propiedad especificados.</summary>
      <param name="controllerContext">Contexto en el que funciona el controlador.La información de contexto incluye el controlador, el contenido HTTP, el contexto de la solicitud y los datos de la ruta.</param>
      <param name="bindingContext">Contexto en el que se enlaza el modelo.El contexto incluye información como el objeto de modelo, el nombre de modelo, el tipo de modelo, el filtro de propiedades y el proveedor de valores.</param>
      <param name="propertyDescriptor">Describe una propiedad que se va a establecer.El descriptor proporciona información como el tipo de componente, el tipo de propiedad y el valor de propiedad.También proporciona métodos para obtener o establecer el valor de propiedad.</param>
      <param name="value">Valor que se va a establecer para la propiedad.</param>
    </member>
    <member name="T:System.Web.Mvc.DefaultViewLocationCache">
      <summary>Representa una memoria caché para ubicaciones de vista.</summary>
    </member>
    <member name="M:System.Web.Mvc.DefaultViewLocationCache.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.DefaultViewLocationCache" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.DefaultViewLocationCache.#ctor(System.TimeSpan)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.DefaultViewLocationCache" /> mediante un intervalo de tiempo de caché especificado.</summary>
      <param name="timeSpan">Intervalo de tiempo de memoria caché.</param>
      <exception cref="T:System.InvalidOperationException">El atributo Ticks del parámetro <paramref name="timeSpan" /> se establece en un número negativo.</exception>
    </member>
    <member name="M:System.Web.Mvc.DefaultViewLocationCache.GetViewLocation(System.Web.HttpContextBase,System.String)">
      <summary>Recupera la ubicación de vista predeterminada mediante el contexto HTTP y la clave de caché especificados.</summary>
      <returns>Ubicación de vista predeterminada.</returns>
      <param name="httpContext">Contexto HTTP.</param>
      <param name="key">Clave de caché</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="httpContext" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.DefaultViewLocationCache.InsertViewLocation(System.Web.HttpContextBase,System.String,System.String)">
      <summary>Inserta la vista en la ruta de acceso virtual especificada mediante el contexto HTTP, la clave de caché y la ruta de acceso virtual especificados.</summary>
      <param name="httpContext">Contexto HTTP.</param>
      <param name="key">Clave de caché.</param>
      <param name="virtualPath">Ruta de acceso virtual.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="httpContext" /> es null.</exception>
    </member>
    <member name="F:System.Web.Mvc.DefaultViewLocationCache.Null">
      <summary>Crea una memoria caché de ubicación de vista vacía.</summary>
    </member>
    <member name="P:System.Web.Mvc.DefaultViewLocationCache.TimeSpan">
      <summary>Obtiene o establece el intervalo de tiempo de caché.</summary>
      <returns>Intervalo de tiempo de memoria caché.</returns>
    </member>
    <member name="T:System.Web.Mvc.DependencyResolver">
      <summary>Proporciona un punto de registro para las resoluciones de dependencia que implementan <see cref="T:System.Web.Mvc.IDependencyResolver" /> o la interfaz IServiceLocator del localizador de servicios común.</summary>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolver.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.DependencyResolver" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.DependencyResolver.Current">
      <summary>Obtiene la implementación de la resolución de dependencia.</summary>
      <returns>La implementación de la resolución de dependencia.</returns>
    </member>
    <member name="P:System.Web.Mvc.DependencyResolver.InnerCurrent">
      <summary>Esta API admite la infraestructura de ASP.NET MVC y no está previsto su uso directo desde el código.</summary>
      <returns>La implementación de la resolución de dependencia.</returns>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolver.InnerSetResolver(System.Func{System.Type,System.Object},System.Func{System.Type,System.Collections.Generic.IEnumerable{System.Object}})">
      <summary>Esta API admite la infraestructura de ASP.NET MVC y no está previsto su uso directo desde el código.</summary>
      <param name="getService">Función que proporciona el servicio.</param>
      <param name="getServices">Función que proporciona los servicios.</param>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolver.InnerSetResolver(System.Object)">
      <summary>Esta API admite la infraestructura de ASP.NET MVC y no está previsto su uso directo desde el código.</summary>
      <param name="commonServiceLocator">Localizador de servicios común.</param>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolver.InnerSetResolver(System.Web.Mvc.IDependencyResolver)">
      <summary>Esta API admite la infraestructura de ASP.NET MVC y no está previsto su uso directo desde el código.</summary>
      <param name="resolver">Objeto que implementa la resolución de dependencia.</param>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolver.SetResolver(System.Func{System.Type,System.Object},System.Func{System.Type,System.Collections.Generic.IEnumerable{System.Object}})">
      <summary>Proporciona un punto de registro para las resoluciones de dependencia mediante el delegado de servicio especificado y los delegados de colección de servicios especificados.</summary>
      <param name="getService">Delegado de servicio.</param>
      <param name="getServices">Delegados de servicios.</param>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolver.SetResolver(System.Object)">
      <summary>Proporciona un punto de registro para las resoluciones de dependencia utilizando el localizador de servicios común proporcionado cuando se utiliza una interfaz de localizador de servicios.</summary>
      <param name="commonServiceLocator">Localizador de servicios común.</param>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolver.SetResolver(System.Web.Mvc.IDependencyResolver)">
      <summary>Proporciona un punto de registro para las resoluciones de dependencia, utilizando la interfaz de resolución de dependencia especificada.</summary>
      <param name="resolver">Resolución de dependencia.</param>
    </member>
    <member name="T:System.Web.Mvc.DependencyResolverExtensions">
      <summary>Proporciona una implementación con seguridad de tipos de <see cref="M:System.Web.Mvc.IDependencyResolver.GetService(System.Type)" /> y <see cref="M:System.Web.Mvc.IDependencyResolver.GetServices(System.Type)" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolverExtensions.GetService``1(System.Web.Mvc.IDependencyResolver)">
      <summary>Resuelve los servicios registrados de forma única que admiten la creación de objetos arbitrarios.</summary>
      <returns>El objeto o servicio solicitado.</returns>
      <param name="resolver">Instancia de la resolución de dependencia que extiende este método.</param>
      <typeparam name="TService">Tipo de objeto o servicio solicitado.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolverExtensions.GetServices``1(System.Web.Mvc.IDependencyResolver)">
      <summary>Resuelve varios servicios registrados.</summary>
      <returns>Los servicios solicitados.</returns>
      <param name="resolver">Instancia de la resolución de dependencia que extiende este método.</param>
      <typeparam name="TService">Tipo de servicios solicitados.</typeparam>
    </member>
    <member name="T:System.Web.Mvc.DictionaryValueProvider`1">
      <summary>Representa la clase base para los proveedores de valores cuyos valores proceden de una colección que implementa la interfaz <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <typeparam name="TValue">Tipo del valor.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.DictionaryValueProvider`1.#ctor(System.Collections.Generic.IDictionary{System.String,`0},System.Globalization.CultureInfo)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.DictionaryValueProvider`1" />.</summary>
      <param name="dictionary">Los pares nombre-valor que se usan para inicializar el proveedor de valores.</param>
      <param name="culture">Información sobre una referencia cultural concreta, tales como los nombres de la referencia cultural, el sistema de escritura y el calendario que se usan.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="dictionary" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.DictionaryValueProvider`1.ContainsPrefix(System.String)">
      <summary>Determina si la colección contiene el prefijo especificado.</summary>
      <returns>true si la colección contiene el prefijo especificado; de lo contrario, false.</returns>
      <param name="prefix">Prefijo que se va a buscar.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="prefix" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.DictionaryValueProvider`1.GetKeysFromPrefix(System.String)">
      <summary>Obtiene las claves del prefijo.</summary>
      <returns>Las claves del prefijo.</returns>
      <param name="prefix">Prefijo.</param>
    </member>
    <member name="M:System.Web.Mvc.DictionaryValueProvider`1.GetValue(System.String)">
      <summary>Devuelve un objeto de valor mediante la clave y el contexto de controlador especificados.</summary>
      <returns>Objeto de valor para la clave especificada.</returns>
      <param name="key">Clave para la que se va a recuperar el objeto de valor.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="key" /> es null.</exception>
    </member>
    <member name="T:System.Web.Mvc.EmptyModelMetadataProvider">
      <summary>Proporciona un proveedor de metadatos vacío para los modelos de datos que no requieren metadatos.</summary>
    </member>
    <member name="M:System.Web.Mvc.EmptyModelMetadataProvider.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.EmptyModelMetadataProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.EmptyModelMetadataProvider.CreateMetadata(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Func{System.Object},System.Type,System.String)">
      <summary>Crea una nueva instancia de la clase <see cref="T:System.Web.Mvc.ModelMetadata" />.</summary>
      <returns>Nueva instancia de la clase <see cref="T:System.Web.Mvc.ModelMetadata" />.</returns>
      <param name="attributes">Atributos.</param>
      <param name="containerType">Tipo del contenedor.</param>
      <param name="modelAccessor">Descriptor de acceso del modelo.</param>
      <param name="modelType">Tipo del modelo.</param>
      <param name="propertyName">Nombre del modelo.</param>
    </member>
    <member name="T:System.Web.Mvc.EmptyModelValidatorProvider">
      <summary>Proporciona un proveedor de validación vacío para los modelos que no requieren ningún validador.</summary>
    </member>
    <member name="M:System.Web.Mvc.EmptyModelValidatorProvider.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.EmptyModelValidatorProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.EmptyModelValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Obtiene el validador de modelo vacío.</summary>
      <returns>Validador de modelo vacío.</returns>
      <param name="metadata">Metadatos.</param>
      <param name="context">Contexto.</param>
    </member>
    <member name="T:System.Web.Mvc.EmptyResult">
      <summary>Representa un resultado que no hace nada, tal como un método de acción de controlador que no devuelve nada.</summary>
    </member>
    <member name="M:System.Web.Mvc.EmptyResult.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.EmptyResult" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.EmptyResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Ejecuta el contexto de resultado especificado.</summary>
      <param name="context">Contexto del resultado.</param>
    </member>
    <member name="T:System.Web.Mvc.ExceptionContext">
      <summary>Proporciona el contexto para usar la clase <see cref="T:System.Web.Mvc.HandleErrorAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ExceptionContext.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.ExceptionContext" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ExceptionContext.#ctor(System.Web.Mvc.ControllerContext,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.ExceptionContext" /> para la excepción especificada mediante el contexto del controlador especificado.</summary>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="exception">Excepción.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="exception" /> es null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ExceptionContext.Exception">
      <summary>Obtiene o establece el objeto de excepción.</summary>
      <returns>El objeto excepción.</returns>
    </member>
    <member name="P:System.Web.Mvc.ExceptionContext.ExceptionHandled">
      <summary>Obtiene o establece un valor que indica si la excepción se ha controlado.</summary>
      <returns>true si la excepción se ha controlado; de lo contrario, false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ExceptionContext.Result">
      <summary>Obtiene o establece el resultado de la acción.</summary>
      <returns>Resultado de la acción.</returns>
    </member>
    <member name="T:System.Web.Mvc.ExpressionHelper">
      <summary>Proporciona una clase auxiliar para obtener el nombre del modelo de una expresión.</summary>
    </member>
    <member name="M:System.Web.Mvc.ExpressionHelper.GetExpressionText(System.Linq.Expressions.LambdaExpression)">
      <summary>Obtiene el nombre del modelo de una expresión lambda.</summary>
      <returns>Nombre del modelo.</returns>
      <param name="expression">Expresión.</param>
    </member>
    <member name="M:System.Web.Mvc.ExpressionHelper.GetExpressionText(System.String)">
      <summary>Obtiene el nombre del modelo de una expresión de cadena.</summary>
      <returns>Nombre del modelo.</returns>
      <param name="expression">Expresión.</param>
    </member>
    <member name="T:System.Web.Mvc.FieldValidationMetadata">
      <summary>Proporciona un contenedor para los metadatos de validación de campos del lado cliente.</summary>
    </member>
    <member name="M:System.Web.Mvc.FieldValidationMetadata.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.FieldValidationMetadata" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.FieldValidationMetadata.FieldName">
      <summary>Obtiene o establece el nombre del campo de datos.</summary>
      <returns>Nombre del campo de datos.</returns>
    </member>
    <member name="P:System.Web.Mvc.FieldValidationMetadata.ReplaceValidationMessageContents">
      <summary>Obtiene o establece un valor que indica si el contenido del mensaje de validación se debe reemplazar por el error de validación de clientes.</summary>
      <returns>true si el contenido del mensaje de validación se debe reemplazar por el error de validación de clientes; de lo contrario, false.</returns>
    </member>
    <member name="P:System.Web.Mvc.FieldValidationMetadata.ValidationMessageId">
      <summary>Obtiene o establece el identificador del mensaje del validador.</summary>
      <returns>El identificador del mensaje del validador.</returns>
    </member>
    <member name="P:System.Web.Mvc.FieldValidationMetadata.ValidationRules">
      <summary>Obtiene las reglas de validación de clientes.</summary>
      <returns>Reglas de validación de clientes.</returns>
    </member>
    <member name="T:System.Web.Mvc.FileContentResult">
      <summary>Envía el contenido de un archivo binario a la respuesta.</summary>
    </member>
    <member name="M:System.Web.Mvc.FileContentResult.#ctor(System.Byte[],System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.FileContentResult" /> mediante el contenido del archivo especificado y el tipo de contenido.</summary>
      <param name="fileContents">Matriz de bytes que se va a enviar a la respuesta.</param>
      <param name="contentType">Tipo de contenido que se va a usar para la respuesta.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="fileContents" /> es null.</exception>
    </member>
    <member name="P:System.Web.Mvc.FileContentResult.FileContents">
      <summary>Contenido binario que se va a enviar a la respuesta.</summary>
      <returns>Contenido del archivo.</returns>
    </member>
    <member name="M:System.Web.Mvc.FileContentResult.WriteFile(System.Web.HttpResponseBase)">
      <summary>Escribe el contenido del archivo en la respuesta.</summary>
      <param name="response">La respuesta.</param>
    </member>
    <member name="T:System.Web.Mvc.FilePathResult">
      <summary>Envía el contenido de un archivo a la respuesta.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilePathResult.#ctor(System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.FilePathResult" /> mediante el nombre de archivo y el tipo de contenido especificados.</summary>
      <param name="fileName">Nombre del archivo que se va a enviar a la respuesta.</param>
      <param name="contentType">Tipo de contenido de la respuesta.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="fileName" /> es null o está vacío.</exception>
    </member>
    <member name="P:System.Web.Mvc.FilePathResult.FileName">
      <summary>Obtiene o establece la ruta de acceso del archivo que se envía a la respuesta.</summary>
      <returns>Ruta de acceso del archivo que se envía a la respuesta.</returns>
    </member>
    <member name="M:System.Web.Mvc.FilePathResult.WriteFile(System.Web.HttpResponseBase)">
      <summary>Escribe el archivo en la respuesta.</summary>
      <param name="response">La respuesta.</param>
    </member>
    <member name="T:System.Web.Mvc.FileResult">
      <summary>Representa una clase base que se usa para enviar contenido de archivo binario a la respuesta.</summary>
    </member>
    <member name="M:System.Web.Mvc.FileResult.#ctor(System.String)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.FileResult" />.</summary>
      <param name="contentType">Tipo del contenido.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="contentType" /> es null o está vacío.</exception>
    </member>
    <member name="P:System.Web.Mvc.FileResult.ContentType">
      <summary>Obtiene el tipo de contenido que se va a usa para la respuesta.</summary>
      <returns>Tipo del contenido.</returns>
    </member>
    <member name="M:System.Web.Mvc.FileResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Habilita el procesamiento del resultado de un método de acción mediante un tipo personalizado que se hereda de la clase <see cref="T:System.Web.Mvc.ActionResult" />.</summary>
      <param name="context">Contexto en el que se ejecuta el resultado.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="context" /> es null.</exception>
    </member>
    <member name="P:System.Web.Mvc.FileResult.FileDownloadName">
      <summary>Obtiene o establece el encabezado de disposición del contenido para que se muestre un cuadro de diálogo de descarga de archivos en el explorador con el nombre de archivo especificado.</summary>
      <returns>Nombre del archivo.</returns>
    </member>
    <member name="M:System.Web.Mvc.FileResult.WriteFile(System.Web.HttpResponseBase)">
      <summary>Escribe el archivo en la respuesta.</summary>
      <param name="response">La respuesta.</param>
    </member>
    <member name="T:System.Web.Mvc.FileStreamResult">
      <summary>Envía el contenido binario a la respuesta mediante una instancia de <see cref="T:System.IO.Stream" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.FileStreamResult.#ctor(System.IO.Stream,System.String)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.FileStreamResult" />.</summary>
      <param name="fileStream">Secuencia que se va a enviar a la respuesta.</param>
      <param name="contentType">Tipo de contenido que se va a usar para la respuesta.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="fileStream" /> es null.</exception>
    </member>
    <member name="P:System.Web.Mvc.FileStreamResult.FileStream">
      <summary>Obtiene la secuencia que se enviará a la respuesta.</summary>
      <returns>Secuencia de archivo.</returns>
    </member>
    <member name="M:System.Web.Mvc.FileStreamResult.WriteFile(System.Web.HttpResponseBase)">
      <summary>Escribe el archivo en la respuesta.</summary>
      <param name="response">La respuesta.</param>
    </member>
    <member name="T:System.Web.Mvc.Filter">
      <summary>Representa una clase de metadatos que contiene una referencia a la implementación de una o más de las interfaces de filtro, el ámbito y el orden del filtro.</summary>
    </member>
    <member name="M:System.Web.Mvc.Filter.#ctor(System.Object,System.Web.Mvc.FilterScope,System.Nullable{System.Int32})">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.Filter" />.</summary>
      <param name="instance">Instancia.</param>
      <param name="scope">Ámbito.</param>
      <param name="order">Orden.</param>
    </member>
    <member name="F:System.Web.Mvc.Filter.DefaultOrder">
      <summary>Representa una constante que se usa para especificar la ordenación predeterminada de los filtros.</summary>
    </member>
    <member name="P:System.Web.Mvc.Filter.Instance">
      <summary>Obtiene la instancia de esta clase.</summary>
      <returns>Instancia de esta clase.</returns>
    </member>
    <member name="P:System.Web.Mvc.Filter.Order">
      <summary>Obtiene un valor que indica el orden en el que se aplica el filtro.</summary>
      <returns>Orden en el que se aplica el filtro.</returns>
    </member>
    <member name="P:System.Web.Mvc.Filter.Scope">
      <summary>Obtiene la ordenación de ámbito del filtro.</summary>
      <returns>La ordenación de ámbito del filtro.</returns>
    </member>
    <member name="T:System.Web.Mvc.FilterAttribute">
      <summary>Representa la clase base de los atributos de acción y filtro de resultados.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterAttribute.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.FilterAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.FilterAttribute.AllowMultiple">
      <summary>Obtiene o establece un valor que indica si se puede especificar más de una instancia del atributo de filtro.</summary>
      <returns>true si se puede especificar más de una instancia del atributo de filtro; de lo contrario, false.</returns>
    </member>
    <member name="P:System.Web.Mvc.FilterAttribute.Order">
      <summary>Obtiene o establece el orden en el que se ejecutan los filtros de acción.</summary>
      <returns>Orden en el que se ejecutan los filtros de acción.</returns>
    </member>
    <member name="T:System.Web.Mvc.FilterAttributeFilterProvider">
      <summary>Define un proveedor de filtros para los atributos de filtro.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterAttributeFilterProvider.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.FilterAttributeFilterProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterAttributeFilterProvider.#ctor(System.Boolean)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.FilterAttributeFilterProvider" /> y opcionalmente almacena en caché las instancias de atributo.</summary>
      <param name="cacheAttributeInstances">true para almacenar en caché las instancias de atributo; en caso contrario, false.</param>
    </member>
    <member name="M:System.Web.Mvc.FilterAttributeFilterProvider.GetActionAttributes(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Obtiene una colección de atributos de acción personalizados.</summary>
      <returns>Colección de atributos de acción personalizados.</returns>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="actionDescriptor">Descriptor de la acción.</param>
    </member>
    <member name="M:System.Web.Mvc.FilterAttributeFilterProvider.GetControllerAttributes(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Obtiene una colección de atributos del controlador.</summary>
      <returns>Colección de atributos del controlador.</returns>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="actionDescriptor">Descriptor de la acción.</param>
    </member>
    <member name="M:System.Web.Mvc.FilterAttributeFilterProvider.GetFilters(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Agrega los filtros de todos los proveedores de filtros a una sola colección.</summary>
      <returns>Filtros de la colección de todos los proveedores de filtros.</returns>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="actionDescriptor">Descriptor de la acción.</param>
    </member>
    <member name="T:System.Web.Mvc.FilterInfo">
      <summary>Encapsula información sobre los filtros de acción disponibles.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterInfo.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.FilterInfo" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterInfo.#ctor(System.Collections.Generic.IEnumerable{System.Web.Mvc.Filter})">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.FilterInfo" /> mediante la colección de filtros especificada.</summary>
      <param name="filters">Colección de filtros.</param>
    </member>
    <member name="P:System.Web.Mvc.FilterInfo.ActionFilters">
      <summary>Obtiene todos los filtros de acciones de la aplicación.</summary>
      <returns>Filtros de acción.</returns>
    </member>
    <member name="P:System.Web.Mvc.FilterInfo.AuthorizationFilters">
      <summary>Obtiene todos los filtros de autorización de la aplicación.</summary>
      <returns>Filtros de autorización.</returns>
    </member>
    <member name="P:System.Web.Mvc.FilterInfo.ExceptionFilters">
      <summary>Obtiene todos los filtros de excepciones de la aplicación.</summary>
      <returns>Filtros de excepciones.</returns>
    </member>
    <member name="P:System.Web.Mvc.FilterInfo.ResultFilters">
      <summary>Obtiene todos los filtros de resultados de la aplicación.</summary>
      <returns>Filtros de resultados.</returns>
    </member>
    <member name="T:System.Web.Mvc.FilterProviderCollection">
      <summary>Representa la colección de proveedores de filtros para la aplicación.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterProviderCollection.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.FilterProviderCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterProviderCollection.#ctor(System.Collections.Generic.IList{System.Web.Mvc.IFilterProvider})">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.FilterProviderCollection" /> mediante la colección de proveedores de filtros.</summary>
      <param name="providers">Colección de proveedores de filtros.</param>
    </member>
    <member name="M:System.Web.Mvc.FilterProviderCollection.GetFilters(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Devuelve la colección de proveedores de filtros.</summary>
      <returns>Colección de proveedores de filtros.</returns>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="actionDescriptor">Descriptor de la acción.</param>
    </member>
    <member name="T:System.Web.Mvc.FilterProviders">
      <summary>Proporciona un punto de registro para los filtros.</summary>
    </member>
    <member name="P:System.Web.Mvc.FilterProviders.Providers">
      <summary>Proporciona un punto de registro para los filtros.</summary>
      <returns>La colección de filtros.</returns>
    </member>
    <member name="T:System.Web.Mvc.FilterScope">
      <summary>Define valores que especifican el orden en que los filtros de ASP.NET MVC se ejecutan dentro del mismo tipo de filtros y orden de filtros.</summary>
    </member>
    <member name="F:System.Web.Mvc.FilterScope.First">
      <summary>Especifica el primero.</summary>
    </member>
    <member name="F:System.Web.Mvc.FilterScope.Global">
      <summary>Especifica un orden delante de <see cref="F:System.Web.Mvc.FilterScope.Controller" /> y detrás de <see cref="F:System.Web.Mvc.FilterScope.First" />.</summary>
    </member>
    <member name="F:System.Web.Mvc.FilterScope.Controller">
      <summary>Especifica un orden delante de <see cref="F:System.Web.Mvc.FilterScope.Action" /> y detrás de <see cref="F:System.Web.Mvc.FilterScope.Global" />.</summary>
    </member>
    <member name="F:System.Web.Mvc.FilterScope.Action">
      <summary>Especifica un orden delante de <see cref="F:System.Web.Mvc.FilterScope.Last" /> y detrás de <see cref="F:System.Web.Mvc.FilterScope.Controller" />.</summary>
    </member>
    <member name="F:System.Web.Mvc.FilterScope.Last">
      <summary>Especifica el último.</summary>
    </member>
    <member name="T:System.Web.Mvc.FormCollection">
      <summary>Contiene los proveedores de valor de formulario para la aplicación.</summary>
    </member>
    <member name="M:System.Web.Mvc.FormCollection.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.FormCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.FormCollection.#ctor(System.Collections.Specialized.NameValueCollection)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.FormCollection" />.</summary>
      <param name="collection">La colección.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="collection" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.FormCollection.GetValue(System.String)">
      <summary>Obtiene el proveedor de valor especificado.</summary>
      <returns>Proveedor de valor.</returns>
      <param name="name">Nombre del proveedor de valor que se va a obtener.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.Mvc.FormCollection.System#Web#Mvc#IValueProvider#ContainsPrefix(System.String)">
      <summary>Obtiene un valor que indica si el proveedor de valores contiene una entrada con el prefijo especificado.</summary>
      <returns>Es true si el proveedor de valores contiene una entrada con el prefijo especificado; en caso contrario, es false.</returns>
      <param name="prefix">Prefijo que se va a buscar.</param>
    </member>
    <member name="M:System.Web.Mvc.FormCollection.System#Web#Mvc#IValueProvider#GetValue(System.String)">
      <summary>Obtiene un valor de un proveedor de valores mediante la clave especificada.</summary>
      <returns>Un valor de un proveedor de valores.</returns>
      <param name="key">Clave.</param>
    </member>
    <member name="M:System.Web.Mvc.FormCollection.ToValueProvider">
      <summary>Devuelve un diccionario que contiene los proveedores de valor.</summary>
      <returns>Diccionario de proveedores de valor.</returns>
    </member>
    <member name="T:System.Web.Mvc.FormContext">
      <summary>Encapsula la información necesaria para validar y procesar los datos de entrada de un formulario HTML.</summary>
    </member>
    <member name="M:System.Web.Mvc.FormContext.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.FormContext" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.FormContext.FieldValidators">
      <summary>Obtiene los validadores de campos para el formulario.</summary>
      <returns>Un diccionario de validadores de campo para el formulario.</returns>
    </member>
    <member name="P:System.Web.Mvc.FormContext.FormId">
      <summary>Obtiene o establece el identificador de formulario.</summary>
      <returns>Identificador de formulario.</returns>
    </member>
    <member name="M:System.Web.Mvc.FormContext.GetJsonValidationMetadata">
      <summary>Devuelve un objeto serializado que contiene el identificador de formulario y los valores de validación de campos para el formulario.</summary>
      <returns>Un objeto serializado que contiene el identificador de formulario y los valores de validación de campos para el formulario.</returns>
    </member>
    <member name="M:System.Web.Mvc.FormContext.GetValidationMetadataForField(System.String)">
      <summary>Devuelve el valor de validación para el campo de entrada especificado.</summary>
      <returns>Valor con el que se va a validar la entrada del campo.</returns>
      <param name="fieldName">Nombre del campo para el que se va a recuperar el valor de validación.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="fieldName" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.Mvc.FormContext.GetValidationMetadataForField(System.String,System.Boolean)">
      <summary>Devuelve el valor de validación para el campo de entrada especificado y un valor que indica qué se debe hacer si no se encuentra el valor de validación.</summary>
      <returns>Valor con el que se va a validar la entrada del campo.</returns>
      <param name="fieldName">Nombre del campo para el que se va a recuperar el valor de validación.</param>
      <param name="createIfNotFound">true para crear un valor de validación si no se encuentra uno; de lo contrario, false.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="fieldName" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.Mvc.FormContext.RenderedField(System.String)">
      <summary>Devuelve un valor que indica si el campo especificado se ha representado en el formulario.</summary>
      <returns>true si el campo se ha representado; de lo contrario, false.</returns>
      <param name="fieldName">Nombre de campo.</param>
    </member>
    <member name="M:System.Web.Mvc.FormContext.RenderedField(System.String,System.Boolean)">
      <summary>Establece un valor que indica si el campo especificado se ha representado en el formulario.</summary>
      <param name="fieldName">Nombre de campo.</param>
      <param name="value">true para especificar que el campo se ha representado en el formulario; de lo contrario, false.</param>
    </member>
    <member name="P:System.Web.Mvc.FormContext.ReplaceValidationSummary">
      <summary>Determina si los errores de validación de clientes se deben agregar dinámicamente al resumen de validación.</summary>
      <returns>true si los errores de validación de clientes se deben agregar al resumen de validación; de lo contrario, false.</returns>
    </member>
    <member name="P:System.Web.Mvc.FormContext.ValidationSummaryId">
      <summary>Obtiene o establece el identificador para el resumen de validación.</summary>
      <returns>Identificador para el resumen de validación.</returns>
    </member>
    <member name="T:System.Web.Mvc.FormMethod">
      <summary>Enumera los tipos de solicitud HTTP para un formulario.</summary>
    </member>
    <member name="F:System.Web.Mvc.FormMethod.Get">
      <summary>Especifica una solicitud GET.</summary>
    </member>
    <member name="F:System.Web.Mvc.FormMethod.Post">
      <summary>Especifica una solicitud POST.</summary>
    </member>
    <member name="T:System.Web.Mvc.FormValueProvider">
      <summary>Representa un proveedor de valores para los valores de formulario incluidos en un objeto <see cref="T:System.Collections.Specialized.NameValueCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.FormValueProvider.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.FormValueProvider" />.</summary>
      <param name="controllerContext">Un objeto que encapsula la información sobre la solicitud HTTP actual.</param>
    </member>
    <member name="T:System.Web.Mvc.FormValueProviderFactory">
      <summary>Representa una clase que es responsable de crear una nueva instancia de un objeto de proveedor de valores de formulario.</summary>
    </member>
    <member name="M:System.Web.Mvc.FormValueProviderFactory.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.FormValueProviderFactory" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.FormValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>Devuelve un objeto de proveedor de valores de formulario para el contexto de controlador especificado.</summary>
      <returns>Un objeto de proveedor de valores de formulario.</returns>
      <param name="controllerContext">Un objeto que encapsula la información sobre la solicitud HTTP actual.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="controllerContext" /> es null.</exception>
    </member>
    <member name="T:System.Web.Mvc.GlobalFilterCollection">
      <summary>Representa una clase que contiene todos los filtros globales.</summary>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.GlobalFilterCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.Add(System.Object)">
      <summary>Agrega el filtro especificado a la colección de filtros global.</summary>
      <param name="filter">El filtro.</param>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.Add(System.Object,System.Int32)">
      <summary>Agrega el filtro especificado a la colección de filtros global mediante el orden de ejecución de filtros especificado.</summary>
      <param name="filter">El filtro.</param>
      <param name="order">Orden de ejecución de filtros.</param>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.Clear">
      <summary>Quita todos los filtros de la colección de filtros globales.</summary>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.Contains(System.Object)">
      <summary>Determina si un filtro se encuentra en la colección de filtros globales.</summary>
      <returns>Es true si <paramref name="filter" /> se encuentra en la colección de filtros globales; en caso contrario, es false.</returns>
      <param name="filter">El filtro.</param>
    </member>
    <member name="P:System.Web.Mvc.GlobalFilterCollection.Count">
      <summary>Obtiene el número de filtros de la colección de filtros globales.</summary>
      <returns>El número de filtros de la colección de filtros globales.</returns>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.GetEnumerator">
      <summary>Devuelve un enumerador que recorre en iteración la colección de filtros globales.</summary>
      <returns>Un enumerador que recorre en iteración la colección de filtros globales.</returns>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.Remove(System.Object)">
      <summary>Quita todos los filtros que coinciden con el filtro especificado.</summary>
      <param name="filter">Filtro que se va a quitar.</param>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Esta API admite la infraestructura de ASP.NET MVC y no está previsto su uso directo desde el código. </summary>
      <returns>Un enumerador que recorre en iteración la colección de filtros globales.</returns>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.System#Web#Mvc#IFilterProvider#GetFilters(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Esta API admite la infraestructura de ASP.NET MVC y no está previsto su uso directo desde el código.</summary>
      <returns>Un enumerador que recorre en iteración la colección de filtros globales.</returns>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="actionDescriptor">Descriptor de la acción.</param>
    </member>
    <member name="T:System.Web.Mvc.GlobalFilters">
      <summary>Representa la colección de filtros globales.</summary>
    </member>
    <member name="P:System.Web.Mvc.GlobalFilters.Filters">
      <summary>Obtiene o establece la colección de filtros globales.</summary>
      <returns>La colección de filtros globales.</returns>
    </member>
    <member name="T:System.Web.Mvc.HandleErrorAttribute">
      <summary>Representa un atributo que se utiliza para controlar una excepción producida por un método de acción.</summary>
    </member>
    <member name="M:System.Web.Mvc.HandleErrorAttribute.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.HandleErrorAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.HandleErrorAttribute.ExceptionType">
      <summary>Obtiene o establece el tipo de excepción.</summary>
      <returns>Tipo de la excepción.</returns>
    </member>
    <member name="P:System.Web.Mvc.HandleErrorAttribute.Master">
      <summary>Obtiene o establece la vista principal para mostrar información de excepción.</summary>
      <returns>Vista principal.</returns>
    </member>
    <member name="M:System.Web.Mvc.HandleErrorAttribute.OnException(System.Web.Mvc.ExceptionContext)">
      <summary>Llamado cuando se produce una excepción.</summary>
      <param name="filterContext">Contexto del filtro de acción.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="filterContext" /> es null.</exception>
    </member>
    <member name="P:System.Web.Mvc.HandleErrorAttribute.TypeId">
      <summary>Obtiene un identificador único para este atributo.</summary>
      <returns>Identificador único para este atributo.</returns>
    </member>
    <member name="P:System.Web.Mvc.HandleErrorAttribute.View">
      <summary>Obtiene o establece la vista de página para mostrar información de excepción.</summary>
      <returns>Vista de página.</returns>
    </member>
    <member name="T:System.Web.Mvc.HandleErrorInfo">
      <summary>Encapsula información para administrar un error producido por un método de acción.</summary>
    </member>
    <member name="M:System.Web.Mvc.HandleErrorInfo.#ctor(System.Exception,System.String,System.String)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.HandleErrorInfo" />.</summary>
      <param name="exception">Excepción.</param>
      <param name="controllerName">Nombre del controlador.</param>
      <param name="actionName">Nombre de la acción.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="exception" /> es null.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="controllerName" /> o <paramref name="actionName" /> es null o está vacío.</exception>
    </member>
    <member name="P:System.Web.Mvc.HandleErrorInfo.ActionName">
      <summary>Obtiene o establece el nombre de la acción que se estaba ejecutando cuando se produjo la excepción.</summary>
      <returns>Nombre de la acción.</returns>
    </member>
    <member name="P:System.Web.Mvc.HandleErrorInfo.ControllerName">
      <summary>Obtiene o establece el nombre del controlador que contiene el método de acción que produjo la excepción.</summary>
      <returns>Nombre del controlador.</returns>
    </member>
    <member name="P:System.Web.Mvc.HandleErrorInfo.Exception">
      <summary>Obtiene o establece el objeto de excepción.</summary>
      <returns>El objeto excepción.</returns>
    </member>
    <member name="T:System.Web.Mvc.HiddenInputAttribute">
      <summary>Representa un atributo que se usa para indicar si una propiedad o valor de campo se debería presentar como un elemento input oculto.</summary>
    </member>
    <member name="M:System.Web.Mvc.HiddenInputAttribute.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.HiddenInputAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.HiddenInputAttribute.DisplayValue">
      <summary>Obtiene o establece un valor que indica si se va a mostrar el valor del elemento input oculto.</summary>
      <returns>true si se debe mostrar el valor; en caso contrario, false.</returns>
    </member>
    <member name="T:System.Web.Mvc.HtmlHelper">
      <summary>Representa la compatibilidad para representar los controles HTML en una vista.</summary>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.HtmlHelper" /> mediante el contexto de vista y el contenedor de datos de vista especificados.</summary>
      <param name="viewContext">Contexto de la vista.</param>
      <param name="viewDataContainer">Contenedor de datos de la vista.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="viewContext" /> o <paramref name="viewDataContainer" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer,System.Web.Routing.RouteCollection)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.HtmlHelper" /> mediante el contexto de vista, el contenedor de datos de vista y la colección de rutas especificados.</summary>
      <param name="viewContext">Contexto de la vista.</param>
      <param name="viewDataContainer">Contenedor de datos de la vista.</param>
      <param name="routeCollection">Colección de rutas.</param>
      <exception cref="T:System.ArgumentNullException">El valor de uno o más parámetros es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.AnonymousObjectToHtmlAttributes(System.Object)">
      <summary>Reemplaza los caracteres de subrayado (_) por guiones (-) en los atributos HTML especificados.</summary>
      <returns>Los atributos HTML con los caracteres de subrayado son reemplazados por guiones.</returns>
      <param name="htmlAttributes">Atributos HTML.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.AntiForgeryToken">
      <summary>Genera un campo de formulario oculto (token antifalsificación) que se valida cuando se envía el formulario.</summary>
      <returns>Campo de formulario generado (token antifalsificación).</returns>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.AntiForgeryToken(System.String)">
      <summary>Genera un campo de formulario oculto (token antifalsificación) que se valida cuando se envía el formulario.El valor de campo se genera mediante el valor salt especificado.</summary>
      <returns>Campo de formulario generado (token antifalsificación).</returns>
      <param name="salt">Valor salt, que puede ser cualquier cadena no vacía.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.AntiForgeryToken(System.String,System.String,System.String)">
      <summary>Genera un campo de formulario oculto (token antifalsificación) que se valida cuando se envía el formulario.El valor de campo se genera mediante el valor salt, el dominio y la ruta de acceso especificados.</summary>
      <returns>Campo de formulario generado (token antifalsificación).</returns>
      <param name="salt">Valor salt, que puede ser cualquier cadena no vacía.</param>
      <param name="domain">Dominio de aplicación.</param>
      <param name="path">Ruta de acceso virtual.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.AttributeEncode(System.Object)">
      <summary>Convierte el objeto de atributo especificado en una cadena codificada en HTML.</summary>
      <returns>Cadena codificada en HTML.Si el valor del parámetro es null o está vacío, este método devuelve una cadena vacía.</returns>
      <param name="value">Objeto que se va a codificar.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.AttributeEncode(System.String)">
      <summary>Convierte la cadena de atributo especificada en una cadena codificada en HTML.</summary>
      <returns>Cadena codificada en HTML.Si el valor del parámetro es null o está vacío, este método devuelve una cadena vacía.</returns>
      <param name="value">Cadena que se va a codificar.</param>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.ClientValidationEnabled">
      <summary>Obtiene o establece un valor que indica si se ha habilitado la validación de clientes.</summary>
      <returns>true si la validación de clientes está habilitada; en caso contrario, false.</returns>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.EnableClientValidation">
      <summary>Habilita la validación de entrada que se realiza mediante el script de cliente en el explorador.</summary>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.EnableClientValidation(System.Boolean)">
      <summary>Habilita o deshabilita la validación de clientes.</summary>
      <param name="enabled">true si la validación de clientes está habilitada; en caso contrario, false.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.EnableUnobtrusiveJavaScript">
      <summary>Habilita JavaScript discreto.</summary>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.EnableUnobtrusiveJavaScript(System.Boolean)">
      <summary>Habilita o deshabilita JavaScript discreto.</summary>
      <param name="enabled">true para habilitar el JavaScript discreto; en caso contrario, false.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.Encode(System.Object)">
      <summary>Convierte el valor del objeto especificado en una cadena codificada en HTML.</summary>
      <returns>Cadena codificada en HTML.</returns>
      <param name="value">Objeto que se va a codificar.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.Encode(System.String)">
      <summary>Convierte la cadena especificada en una cadena codificada en HTML.</summary>
      <returns>Cadena codificada en HTML.</returns>
      <param name="value">Cadena que se va a codificar.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.FormatValue(System.Object,System.String)">
      <summary>Da formato al valor.</summary>
      <returns>Valor con formato.</returns>
      <param name="value">Valor.</param>
      <param name="format">La cadena de formato. </param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GenerateIdFromName(System.String)">
      <summary>Crea un identificador de elemento HTML mediante el nombre de elemento especificado.</summary>
      <returns>Identificador del elemento HTML.</returns>
      <param name="name">Nombre del elemento HTML.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="name" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GenerateIdFromName(System.String,System.String)">
      <summary>Crea un identificador de elemento HTML mediante el nombre de elemento especificado y una cadena que reemplaza los puntos en el nombre.</summary>
      <returns>Identificador del elemento HTML.</returns>
      <param name="name">Nombre del elemento HTML.</param>
      <param name="idAttributeDotReplacement">La cadena que reemplaza los puntos (.) en el parámetro <paramref name="name" />.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="name" /> o <paramref name="idAttributeDotReplacement" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GenerateLink(System.Web.Routing.RequestContext,System.Web.Routing.RouteCollection,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Genera un elemento delimitador HTML (elemento a) que vincula al método de acción especificado y permite al usuario especificar el protocolo de comunicaciones, el nombre del host y un fragmento de la dirección URL.</summary>
      <returns>Un elemento HTML que vincula al método de acción especificado.</returns>
      <param name="requestContext">Contexto de la solicitud HTTP.</param>
      <param name="routeCollection">Colección de rutas de dirección URL.</param>
      <param name="linkText">Leyenda de texto que se muestra para el vínculo.</param>
      <param name="routeName">Nombre de la ruta que se utiliza para devolver una ruta de acceso virtual.</param>
      <param name="actionName">Nombre del método de la acción.</param>
      <param name="controllerName">Nombre del controlador.</param>
      <param name="protocol">Protocolo de comunicación, tal como "HTTP" o "HTTPS".Si este parámetro es null, el protocolo tiene como valor predeterminado "HTTP".</param>
      <param name="hostName">Nombre del host.</param>
      <param name="fragment">Identificador de fragmento.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML del elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GenerateLink(System.Web.Routing.RequestContext,System.Web.Routing.RouteCollection,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Genera un elemento delimitador HTML (elemento a) que se vincula al método de acción especificado.</summary>
      <returns>Un elemento HTML que vincula al método de acción especificado.</returns>
      <param name="requestContext">Contexto de la solicitud HTTP.</param>
      <param name="routeCollection">Colección de rutas de dirección URL.</param>
      <param name="linkText">Leyenda de texto que se muestra para el vínculo.</param>
      <param name="routeName">Nombre de la ruta que se utiliza para devolver una ruta de acceso virtual.</param>
      <param name="actionName">Nombre del método de la acción.</param>
      <param name="controllerName">Nombre del controlador.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML del elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GenerateRouteLink(System.Web.Routing.RequestContext,System.Web.Routing.RouteCollection,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Genera un elemento delimitador HTML (elemento a) que se vincula a la ruta de la dirección URL especificada y permite al usuario especificar el protocolo de comunicaciones, el nombre del host y un fragmento de la dirección URL.</summary>
      <returns>Un elemento HTML que se vincula a la ruta de la dirección URL especificada.</returns>
      <param name="requestContext">Contexto de la solicitud HTTP.</param>
      <param name="routeCollection">Colección de rutas de dirección URL.</param>
      <param name="linkText">Leyenda de texto que se muestra para el vínculo.</param>
      <param name="routeName">Nombre de la ruta que se utiliza para devolver una ruta de acceso virtual.</param>
      <param name="protocol">Protocolo de comunicación, tal como "HTTP" o "HTTPS".Si este parámetro es null, el protocolo tiene como valor predeterminado "HTTP".</param>
      <param name="hostName">Nombre del host.</param>
      <param name="fragment">Identificador de fragmento.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML del elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GenerateRouteLink(System.Web.Routing.RequestContext,System.Web.Routing.RouteCollection,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Genera un elemento delimitador HTML (elemento a) que se vincula a la ruta de la dirección URL especificada.</summary>
      <returns>Un elemento HTML que se vincula a la ruta de la dirección URL especificada.</returns>
      <param name="requestContext">Contexto de la solicitud HTTP.</param>
      <param name="routeCollection">Colección de rutas de dirección URL.</param>
      <param name="linkText">Leyenda de texto que se muestra para el vínculo.</param>
      <param name="routeName">Nombre de la ruta que se utiliza para devolver una ruta de acceso virtual.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML del elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GetFormMethodString(System.Web.Mvc.FormMethod)">
      <summary>Devuelve el método HTTP que controla la entrada de formularios (GET o POST) como una cadena.</summary>
      <returns>Cadena del método de formulario, ya sea "get" o "post".</returns>
      <param name="method">Método HTTP que controla el formulario.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GetInputTypeString(System.Web.Mvc.InputType)">
      <summary>Devuelve el tipo de control de entrada HTML como una cadena.</summary>
      <returns>Cadena de tipo de entrada ("casilla", "oculto", "contraseña", "radio" o "texto").</returns>
      <param name="inputType">Tipo de entrada enumerado.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GetUnobtrusiveValidationAttributes(System.String)">
      <summary>Obtiene la colección de atributos de validación de JavaScript discreto mediante el atributo name HTML especificado.</summary>
      <returns>La colección de atributos de validación de JavaScript discreto.</returns>
      <param name="name">Atributo name HTML.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GetUnobtrusiveValidationAttributes(System.String,System.Web.Mvc.ModelMetadata)">
      <summary>Obtiene la colección de atributos de validación de JavaScript discreto mediante el atributo name HTML y los metadatos del modelo especificados.</summary>
      <returns>La colección de atributos de validación de JavaScript discreto.</returns>
      <param name="name">Atributo name HTML.</param>
      <param name="metadata">Metadatos del modelo.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.HttpMethodOverride(System.String)">
      <summary>Devuelve un elemento input oculto que identifica el método de remplazo para el método de transferencia de datos HTTP especificado que usó el cliente.</summary>
      <returns>Método de invalidación que usa el método de transferencia de datos HTTP que usó el cliente.</returns>
      <param name="httpMethod">Método de transferencia de datos HTTP que usó el cliente (DELETE, HEAD o PUT).</param>
      <exception cref="T:System.ArgumentException">El valor del parámetro <paramref name="httpVerb" /> no es "PUT", "DELETE" o "HEAD".</exception>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.HttpMethodOverride(System.Web.Mvc.HttpVerbs)">
      <summary>Devuelve un elemento input oculto que identifica el método de remplazo para el verbo especificado que representa el método de transferencia de datos HTTP que usó el cliente.</summary>
      <returns>Método de invalidación que usa el verbo que representa el método de transferencia de datos HTTP que usó el cliente.</returns>
      <param name="httpVerb">Verbo que representa el método de transferencia de datos HTTP que usó el cliente.</param>
      <exception cref="T:System.ArgumentException">El valor del parámetro <paramref name="httpVerb" /> no es "PUT", "DELETE" o "HEAD".</exception>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.IdAttributeDotReplacement">
      <summary>Obtiene o establece el carácter que reemplaza a los puntos en el atributo identificador de un elemento.</summary>
      <returns>Carácter que reemplaza a los puntos en el atributo identificador de un elemento.</returns>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.Raw(System.Object)">
      <summary>Devuelve marcado que no está codificado en HTML.</summary>
      <returns>Marcado que no está codificado en HTML.</returns>
      <param name="value">Valor.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.Raw(System.String)">
      <summary>Devuelve marcado que no está codificado en HTML.</summary>
      <returns>El marcado HTML sin codificación.</returns>
      <param name="value">El marcado HTML.</param>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.RouteCollection">
      <summary>Obtiene o establece la colección de rutas para la aplicación.</summary>
      <returns>Colección de rutas para la aplicación.</returns>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.UnobtrusiveJavaScriptEnabled">
      <summary>Obtiene o establece un valor que indica si se ha habilitado JavaScript discreto.</summary>
      <returns>true si JavaScript discreto está habilitado; en caso contrario, false.</returns>
    </member>
    <member name="F:System.Web.Mvc.HtmlHelper.ValidationInputCssClassName">
      <summary>Nombre de la clase CSS que se usa para definir el estilo de un campo de entrada cuando se produce un error de validación.</summary>
    </member>
    <member name="F:System.Web.Mvc.HtmlHelper.ValidationInputValidCssClassName">
      <summary>Nombre de la clase CSS que se usa para definir el estilo de un campo de entrada cuando la entrada es válida.</summary>
    </member>
    <member name="F:System.Web.Mvc.HtmlHelper.ValidationMessageCssClassName">
      <summary>Nombre de la clase CSS que se usa para definir el estilo del mensaje de error cuando se produce un error de validación.</summary>
    </member>
    <member name="F:System.Web.Mvc.HtmlHelper.ValidationMessageValidCssClassName">
      <summary>Nombre de la clase CSS que se usa para definir el estilo del mensaje de validación cuando la entrada es válida.</summary>
    </member>
    <member name="F:System.Web.Mvc.HtmlHelper.ValidationSummaryCssClassName">
      <summary>Nombre de la clase CSS que se usa para definir el estilo de los mensajes de error del resumen de validación.</summary>
    </member>
    <member name="F:System.Web.Mvc.HtmlHelper.ValidationSummaryValidCssClassName">
      <summary>Nombre de la clase CSS que se usa para definir el estilo del resumen de validación cuando la entrada es válida.</summary>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.ViewBag">
      <summary>Obtiene el contenedor de la vista.</summary>
      <returns>Contenedor de la vista.</returns>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.ViewContext">
      <summary>Obtiene o establece la información de contexto acerca de la vista.</summary>
      <returns>Contexto de la vista.</returns>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.ViewData">
      <summary>Obtiene el diccionario de datos de la vista actual.</summary>
      <returns>Diccionario de datos de vista.</returns>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.ViewDataContainer">
      <summary>Obtiene o establece el contenedor de datos de vista.</summary>
      <returns>Contenedor de datos de la vista.</returns>
    </member>
    <member name="T:System.Web.Mvc.HtmlHelper`1">
      <summary>Representa la compatibilidad para presentar los controles HTML en una vista fuertemente tipada.</summary>
      <typeparam name="TModel">Tipo del modelo.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper`1.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.HtmlHelper`1" /> mediante el contexto de vista y el contenedor de datos de vista especificados.</summary>
      <param name="viewContext">Contexto de la vista.</param>
      <param name="viewDataContainer">Contenedor de datos de la vista.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper`1.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer,System.Web.Routing.RouteCollection)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.HtmlHelper`1" /> mediante el contexto de vista, el contenedor de datos de vista y la colección de rutas especificados.</summary>
      <param name="viewContext">Contexto de la vista.</param>
      <param name="viewDataContainer">Contenedor de datos de la vista.</param>
      <param name="routeCollection">Colección de rutas.</param>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper`1.ViewBag">
      <summary>Obtiene el contenedor de la vista.</summary>
      <returns>Contenedor de la vista.</returns>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper`1.ViewData">
      <summary>Obtiene el diccionario de datos de la vista fuertemente tipada.</summary>
      <returns>Diccionario de datos de la vista fuertemente tipada.</returns>
    </member>
    <member name="T:System.Web.Mvc.HttpDeleteAttribute">
      <summary>Representa un atributo que se usa para restringir un método de acción de forma que el método solo administre las solicitudes DELETE de HTTP.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpDeleteAttribute.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.HttpDeleteAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpDeleteAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>Determina si una solicitud es una solicitud DELETE de HTTP válida.</summary>
      <returns>true si la solicitud es válida; en caso contrario, false.</returns>
      <param name="controllerContext">Contexto en el que funciona el controlador.La información de contexto incluye el controlador, el contenido HTTP, el contexto de la solicitud y los datos de la ruta.</param>
      <param name="methodInfo">Encapsula la información sobre un método, como su tipo, tipo de valor devuelto y argumentos.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpFileCollectionValueProvider">
      <summary>Representa un proveedor de valores que se va a usar con los valores que proceden de una colección de archivos HTTP.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpFileCollectionValueProvider.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.HttpFileCollectionValueProvider" />.</summary>
      <param name="controllerContext">Un objeto que encapsula la información sobre la solicitud HTTP actual.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpFileCollectionValueProviderFactory">
      <summary>Representa una clase que es responsable de crear una nueva instancia de un objeto de proveedor de valores de colección de archivos HTTP.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpFileCollectionValueProviderFactory.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.HttpFileCollectionValueProviderFactory" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpFileCollectionValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>Devuelve un objeto de proveedor de valores para el contexto de controlador especificado.</summary>
      <returns>Un proveedor de valores de colección de archivos HTTP.</returns>
      <param name="controllerContext">Objeto que encapsula la información sobre la solicitud HTTP.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="controllerContext" /> es null.</exception>
    </member>
    <member name="T:System.Web.Mvc.HttpGetAttribute">
      <summary>Representa un atributo que se usa para restringir un método de acción de forma que el método administre solamente las solicitudes HTTP GET.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpGetAttribute.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.HttpGetAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpGetAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>Determina si una solicitud es una solicitud GET de HTTP válida.</summary>
      <returns>true si la solicitud es válida; en caso contrario, false.</returns>
      <param name="controllerContext">Contexto en el que funciona el controlador.La información de contexto incluye el controlador, el contenido HTTP, el contexto de la solicitud y los datos de la ruta.</param>
      <param name="methodInfo">Encapsula la información sobre un método, como su tipo, tipo de valor devuelto y argumentos.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpHeadAttribute">
      <summary>Especifica que la solicitud HTTP debe ser el método HTTP HEAD.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpHeadAttribute.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.HttpHeadAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpHeadAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>Determina si una solicitud es una solicitud HEAD de HTTP válida.</summary>
      <returns>true si la solicitud es HEAD; en caso contrario, false.</returns>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="methodInfo">Información de método.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpNotFoundResult">
      <summary>Define un objeto que se usa para indicar que no se encontró el recurso solicitado.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpNotFoundResult.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.HttpNotFoundResult" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpNotFoundResult.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.HttpNotFoundResult" /> mediante una descripción del estado.</summary>
      <param name="statusDescription">Descripción del estado.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpOptionsAttribute">
      <summary>Representa un atributo que se usa para restringir un método de forma que el método administre solamente las solicitudes HTTP OPTIONS.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpOptionsAttribute.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.HttpOptionsAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpOptionsAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>Determina si una solicitud es una solicitud OPTIONS de HTTP válida.</summary>
      <returns>true si la solicitud es OPTIONS; en caso contrario, false.</returns>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="methodInfo">Información de método.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpPatchAttribute">
      <summary>Representa un atributo que se usa para restringir un método de acción de forma que el método administre solamente las solicitudes HTTP PATCH.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPatchAttribute.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.HttpPatchAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPatchAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>Determina si una solicitud es una solicitud PATCH de HTTP válida.</summary>
      <returns>true si la solicitud es PATCH; de lo contrario, false.</returns>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="methodInfo">Información de método.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpPostAttribute">
      <summary>Representa un atributo que se usa para restringir un método de acción de forma que el método administre solamente las solicitudes HTTP POST.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPostAttribute.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.HttpPostAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPostAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>Determina si una solicitud es una solicitud POST de HTTP válida.</summary>
      <returns>true si la solicitud es válida; en caso contrario, false.</returns>
      <param name="controllerContext">Contexto en el que funciona el controlador.La información de contexto incluye el controlador, el contenido HTTP, el contexto de la solicitud y los datos de la ruta.</param>
      <param name="methodInfo">Encapsula la información sobre un método, como su tipo, tipo de valor devuelto y argumentos.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpPostedFileBaseModelBinder">
      <summary>Enlaza un modelo a un archivo expuesto.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPostedFileBaseModelBinder.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.HttpPostedFileBaseModelBinder" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPostedFileBaseModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Enlaza el modelo.</summary>
      <returns>Valor enlazado.</returns>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="bindingContext">Contexto de enlace.</param>
      <exception cref="T:System.ArgumentNullException">El valor de uno o ambos parámetros es null.</exception>
    </member>
    <member name="T:System.Web.Mvc.HttpPutAttribute">
      <summary>Representa un atributo que se usa para restringir un método de acción de forma que el método administre solamente las solicitudes HTTP PUT.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPutAttribute.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.HttpPutAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPutAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>Determina si una solicitud es una solicitud PUT de HTTP válida.</summary>
      <returns>true si la solicitud es válida; en caso contrario, false.</returns>
      <param name="controllerContext">Contexto en el que funciona el controlador.La información de contexto incluye el controlador, el contenido HTTP, el contexto de la solicitud y los datos de la ruta.</param>
      <param name="methodInfo">Encapsula la información sobre un método, como su tipo, tipo de valor devuelto y argumentos.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpRequestExtensions">
      <summary>Extiende la clase <see cref="T:System.Web.HttpRequestBase" /> que contiene los valores HTTP enviados por el cliente durante una solicitud web.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpRequestExtensions.GetHttpMethodOverride(System.Web.HttpRequestBase)">
      <summary>Recupera la invalidación del método de transferencia de datos HTTP usado por el cliente.</summary>
      <returns>Invalidación del método de transferencia de datos HTTP usado por el cliente.</returns>
      <param name="request">Un objeto que contiene los valores HTTP enviados por un cliente durante una solicitud web.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="request" /> es null.</exception>
      <exception cref="T:System.NotImplementedException">No se implementó la invalidación del método de transferencia de datos HTTP.</exception>
    </member>
    <member name="T:System.Web.Mvc.HttpStatusCodeResult">
      <summary>Proporciona un modo para devolver un resultado de la acción con un código de estado de respuesta HTTP y una descripción específicos.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpStatusCodeResult.#ctor(System.Int32)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.HttpStatusCodeResult" /> mediante un código de estado.</summary>
      <param name="statusCode">Código de estado.</param>
    </member>
    <member name="M:System.Web.Mvc.HttpStatusCodeResult.#ctor(System.Int32,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.HttpStatusCodeResult" /> mediante un código de estado y una descripción del estado.</summary>
      <param name="statusCode">Código de estado.</param>
      <param name="statusDescription">Descripción del estado.</param>
    </member>
    <member name="M:System.Web.Mvc.HttpStatusCodeResult.#ctor(System.Net.HttpStatusCode)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.HttpStatusCodeResult" /> mediante un código de estado.</summary>
      <param name="statusCode">Código de estado.</param>
    </member>
    <member name="M:System.Web.Mvc.HttpStatusCodeResult.#ctor(System.Net.HttpStatusCode,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.HttpStatusCodeResult" /> mediante un código de estado y una descripción del estado.</summary>
      <param name="statusCode">Código de estado.</param>
      <param name="statusDescription">Descripción del estado.</param>
    </member>
    <member name="M:System.Web.Mvc.HttpStatusCodeResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Habilita el procesamiento del resultado de un método de acción mediante un tipo personalizado que se hereda de la clase <see cref="T:System.Web.Mvc.ActionResult" />.</summary>
      <param name="context">Contexto en el que se ejecuta el resultado.La información de contexto incluye el controlador, el contenido HTTP, el contexto de la solicitud y los datos de la ruta.</param>
    </member>
    <member name="P:System.Web.Mvc.HttpStatusCodeResult.StatusCode">
      <summary>Obtiene el código de estado HTTP.</summary>
      <returns>Código de estado HTTP.</returns>
    </member>
    <member name="P:System.Web.Mvc.HttpStatusCodeResult.StatusDescription">
      <summary>Obtiene la descripción del estado HTTP.</summary>
      <returns>Descripción del estado HTTP.</returns>
    </member>
    <member name="T:System.Web.Mvc.HttpUnauthorizedResult">
      <summary>Representa el resultado de una solicitud HTTP no autorizada.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpUnauthorizedResult.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.HttpUnauthorizedResult" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpUnauthorizedResult.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.HttpUnauthorizedResult" /> mediante la descripción del estado.</summary>
      <param name="statusDescription">Descripción del estado.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpVerbs">
      <summary>Enumera los verbos HTTP.</summary>
    </member>
    <member name="F:System.Web.Mvc.HttpVerbs.Get">
      <summary>Recupera la información o entidad identificada por el identificador URI de la solicitud.</summary>
    </member>
    <member name="F:System.Web.Mvc.HttpVerbs.Post">
      <summary>Expone una nueva entidad como adición a un identificador URI.</summary>
    </member>
    <member name="F:System.Web.Mvc.HttpVerbs.Put">
      <summary>Reemplaza una entidad identificada por un URI.</summary>
    </member>
    <member name="F:System.Web.Mvc.HttpVerbs.Delete">
      <summary>Solicita que se elimine un identificador URI especificado.</summary>
    </member>
    <member name="F:System.Web.Mvc.HttpVerbs.Head">
      <summary>Recupera los encabezados de mensaje para la información o entidad identificada por el identificador URI de la solicitud.</summary>
    </member>
    <member name="F:System.Web.Mvc.HttpVerbs.Patch">
      <summary>Solicita que el conjunto de cambios que se describe en la entidad de solicitud se aplique al recurso identificado mediante el URI de solicitud.</summary>
    </member>
    <member name="F:System.Web.Mvc.HttpVerbs.Options">
      <summary>Representa una solicitud de información sobre las opciones de comunicación disponibles en las cadenas de solicitud o respuesta identificadas mediante el URI de solicitud.</summary>
    </member>
    <member name="T:System.Web.Mvc.IActionFilter">
      <summary>Define los métodos que se utilizan en un filtro de acción.</summary>
    </member>
    <member name="M:System.Web.Mvc.IActionFilter.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
      <summary>Se llama cuando se ejecuta el método de la acción.</summary>
      <param name="filterContext">Contexto del filtro.</param>
    </member>
    <member name="M:System.Web.Mvc.IActionFilter.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
      <summary>Se llama antes de que se ejecute un método de acción.</summary>
      <param name="filterContext">Contexto del filtro.</param>
    </member>
    <member name="T:System.Web.Mvc.IActionInvoker">
      <summary>Define el contrato para un invocador de acción, que se usa para invocar una acción en respuesta a una solicitud HTTP.</summary>
    </member>
    <member name="M:System.Web.Mvc.IActionInvoker.InvokeAction(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Invoca la acción especificada mediante el contexto del controlador especificado.</summary>
      <returns>true si la acción se encontró; de lo contrario false.</returns>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="actionName">Nombre de la acción.</param>
    </member>
    <member name="T:System.Web.Mvc.IAuthorizationFilter">
      <summary>Define los métodos necesarios para un filtro de autorización.</summary>
    </member>
    <member name="M:System.Web.Mvc.IAuthorizationFilter.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>Se llama cuando se necesita autorización.</summary>
      <param name="filterContext">Contexto del filtro.</param>
    </member>
    <member name="T:System.Web.Mvc.IClientValidatable">
      <summary>Proporciona un modo para que el marco de validación de ASP.NET MVC descubra en tiempo de ejecución si un validador tiene compatibilidad con la validación del cliente.</summary>
    </member>
    <member name="M:System.Web.Mvc.IClientValidatable.GetClientValidationRules(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Cuando se implementa en una clase, devuelve las reglas de validación del cliente para esa clase.</summary>
      <returns>Reglas de validación del cliente para este validador.</returns>
      <param name="metadata">Metadatos del modelo.</param>
      <param name="context">Contexto del controlador.</param>
    </member>
    <member name="T:System.Web.Mvc.IController">
      <summary>Define los métodos necesarios para un controlador.</summary>
    </member>
    <member name="M:System.Web.Mvc.IController.Execute(System.Web.Routing.RequestContext)">
      <summary>Ejecuta el contexto de solicitud especificado.</summary>
      <param name="requestContext">Contexto de la solicitud.</param>
    </member>
    <member name="T:System.Web.Mvc.IControllerActivator">
      <summary>Proporciona un control más preciso sobre cómo se crean instancias de los controladores mediante la inserción de dependencias.</summary>
    </member>
    <member name="M:System.Web.Mvc.IControllerActivator.Create(System.Web.Routing.RequestContext,System.Type)">
      <summary>Cuando se implementa en una clase, crea un controlador.</summary>
      <returns>El controlador creado.</returns>
      <param name="requestContext">Contexto de la solicitud.</param>
      <param name="controllerType">Tipo del controlador.</param>
    </member>
    <member name="T:System.Web.Mvc.IControllerFactory">
      <summary>Define los métodos necesarios para un generador del controlador.</summary>
    </member>
    <member name="M:System.Web.Mvc.IControllerFactory.CreateController(System.Web.Routing.RequestContext,System.String)">
      <summary>Crea el controlador especificado mediante el contexto de solicitud especificado.</summary>
      <returns>El controlador.</returns>
      <param name="requestContext">Contexto de la solicitud.</param>
      <param name="controllerName">Nombre del controlador.</param>
    </member>
    <member name="M:System.Web.Mvc.IControllerFactory.GetControllerSessionBehavior(System.Web.Routing.RequestContext,System.String)">
      <summary>Obtiene el comportamiento de sesión del controlador.</summary>
      <returns>Comportamiento de sesión del controlador.</returns>
      <param name="requestContext">Contexto de la solicitud.</param>
      <param name="controllerName">Nombre del controlador cuyo comportamiento de sesión desea obtener.</param>
    </member>
    <member name="M:System.Web.Mvc.IControllerFactory.ReleaseController(System.Web.Mvc.IController)">
      <summary>Libera el controlador especificado.</summary>
      <param name="controller">El controlador.</param>
    </member>
    <member name="T:System.Web.Mvc.IDependencyResolver">
      <summary>Define los métodos que simplifican la ubicación de servicios y la resolución de dependencias.</summary>
    </member>
    <member name="M:System.Web.Mvc.IDependencyResolver.GetService(System.Type)">
      <summary>Resuelve los servicios registrados de forma única que admiten la creación de objetos arbitrarios.</summary>
      <returns>El objeto o servicio solicitado.</returns>
      <param name="serviceType">Tipo de objeto o servicio solicitado.</param>
    </member>
    <member name="M:System.Web.Mvc.IDependencyResolver.GetServices(System.Type)">
      <summary>Resuelve varios servicios registrados.</summary>
      <returns>Los servicios solicitados.</returns>
      <param name="serviceType">Tipo de servicios solicitados.</param>
    </member>
    <member name="T:System.Web.Mvc.IEnumerableValueProvider">
      <summary>Representa una clase <see cref="T:System.Web.Mvc.IValueProvider" /> especial con la capacidad para ser enumerable.</summary>
    </member>
    <member name="M:System.Web.Mvc.IEnumerableValueProvider.GetKeysFromPrefix(System.String)">
      <summary>Obtiene las claves del prefijo.</summary>
      <returns>Claves.</returns>
      <param name="prefix">Prefijo.</param>
    </member>
    <member name="T:System.Web.Mvc.IExceptionFilter">
      <summary>Define los métodos necesarios para un filtro de excepción.</summary>
    </member>
    <member name="M:System.Web.Mvc.IExceptionFilter.OnException(System.Web.Mvc.ExceptionContext)">
      <summary>Llamado cuando se produce una excepción.</summary>
      <param name="filterContext">Contexto del filtro.</param>
    </member>
    <member name="T:System.Web.Mvc.IFilterProvider">
      <summary>Proporciona una interfaz para la búsqueda de filtros.</summary>
    </member>
    <member name="M:System.Web.Mvc.IFilterProvider.GetFilters(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Devuelve un enumerador que contiene todos las instancias de <see cref="T:System.Web.Mvc.IFilterProvider" /> en el localizador de servicios.</summary>
      <returns>El enumerador que contiene todos las instancias de <see cref="T:System.Web.Mvc.IFilterProvider" /> en el localizador de servicios.</returns>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="actionDescriptor">Descriptor de la acción.</param>
    </member>
    <member name="T:System.Web.Mvc.IMetadataAware">
      <summary>Proporciona una interfaz para exponer los atributos a la clase <see cref="T:System.Web.Mvc.AssociatedMetadataProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.IMetadataAware.OnMetadataCreated(System.Web.Mvc.ModelMetadata)">
      <summary>Cuando se implementa en una clase, proporciona los metadatos para el proceso de creación de metadatos del modelo.</summary>
      <param name="metadata">Metadatos del modelo.</param>
    </member>
    <member name="T:System.Web.Mvc.IModelBinder">
      <summary>Define los métodos necesarios para un enlazador de modelos.</summary>
    </member>
    <member name="M:System.Web.Mvc.IModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Enlaza el modelo a un valor utilizando el contexto del controlador y el contexto de enlace especificados.</summary>
      <returns>Valor enlazado.</returns>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="bindingContext">Contexto de enlace.</param>
    </member>
    <member name="T:System.Web.Mvc.IModelBinderProvider">
      <summary>Define los métodos que habilitan las implementaciones dinámicas de enlace de modelos para las clases que implementan la interfaz <see cref="T:System.Web.Mvc.IModelBinder" />. </summary>
    </member>
    <member name="M:System.Web.Mvc.IModelBinderProvider.GetBinder(System.Type)">
      <summary>Devuelve el enlazador de modelos del tipo especificado.</summary>
      <returns>El enlazador de modelos del tipo especificado.</returns>
      <param name="modelType">Tipo del modelo.</param>
    </member>
    <member name="T:System.Web.Mvc.IMvcFilter">
      <summary>Define los miembros que especifican el orden de los filtros e indica si se permiten varios filtros.</summary>
    </member>
    <member name="P:System.Web.Mvc.IMvcFilter.AllowMultiple">
      <summary>Cuando se implementa en una clase, obtiene o establece un valor que indica si se permiten varios filtros.</summary>
      <returns>true si se permiten varios filtros; en caso contrario, false.</returns>
    </member>
    <member name="P:System.Web.Mvc.IMvcFilter.Order">
      <summary>Cuando se implementa en una clase, obtiene el orden de filtros.</summary>
      <returns>El orden de filtros.</returns>
    </member>
    <member name="T:System.Web.Mvc.InputType">
      <summary>Enumera los tipos de controles de entrada.</summary>
    </member>
    <member name="F:System.Web.Mvc.InputType.CheckBox">
      <summary>Casilla.</summary>
    </member>
    <member name="F:System.Web.Mvc.InputType.Hidden">
      <summary>Campo oculto.</summary>
    </member>
    <member name="F:System.Web.Mvc.InputType.Password">
      <summary>Cuadro de contraseña.</summary>
    </member>
    <member name="F:System.Web.Mvc.InputType.Radio">
      <summary>Botón de radio.</summary>
    </member>
    <member name="F:System.Web.Mvc.InputType.Text">
      <summary>Cuadro de texto.</summary>
    </member>
    <member name="T:System.Web.Mvc.IResultFilter">
      <summary>Define los métodos necesarios para un filtro de resultados.</summary>
    </member>
    <member name="M:System.Web.Mvc.IResultFilter.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)">
      <summary>Se llama después de que se ejecute un resultado de acción.</summary>
      <param name="filterContext">Contexto del filtro.</param>
    </member>
    <member name="M:System.Web.Mvc.IResultFilter.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)">
      <summary>Se llama antes de que se ejecute un resultado de acción.</summary>
      <param name="filterContext">Contexto del filtro.</param>
    </member>
    <member name="T:System.Web.Mvc.IRouteWithArea">
      <summary>Asocia una ruta a un área en una aplicación de ASP.NET MVC.</summary>
    </member>
    <member name="P:System.Web.Mvc.IRouteWithArea.Area">
      <summary>Obtiene el nombre del área con la que se va a asociar la ruta.</summary>
      <returns>Nombre del área con la que se va a asociar la ruta.</returns>
    </member>
    <member name="T:System.Web.Mvc.ITempDataProvider">
      <summary>Define el contrato para proveedores de datos temporales que almacenan datos que se ven en la solicitud siguiente.</summary>
    </member>
    <member name="M:System.Web.Mvc.ITempDataProvider.LoadTempData(System.Web.Mvc.ControllerContext)">
      <summary>Carga los datos temporales.</summary>
      <returns>Datos temporales.</returns>
      <param name="controllerContext">Contexto del controlador.</param>
    </member>
    <member name="M:System.Web.Mvc.ITempDataProvider.SaveTempData(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Guarda los datos temporales.</summary>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="values">Valores.</param>
    </member>
    <member name="T:System.Web.Mvc.IUnvalidatedValueProvider">
      <summary>Representa una interfaz <see cref="T:System.Web.Mvc.IValueProvider" /> que puede omitir la validación de solicitudes.</summary>
    </member>
    <member name="M:System.Web.Mvc.IUnvalidatedValueProvider.GetValue(System.String,System.Boolean)">
      <summary>Recupera el valor del objeto asociado a la clave especificada.</summary>
      <returns>Valor del objeto para la clave especificada.</returns>
      <param name="key">Clave.</param>
      <param name="skipValidation">true si la validación debería omitirse; en caso contrario, false.</param>
    </member>
    <member name="T:System.Web.Mvc.IValueProvider">
      <summary>Define los métodos que se requieren para un proveedor de valores en ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.IValueProvider.ContainsPrefix(System.String)">
      <summary>Determina si la colección contiene el prefijo especificado.</summary>
      <returns>true si la colección contiene el prefijo especificado; de lo contrario, false.</returns>
      <param name="prefix">Prefijo que se va a buscar.</param>
    </member>
    <member name="M:System.Web.Mvc.IValueProvider.GetValue(System.String)">
      <summary>Recupera un objeto de valor usando la clave especificada.</summary>
      <returns>Objeto de valor para la clave especificada.</returns>
      <param name="key">Clave para la que se va a recuperar el objeto de valor.</param>
    </member>
    <member name="T:System.Web.Mvc.IView">
      <summary>Define los métodos necesarios para una vista.</summary>
    </member>
    <member name="M:System.Web.Mvc.IView.Render(System.Web.Mvc.ViewContext,System.IO.TextWriter)">
      <summary>Representa el contexto de vista especificado mediante el objeto de sistema de escritura especificado.</summary>
      <param name="viewContext">Contexto de la vista.</param>
      <param name="writer">Objeto de sistema de escritura.</param>
    </member>
    <member name="T:System.Web.Mvc.IViewDataContainer">
      <summary>Define los métodos necesarios para un diccionario de datos de vista.</summary>
    </member>
    <member name="P:System.Web.Mvc.IViewDataContainer.ViewData">
      <summary>Obtiene o establece el diccionario de datos de vista.</summary>
      <returns>Diccionario de datos de vista.</returns>
    </member>
    <member name="T:System.Web.Mvc.IViewEngine">
      <summary>Define los métodos necesarios para un motor de vista.</summary>
    </member>
    <member name="M:System.Web.Mvc.IViewEngine.FindPartialView(System.Web.Mvc.ControllerContext,System.String,System.Boolean)">
      <summary>Busca la vista parcial especificada mediante el contexto de controlador especificado.</summary>
      <returns>Vista parcial.</returns>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="partialViewName">Nombre de la vista parcial.</param>
      <param name="useCache">true para especificar que el motor de vista devuelve la vista almacenada en memoria caché, si existe una vista almacenada en memoria caché; de lo contrario, false.</param>
    </member>
    <member name="M:System.Web.Mvc.IViewEngine.FindView(System.Web.Mvc.ControllerContext,System.String,System.String,System.Boolean)">
      <summary>Busca la vista especificada mediante el contexto de controlador especificado.</summary>
      <returns>Vista de página.</returns>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="viewName">Nombre de la vista.</param>
      <param name="masterName">Nombre del maestro.</param>
      <param name="useCache">true para especificar que el motor de vista devuelve la vista almacenada en memoria caché, si existe una vista almacenada en memoria caché; de lo contrario, false.</param>
    </member>
    <member name="M:System.Web.Mvc.IViewEngine.ReleaseView(System.Web.Mvc.ControllerContext,System.Web.Mvc.IView)">
      <summary>Libera la vista especificada mediante el contexto de controlador especificado.</summary>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="view">La vista.</param>
    </member>
    <member name="T:System.Web.Mvc.IViewLocationCache">
      <summary>Define los métodos necesarios para almacenar en caché las ubicaciones de vista de la memoria.</summary>
    </member>
    <member name="M:System.Web.Mvc.IViewLocationCache.GetViewLocation(System.Web.HttpContextBase,System.String)">
      <summary>Obtiene la ubicación de la vista mediante el contexto HTTP especificado y la clave de caché.</summary>
      <returns>Ubicación de la vista.</returns>
      <param name="httpContext">Contexto HTTP.</param>
      <param name="key">Clave de caché.</param>
    </member>
    <member name="M:System.Web.Mvc.IViewLocationCache.InsertViewLocation(System.Web.HttpContextBase,System.String,System.String)">
      <summary>Inserta la ubicación de vista especificada en la memoria caché mediante el contexto HTTP y la clave de caché especificados.</summary>
      <param name="httpContext">Contexto HTTP.</param>
      <param name="key">Clave de caché.</param>
      <param name="virtualPath">Ruta de acceso virtual.</param>
    </member>
    <member name="T:System.Web.Mvc.IViewPageActivator">
      <summary>Proporciona un control más preciso sobre cómo se crean páginas de vista mediante la inserción de dependencias.</summary>
    </member>
    <member name="M:System.Web.Mvc.IViewPageActivator.Create(System.Web.Mvc.ControllerContext,System.Type)">
      <summary>Proporciona un control más preciso sobre cómo se crean páginas de vista mediante la inserción de dependencias.</summary>
      <returns>La página de vista creada.</returns>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="type">Tipo del controlador.</param>
    </member>
    <member name="T:System.Web.Mvc.JavaScriptResult">
      <summary>Envía el contenido de JavaScript a la respuesta.</summary>
    </member>
    <member name="M:System.Web.Mvc.JavaScriptResult.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.JavaScriptResult" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.JavaScriptResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Habilita el procesamiento del resultado de un método de acción mediante un tipo personalizado que se hereda de la clase <see cref="T:System.Web.Mvc.ActionResult" />.</summary>
      <param name="context">Contexto en el que se ejecuta el resultado.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="context" /> es null.</exception>
    </member>
    <member name="P:System.Web.Mvc.JavaScriptResult.Script">
      <summary>Obtiene o establece el script.</summary>
      <returns>El script.</returns>
    </member>
    <member name="T:System.Web.Mvc.JsonRequestBehavior">
      <summary>Especifica si se permiten las solicitudes GET de HTTP del cliente.</summary>
    </member>
    <member name="F:System.Web.Mvc.JsonRequestBehavior.AllowGet">
      <summary>Se permiten las solicitudes GET de HTTP del cliente.</summary>
    </member>
    <member name="F:System.Web.Mvc.JsonRequestBehavior.DenyGet">
      <summary>No se permiten las solicitudes GET de HTTP del cliente.</summary>
    </member>
    <member name="T:System.Web.Mvc.JsonResult">
      <summary>Representa una clase que se usa para enviar contenido con formato JSON a la respuesta.</summary>
    </member>
    <member name="M:System.Web.Mvc.JsonResult.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.JsonResult" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.JsonResult.ContentEncoding">
      <summary>Obtiene o establece la codificación del contenido.</summary>
      <returns>Codificación del contenido.</returns>
    </member>
    <member name="P:System.Web.Mvc.JsonResult.ContentType">
      <summary>Obtiene o establece el tipo de contenido.</summary>
      <returns>Tipo del contenido.</returns>
    </member>
    <member name="P:System.Web.Mvc.JsonResult.Data">
      <summary>Obtiene o establece los datos.</summary>
      <returns>Los datos.</returns>
    </member>
    <member name="M:System.Web.Mvc.JsonResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Habilita el procesamiento del resultado de un método de acción mediante un tipo personalizado que se hereda de la clase <see cref="T:System.Web.Mvc.ActionResult" />.</summary>
      <param name="context">Contexto en el que se ejecuta el resultado.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="context" /> es null.</exception>
    </member>
    <member name="P:System.Web.Mvc.JsonResult.JsonRequestBehavior">
      <summary>Obtiene o establece un valor que indica si se permiten las solicitudes GET de HTTP desde el cliente.</summary>
      <returns>Un valor que indica si se permiten las solicitudes GET de HTTP desde el cliente.</returns>
    </member>
    <member name="P:System.Web.Mvc.JsonResult.MaxJsonLength">
      <summary>Obtiene o establece la longitud máxima de los datos.</summary>
      <returns>Longitud máxima de los datos.</returns>
    </member>
    <member name="P:System.Web.Mvc.JsonResult.RecursionLimit">
      <summary>Obtiene o establece el limite de recursión.</summary>
      <returns>Límite de recursión.</returns>
    </member>
    <member name="T:System.Web.Mvc.JsonValueProviderFactory">
      <summary>Habilita los métodos de acción para enviar y recibir el texto con formato JSON y para el enlace de modelo del texto JSON a los parámetros de métodos de acción.</summary>
    </member>
    <member name="M:System.Web.Mvc.JsonValueProviderFactory.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.JsonValueProviderFactory" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.JsonValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>Devuelve un objeto de proveedor de valores JSON para el contexto del controlador especificado.</summary>
      <returns>Objeto de proveedor de valores JSON para el contexto de controlador especificado.</returns>
      <param name="controllerContext">Contexto del controlador.</param>
    </member>
    <member name="T:System.Web.Mvc.LinqBinaryModelBinder">
      <summary>Asigna una solicitud de explorador a un objeto LINQ <see cref="T:System.Data.Linq.Binary" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.LinqBinaryModelBinder.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.LinqBinaryModelBinder" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.LinqBinaryModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Enlaza el modelo utilizando el contexto del controlador y el contexto de enlace especificados.</summary>
      <returns>Objeto de datos enlazado.Si no se puede enlazar el modelo, este método devuelve null.</returns>
      <param name="controllerContext">Contexto en el que funciona el controlador.La información de contexto incluye el controlador, el contenido HTTP, el contexto de la solicitud y los datos de la ruta.</param>
      <param name="bindingContext">Contexto en el que se enlaza el modelo.El contexto incluye información como el objeto de modelo, el nombre de modelo, el tipo de modelo, el filtro de propiedades y el proveedor de valores.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelBinderAttribute">
      <summary>Representa un atributo que se utiliza para asociar un tipo de modelo a un tipo de generador de modelos.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderAttribute.#ctor(System.Type)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.ModelBinderAttribute" />.</summary>
      <param name="binderType">Tipo del enlazador.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="binderType" /> es null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderAttribute.BinderType">
      <summary>Obtiene o establece el tipo de enlazador.</summary>
      <returns>Tipo del enlazador.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderAttribute.GetBinder">
      <summary>Recupera una instancia del enlazador de modelos.</summary>
      <returns>Referencia a un objeto que implementa la interfaz <see cref="T:System.Web.Mvc.IModelBinder" />.</returns>
      <exception cref="T:System.InvalidOperationException">Se produjo un error mientras se estaba creando una instancia del enlazador de modelos.</exception>
    </member>
    <member name="T:System.Web.Mvc.ModelBinderDictionary">
      <summary>Representa una clase que contiene todos los enlazadores de modelos para la aplicación, enumerados por tipo de enlazador.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.ModelBinderDictionary" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.Add(System.Collections.Generic.KeyValuePair{System.Type,System.Web.Mvc.IModelBinder})">
      <summary>Agrega el elemento especificado al diccionario de enlazadores de modelos.</summary>
      <param name="item">Objeto que se va a agregar a la instancia de <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotSupportedException">El objeto <see cref="T:System.Collections.Generic.ICollection`1" /> es de solo lectura.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.Add(System.Type,System.Web.Mvc.IModelBinder)">
      <summary>Agrega el elemento especificado al diccionario de enlazadores de modelos mediante la clave especificada.</summary>
      <param name="key">Clave del elemento que se va a agregar.</param>
      <param name="value">Valor del elemento que se va a agregar.</param>
      <exception cref="T:System.NotSupportedException">El objeto <see cref="T:System.Collections.Generic.IDictionary`2" /> es de solo lectura.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> es null.</exception>
      <exception cref="T:System.ArgumentException">Ya existe un elemento con la misma clave en el objeto <see cref="T:System.Collections.Generic.IDictionary`2" />.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.Clear">
      <summary>Quita todos los elementos del diccionario de enlazadores de modelos.</summary>
      <exception cref="T:System.NotSupportedException">El objeto <see cref="T:System.Collections.Generic.ICollection`1" /> es de solo lectura.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.Contains(System.Collections.Generic.KeyValuePair{System.Type,System.Web.Mvc.IModelBinder})">
      <summary>Determina si el diccionario de enlazadores de modelos contiene un valor especificado.</summary>
      <returns>Es true si <paramref name="item" /> se encuentra en el diccionario de enlazadores de modelos; de lo contrario, es false.</returns>
      <param name="item">Objeto que se va a buscar en el objeto <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.ContainsKey(System.Type)">
      <summary>Determina si el diccionario de enlazadores de modelos contiene un elemento que tiene la clave especificada.</summary>
      <returns>true si el diccionario de enlazadores de modelos contiene un elemento que tiene la clave especificada; de lo contrario, false.</returns>
      <param name="key">Clave que se va a buscar en el objeto <see cref="T:System.Collections.Generic.IDictionary`2" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.Type,System.Web.Mvc.IModelBinder}[],System.Int32)">
      <summary>Copia los elementos del diccionario de enlazadores de modelos en una matriz, empezando en un índice especificado.</summary>
      <param name="array">Matriz unidimensional que constituye el destino de los elementos copiados desde <see cref="T:System.Collections.Generic.ICollection`1" />.La matriz debe tener una indización de base cero.</param>
      <param name="arrayIndex">Índice de base cero de <paramref name="array" /> donde se inicia la operación de copia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> es null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> es menor que 0.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> es multidimensional.O bien El valor de <paramref name="arrayIndex" /> es igual o mayor que la longitud de <paramref name="array" />.O bien El número de elementos del objeto <see cref="T:System.Collections.Generic.ICollection`1" /> de origen es mayor que el espacio disponible desde <paramref name="arrayIndex" /> hasta el final de la matriz de destino. O bien El tipo <paramref name="T" /> no puede convertirse automáticamente al tipo de la matriz de destino.</exception>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderDictionary.Count">
      <summary>Obtiene el número de elementos del diccionario de enlazadores de modelos.</summary>
      <returns>Número de elementos del diccionario de enlazadores de modelos.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderDictionary.DefaultBinder">
      <summary>Obtiene o establece el enlazador de modelos predeterminado.</summary>
      <returns>Enlazador de modelos predeterminado.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.GetBinder(System.Type)">
      <summary>Recupera el enlazador de modelos del tipo especificado.</summary>
      <returns>Enlazador de modelos.</returns>
      <param name="modelType">Tipo de modelo que va a recuperarse.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="modelType" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.GetBinder(System.Type,System.Boolean)">
      <summary>Recupera el enlazador de modelos para el tipo especificado o recupera el enlazador de modelos predeterminado.</summary>
      <returns>Enlazador de modelos.</returns>
      <param name="modelType">Tipo de modelo que va a recuperarse.</param>
      <param name="fallbackToDefault">Es true para recuperar el enlazador de modelos predeterminado.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="modelType" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.GetEnumerator">
      <summary>Devuelve un enumerador que puede utilizarse para iterar por la colección.</summary>
      <returns>Enumerador que se puede usar para iterar por la colección.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderDictionary.IsReadOnly">
      <summary>Obtiene un valor que indica si el diccionario de enlazadores de modelos es de solo lectura.</summary>
      <returns>true si el diccionario de enlazadores de modelos es de solo lectura; en caso contrario, false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderDictionary.Item(System.Type)">
      <summary>Obtiene o establece la clave especificada en un objeto que implementa la interfaz <see cref="T:System.Web.Mvc.IModelBinder" />.</summary>
      <returns>Clave para el elemento especificado.</returns>
      <param name="key">Clave del elemento.</param>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderDictionary.Keys">
      <summary>Obtiene una colección que contiene las claves del diccionario de enlazadores de modelos.</summary>
      <returns>Colección que contiene las claves del diccionario de enlazadores de modelos.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.Remove(System.Collections.Generic.KeyValuePair{System.Type,System.Web.Mvc.IModelBinder})">
      <summary>Quita la primera aparición del elemento especificado del diccionario de enlazadores de modelos.</summary>
      <returns>Es true si <paramref name="item" /> se quitó correctamente del diccionario de enlazadores de modelos; de lo contrario, es false.Este método también devuelve false si <paramref name="item" /> no se encuentra en el diccionario de enlazadores de modelos.</returns>
      <param name="item">Objeto que se va a quitar del objeto <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotSupportedException">El objeto <see cref="T:System.Collections.Generic.ICollection`1" /> es de solo lectura.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.Remove(System.Type)">
      <summary>Quita el elemento que contiene la clave especificada del diccionario de enlazadores de modelos.</summary>
      <returns>true si se ha eliminado correctamente el elemento; en caso contrario, false.Este método también devuelve false si <paramref name="key" /> no se encontró en el diccionario de enlazadores de modelos.</returns>
      <param name="key">Clave del elemento que se va a quitar.</param>
      <exception cref="T:System.NotSupportedException">El objeto <see cref="T:System.Collections.Generic.IDictionary`2" /> es de solo lectura.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>Devuelve un enumerador que puede usarse para recorrer en iteración una colección.</summary>
      <returns>Enumerador que se puede usar para iterar por la colección.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.TryGetValue(System.Type,System.Web.Mvc.IModelBinder@)">
      <summary>Obtiene el valor que está asociado a la clave especificada.</summary>
      <returns>true el objeto que implementa <see cref="T:System.Collections.Generic.IDictionary`2" /> contiene un elemento que tiene la clave especificada; de lo contrario, false.</returns>
      <param name="key">Clave del valor que se va a obtener.</param>
      <param name="value">Cuando este método devuelve el resultado, el valor asociado a la clave especificada, si se encuentra la clave; en caso contrario, el valor predeterminado para el tipo del parámetro <paramref name="value" />.Este parámetro se pasa sin inicializar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> es null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderDictionary.Values">
      <summary>Obtiene una colección que contiene los valores del diccionario de enlazadores de modelos.</summary>
      <returns>Colección que contiene los valores del diccionario de enlazadores de modelos.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelBinderProviderCollection">
      <summary>Proporciona un contenedor para los proveedores de enlazadores de modelos.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderProviderCollection.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.ModelBinderProviderCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderProviderCollection.#ctor(System.Collections.Generic.IList{System.Web.Mvc.IModelBinderProvider})">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.ModelBinderProviderCollection" /> mediante una lista de proveedores de enlazadores de modelos.</summary>
      <param name="list">Lista de proveedores de enlazadores de modelos.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderProviderCollection.GetBinder(System.Type)">
      <summary>Devuelve el enlazador de modelos del tipo especificado.</summary>
      <returns>Enlazador de modelos del tipo especificado.</returns>
      <param name="modelType">Tipo del enlazador de modelos.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderProviderCollection.InsertItem(System.Int32,System.Web.Mvc.IModelBinderProvider)">
      <summary>Inserta un proveedor de enlazadores de modelos en la colección <see cref="T:System.Web.Mvc.ModelBinderProviderCollection" /> en el índice especificado.</summary>
      <param name="index">El índice.</param>
      <param name="item">Proveedor del enlazador de modelos.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderProviderCollection.SetItem(System.Int32,System.Web.Mvc.IModelBinderProvider)">
      <summary>Reemplaza el elemento de proveedor de enlazadores de modelos en el índice especificado.</summary>
      <param name="index">El índice.</param>
      <param name="item">Proveedor del enlazador de modelos.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelBinderProviders">
      <summary>Proporciona un contenedor para los proveedores de enlazadores de modelos.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderProviders.BinderProviders">
      <summary>Proporciona un punto de registro para los proveedores de enlazadores de modelos de las aplicaciones que no usan la inserción de dependencias.</summary>
      <returns>La colección de proveedores de enlazadores de modelos.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelBinders">
      <summary>Proporciona acceso global a los enlazadores de modelos de la aplicación.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelBinders.Binders">
      <summary>Obtiene los enlazadores de modelos de la aplicación.</summary>
      <returns>Enlazadores de modelos de la aplicación.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelBindingContext">
      <summary>Proporciona el contexto en el que funciona un enlazador de modelos.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBindingContext.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.ModelBindingContext" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBindingContext.#ctor(System.Web.Mvc.ModelBindingContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.ModelBindingContext" /> mediante el contexto de enlace.</summary>
      <param name="bindingContext">Contexto de enlace.</param>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.FallbackToEmptyPrefix">
      <summary>Obtiene o establece un valor que indica si el enlazador debe utilizar un prefijo vacío.</summary>
      <returns>true si el enlazador debe utilizar un prefijo vacío; de lo contrario, false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.Model">
      <summary>Obtiene o establece el modelo.</summary>
      <returns>El modelo.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.ModelMetadata">
      <summary>Obtiene o establece los metadatos del modelo.</summary>
      <returns>Metadatos del modelo.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.ModelName">
      <summary>Obtiene o establece el nombre del modelo.</summary>
      <returns>Nombre del modelo.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.ModelState">
      <summary>Obtiene o establece el estado del modelo.</summary>
      <returns>Estado del modelo.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.ModelType">
      <summary>Obtiene o establece el tipo de modelo.</summary>
      <returns>Tipo del modelo.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.PropertyFilter">
      <summary>Obtiene o establece el filtro de propiedades.</summary>
      <returns>Filtro de propiedades.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.PropertyMetadata">
      <summary>Obtiene los metadatos de la propiedad.</summary>
      <returns>Metadatos de la propiedad.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.ValueProvider">
      <summary>Obtiene o establece el proveedor de valor.</summary>
      <returns>Proveedor de valor.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelError">
      <summary>Representa un error que se produce durante el enlace de modelos.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelError.#ctor(System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.ModelError" /> utilizando la excepción especificada.</summary>
      <param name="exception">Excepción.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="exception" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelError.#ctor(System.Exception,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.ModelError" /> utilizando la excepción y el mensaje de error especificados.</summary>
      <param name="exception">Excepción.</param>
      <param name="errorMessage">Mensaje de error.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="exception" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelError.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.ModelError" /> utilizando el mensaje de error especificado.</summary>
      <param name="errorMessage">Mensaje de error.</param>
    </member>
    <member name="P:System.Web.Mvc.ModelError.ErrorMessage">
      <summary>Obtiene o establece el mensaje de error.</summary>
      <returns>Mensaje de error.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelError.Exception">
      <summary>Obtiene o establece el objeto de excepción.</summary>
      <returns>El objeto excepción.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelErrorCollection">
      <summary>Colección de instancias de <see cref="T:System.Web.Mvc.ModelError" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelErrorCollection.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.ModelErrorCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelErrorCollection.Add(System.Exception)">
      <summary>Agrega el objeto <see cref="T:System.Exception" /> especificado a la colección de modelo-error.</summary>
      <param name="exception">Excepción.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelErrorCollection.Add(System.String)">
      <summary>Agrega el mensaje de error especificado a la colección de modelo-error.</summary>
      <param name="errorMessage">Mensaje de error.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelMetadata">
      <summary>Proporciona un contenedor para los metadatos comunes, para la clase <see cref="T:System.Web.Mvc.ModelMetadataProvider" /> y para la clase <see cref="T:System.Web.Mvc.ModelValidator" /> de un modelo de datos.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadata.#ctor(System.Web.Mvc.ModelMetadataProvider,System.Type,System.Func{System.Object},System.Type,System.String)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.ModelMetadata" />.</summary>
      <param name="provider">Proveedor.</param>
      <param name="containerType">Tipo del contenedor.</param>
      <param name="modelAccessor">Descriptor de acceso del modelo.</param>
      <param name="modelType">Tipo del modelo.</param>
      <param name="propertyName">Nombre del modelo.</param>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.AdditionalValues">
      <summary>Obtiene un diccionario que contiene metadatos adicionales acerca del modelo.</summary>
      <returns>Un diccionario que contiene metadatos adicionales acerca del modelo.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.ContainerType">
      <summary>Obtiene o establece el tipo del contenedor para el modelo.</summary>
      <returns>Tipo del contenedor para el modelo.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.ConvertEmptyStringToNull">
      <summary>Obtiene o establece un valor que indica si las cadenas vacías que se devuelven en formularios deben convertirse en null.</summary>
      <returns>true si las cadenas vacías que se devuelven en formularios deben convertirse en null; de lo contrario, false.El valor predeterminado es true.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.DataTypeName">
      <summary>Obtiene o establece metainformación acerca del tipo de datos. </summary>
      <returns>Metainformación acerca del tipo de datos. </returns>
    </member>
    <member name="F:System.Web.Mvc.ModelMetadata.DefaultOrder">
      <summary>El valor de orden predeterminado, que son 10000 milisegundos.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.Description">
      <summary>Obtiene o establece la descripción del modelo.</summary>
      <returns>Descripción del modelo.El valor predeterminado es null.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.DisplayFormatString">
      <summary>Obtiene o establece la cadena de formato de presentación para el modelo.</summary>
      <returns>Cadena de formato de presentación para el modelo.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.DisplayName">
      <summary>Obtiene o establece el nombre para mostrar del modelo.</summary>
      <returns>Nombre para mostrar del modelo.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.EditFormatString">
      <summary>Obtiene o establece la cadena de formato de edición del modelo.</summary>
      <returns>Cadena de formato de edición del modelo.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadata.FromLambdaExpression``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Web.Mvc.ViewDataDictionary{``0})">
      <summary>Devuelve los metadatos del parámetro <see cref="T:System.Linq.Expressions.Expression" /> para el modelo.</summary>
      <returns>Metadatos.</returns>
      <param name="expression">Una expresión que identifica el modelo.</param>
      <param name="viewData">Diccionario de datos de vista.</param>
      <typeparam name="TParameter">Tipo del parámetro.</typeparam>
      <typeparam name="TValue">Tipo del valor.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadata.FromStringExpression(System.String,System.Web.Mvc.ViewDataDictionary)">
      <summary>Obtiene los metadatos a partir del parámetro de expresión para el modelo.</summary>
      <returns>Metadatos para el modelo.</returns>
      <param name="expression">Una expresión que identifica el modelo.</param>
      <param name="viewData">Diccionario de datos de vista.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadata.GetDisplayName">
      <summary>Obtiene el nombre para mostrar del modelo.</summary>
      <returns>Nombre para mostrar del modelo.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadata.GetSimpleDisplayText">
      <summary>Devuelve la descripción simple del modelo.</summary>
      <returns>La descripción simple del modelo.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadata.GetValidators(System.Web.Mvc.ControllerContext)">
      <summary>Obtiene una lista de validadores para el modelo.</summary>
      <returns>Una lista de validadores para el modelo.</returns>
      <param name="context">Contexto del controlador.</param>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.HideSurroundingHtml">
      <summary>Obtiene o establece un valor que indica si el objeto de modelo se debe representar utilizando los elementos HTML asociados.</summary>
      <returns>true si los elementos HTML asociados que contiene el objeto de modelo deben incluirse con el objeto; de lo contrario, false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.IsComplexType">
      <summary>Obtiene o establece un valor que indica si el modelo es un tipo complejo.</summary>
      <returns>Un valor que indica si el marco de MVC considera el modelo un tipo complejo.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.IsNullableValueType">
      <summary>Obtiene un valor que indica si el tipo acepta valores NULL.</summary>
      <returns>true si el tipo acepta valores NULL; en caso contrario, false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.IsReadOnly">
      <summary>Obtiene o establece un valor que indica si el modelo es de solo lectura.</summary>
      <returns>true si el modelo es de solo lectura; en caso contrario, false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.IsRequired">
      <summary>Obtiene o establece un valor que indica si el modelo es necesario.</summary>
      <returns>true si el modelo es requerido; en caso contrario, false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.Model">
      <summary>Obtiene el valor del modelo.</summary>
      <returns>El valor del modelo.Para obtener más información acerca de <see cref="T:System.Web.Mvc.ModelMetadata" />, consulte el artículo ASP.NET MVC 2 Templates, Part 2: ModelMetadata en el blog de Brad Wilson.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.ModelType">
      <summary>Obtiene el tipo del modelo.</summary>
      <returns>Tipo del modelo.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.NullDisplayText">
      <summary>Obtiene o establece la cadena que se va a mostrar para los valores NULL.</summary>
      <returns>Cadena que se va a mostrar para los valores NULL.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.Order">
      <summary>Obtiene o establece un valor que representa el orden de los metadatos actuales.</summary>
      <returns>El valor de orden de los metadatos actuales.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.Properties">
      <summary>Obtiene una colección de objetos de metadatos del modelo que describen las propiedades del modelo.</summary>
      <returns>Una colección de objetos de metadatos del modelo que describen las propiedades del modelo.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.PropertyName">
      <summary>Obtiene el nombre de la propiedad.</summary>
      <returns>El nombre de la propiedad.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.Provider">
      <summary>Obtiene o establece el proveedor.</summary>
      <returns>Proveedor.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.RequestValidationEnabled">
      <summary>Obtiene o establece un valor que indica si se ha habilitado la validación de la consulta.</summary>
      <returns>true si la validación de solicitudes está habilitada; en caso contrario, false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.ShortDisplayName">
      <summary>Obtiene o establece un nombre para mostrar corto.</summary>
      <returns>Nombre para mostrar corto.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.ShowForDisplay">
      <summary>Obtiene o establece un valor que indica si la propiedad se debería mostrar en vistas de solo lectura como lista y vistas de detalle.</summary>
      <returns>true si el modelo se debe mostrar en las vistas de solo lectura; de lo contrario, false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.ShowForEdit">
      <summary>Obtiene o establece un valor que indica si el modelo se debe mostrar en las vistas editables.</summary>
      <returns>true si el modelo se debe mostrar en las vistas editables; de lo contrario, false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.SimpleDisplayText">
      <summary>Obtiene o establece la cadena de presentación simple para el modelo.</summary>
      <returns>Cadena de presentación simple para el modelo.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.TemplateHint">
      <summary>Obtiene o establece una sugerencia que indica qué plantilla se ha de utilizar para este modelo.</summary>
      <returns>Una sugerencia que indica qué plantilla se ha de utilizar para este modelo.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.Watermark">
      <summary>Obtiene o establece un valor que se puede utilizar como una marca de agua.</summary>
      <returns>Marca de agua.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelMetadataProvider">
      <summary>Proporciona una clase base abstracta para un proveedor de metadatos personalizado.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadataProvider.#ctor">
      <summary>Cuando se reemplaza en una clase derivada, inicializa una nueva instancia del objeto que se deriva de la clase <see cref="T:System.Web.Mvc.ModelMetadataProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadataProvider.GetMetadataForProperties(System.Object,System.Type)">
      <summary>Obtiene un objeto <see cref="T:System.Web.Mvc.ModelMetadata" /> para cada propiedad de un modelo.</summary>
      <returns>Un objeto <see cref="T:System.Web.Mvc.ModelMetadata" /> para cada propiedad de un modelo.</returns>
      <param name="container">Contenedor.</param>
      <param name="containerType">Tipo del contenedor.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadataProvider.GetMetadataForProperty(System.Func{System.Object},System.Type,System.String)">
      <summary>Obtiene los metadatos para la propiedad especificada.</summary>
      <returns>Un objeto <see cref="T:System.Web.Mvc.ModelMetadata" /> de la propiedad.</returns>
      <param name="modelAccessor">Descriptor de acceso del modelo.</param>
      <param name="containerType">Tipo del contenedor.</param>
      <param name="propertyName">Propiedad para la que se va a obtener el modelo de metadatos.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadataProvider.GetMetadataForType(System.Func{System.Object},System.Type)">
      <summary>Obtiene los metadatos para el descriptor de acceso del modelo y el tipo de modelo especificados.</summary>
      <returns>Un objeto <see cref="T:System.Web.Mvc.ModelMetadata" /> del descriptor de acceso del modelo y el tipo de modelo especificados.</returns>
      <param name="modelAccessor">Descriptor de acceso del modelo.</param>
      <param name="modelType">Tipo del modelo.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelMetadataProviders">
      <summary>Proporciona un contenedor para la instancia actual de <see cref="T:System.Web.Mvc.ModelMetadataProvider" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadataProviders.Current">
      <summary>Obtiene o establece el objeto <see cref="T:System.Web.Mvc.ModelMetadataProvider" /> actual.</summary>
      <returns>Objeto <see cref="T:System.Web.Mvc.ModelMetadataProvider" /> actual.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelState">
      <summary>Encapsula el estado del enlace del modelo a una propiedad de un argumento de acción-método o al propio argumento.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelState.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.ModelState" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelState.Errors">
      <summary>Devuelve un objeto <see cref="T:System.Web.Mvc.ModelErrorCollection" /> que contiene los errores producidos durante el enlace del modelo.</summary>
      <returns>Los errores.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelState.Value">
      <summary>Devuelve un objeto <see cref="T:System.Web.Mvc.ValueProviderResult" /> que encapsula el valor que se enlazaba durante el enlace del modelo.</summary>
      <returns>Valor.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelStateDictionary">
      <summary>Representa el estado de un intento de enlazar un formulario expuesto a un método de acción, que incluye información de validación.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.#ctor(System.Web.Mvc.ModelStateDictionary)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.ModelStateDictionary" /> utilizando valores que se copian del diccionario de modelo-estado especificado.</summary>
      <param name="dictionary">Diccionario de estados del modelo.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="dictionary " /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ModelState})">
      <summary>Agrega el elemento especificado al diccionario de modelo-estado.</summary>
      <param name="item">Objeto que se va a agregar al diccionario de modelo-estado.</param>
      <exception cref="T:System.NotSupportedException">El diccionario de estados del modelo es de solo lectura.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.Add(System.String,System.Web.Mvc.ModelState)">
      <summary>Agrega un elemento que tiene la clave y el valor especificados al diccionario de modelo-estado.</summary>
      <param name="key">Clave del elemento que se va a agregar.</param>
      <param name="value">Valor del elemento que se va a agregar.</param>
      <exception cref="T:System.NotSupportedException">El diccionario de estados del modelo es de solo lectura.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> es null.</exception>
      <exception cref="T:System.ArgumentException">Ya aparece un elemento con la clave especificada en el diccionario de estados del modelo.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.AddModelError(System.String,System.Exception)">
      <summary>Agrega el error de modelo especificado a la colección de errores para el diccionario de modelo-estado asociado a la clave especificada.</summary>
      <param name="key">Clave.</param>
      <param name="exception">Excepción.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.AddModelError(System.String,System.String)">
      <summary>Agrega el mensaje de error especificado a la colección de errores para el diccionario de modelo-estado asociado a la clave especificada.</summary>
      <param name="key">Clave.</param>
      <param name="errorMessage">Mensaje de error.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.Clear">
      <summary>Quita todos los elementos del diccionario de modelo-estado.</summary>
      <exception cref="T:System.NotSupportedException">El diccionario de estados del modelo es de solo lectura.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ModelState})">
      <summary>Determina si el diccionario de modelo-estado contiene un valor específico.</summary>
      <returns>Es true si <paramref name="item" /> se encuentra en el diccionario de estados del modelo; de lo contrario, es false.</returns>
      <param name="item">El objeto que se va a buscar en el diccionario de modelo-estado.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.ContainsKey(System.String)">
      <summary>Determina si el diccionario de modelo-estado contiene la clave especificada.</summary>
      <returns>true si el diccionario de modelo-estado contiene la clave especificada; de lo contrario, false.</returns>
      <param name="key">La clave que se va a buscar en el diccionario de modelo-estado. </param>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ModelState}[],System.Int32)">
      <summary>Copia los elementos del diccionario de modelo-estado en una matriz, empezando en un índice especificado.</summary>
      <param name="array">Matriz unidimensional que constituye el destino de los elementos copiados desde el objeto <see cref="T:System.Collections.Generic.ICollection`1" />.La matriz debe tener una indización de base cero.</param>
      <param name="arrayIndex">Índice de base cero de <paramref name="array" /> donde se inicia la operación de copia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> es null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> es menor que 0.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> es multidimensional.O bien El valor de <paramref name="arrayIndex" /> es igual o mayor que la longitud de <paramref name="array" />.O bien El número de elementos de la colección de origen es mayor que el espacio disponible desde el <paramref name="arrayIndex" /> hasta el final de la <paramref name="array" /> de destino.O bien El tipo <paramref name="T" /> no puede convertirse automáticamente al tipo de la <paramref name="array" /> de destino.</exception>
    </member>
    <member name="P:System.Web.Mvc.ModelStateDictionary.Count">
      <summary>Obtiene el número de pares clave-valor de la colección.</summary>
      <returns>El número de pares clave-valor incluidos en la colección.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.GetEnumerator">
      <summary>Devuelve un enumerador que puede utilizarse para iterar por la colección.</summary>
      <returns>Enumerador que se puede usar para iterar por la colección.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelStateDictionary.IsReadOnly">
      <summary>Obtiene un valor que indica si la colección es de sólo lectura.</summary>
      <returns>true si la colección es de solo lectura; en caso contrario, false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelStateDictionary.IsValid">
      <summary>Obtiene un valor que indica si esta instancia del diccionario de modelo-estado es válida.</summary>
      <returns>true si esta instancia es válida; en caso contrario, false.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.IsValidField(System.String)">
      <summary>Determina si hay algún objeto <see cref="T:System.Web.Mvc.ModelError" /> que esté asociado con la clave especificada o que la tenga como prefijo.</summary>
      <returns>true si el diccionario de modelo-estado contiene un valor que está asociado a la clave especificada; de lo contrario, false.</returns>
      <param name="key">Clave.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="key" /> es null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ModelStateDictionary.Item(System.String)">
      <summary>Obtiene o establece el valor que está asociado a la clave especificada.</summary>
      <returns>Elemento de modelo-estado.</returns>
      <param name="key">Clave.</param>
    </member>
    <member name="P:System.Web.Mvc.ModelStateDictionary.Keys">
      <summary>Obtiene una colección que contiene las claves del diccionario.</summary>
      <returns>Colección que contiene las claves del diccionario de modelo-estado.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.Merge(System.Web.Mvc.ModelStateDictionary)">
      <summary>Copia los valores del objeto <see cref="T:System.Web.Mvc.ModelStateDictionary" /> especificado en este diccionario, sobrescribiendo los valores existentes si las claves son las mismas.</summary>
      <param name="dictionary">Diccionario.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ModelState})">
      <summary>Quita la primera aparición del objeto especificado del diccionario de modelo-estado.</summary>
      <returns>true si <paramref name="item" /> se ha eliminado correctamente del diccionario de estados del modelo; de lo contrario, false.Este método también devuelve false si <paramref name="item" /> no se encuentra en el diccionario de estados del modelo.</returns>
      <param name="item">El objeto que se va a quitar del diccionario de modelo-estado.</param>
      <exception cref="T:System.NotSupportedException">El diccionario de estados del modelo es de solo lectura.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.Remove(System.String)">
      <summary>Quita el elemento que contiene la clave especificada del diccionario de modelo-estado.</summary>
      <returns>true si se ha eliminado correctamente el elemento; en caso contrario, false.Este método también devuelve false si <paramref name="key" /> no se encontró en el diccionario de estados del modelo.</returns>
      <param name="key">Clave del elemento que se va a quitar.</param>
      <exception cref="T:System.NotSupportedException">El diccionario de estados del modelo es de solo lectura.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.SetModelValue(System.String,System.Web.Mvc.ValueProviderResult)">
      <summary>Establece el valor para la clave especificada utilizando el diccionario de proveedores de valores especificado.</summary>
      <param name="key">Clave.</param>
      <param name="value">Valor.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>Devuelve un enumerador que puede utilizarse para iterar por la colección.</summary>
      <returns>Enumerador que se puede usar para iterar por la colección.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.TryGetValue(System.String,System.Web.Mvc.ModelState@)">
      <summary>Intenta obtener el valor que está asociado a la clave especificada.</summary>
      <returns>true el objeto que implementa <see cref="T:System.Collections.Generic.IDictionary`2" /> contiene un elemento que tiene la clave especificada; de lo contrario, false.</returns>
      <param name="key">Clave del valor que se va a obtener.</param>
      <param name="value">Cuando este método devuelve el resultado, el valor asociado a la clave especificada, si se encuentra la clave; en caso contrario, el valor predeterminado para el tipo del parámetro <paramref name="value" />.Este parámetro se pasa sin inicializar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> es null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ModelStateDictionary.Values">
      <summary>Obtiene una colección que contiene los valores del diccionario.</summary>
      <returns>Colección que contiene los valores del diccionario de modelo-estado.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelValidationResult">
      <summary>Proporciona un contenedor para un resultado de la validación.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelValidationResult.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.ModelValidationResult" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelValidationResult.MemberName">
      <summary>Obtiene o establece el nombre del miembro.</summary>
      <returns>Nombre del miembro.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelValidationResult.Message">
      <summary>Obtiene o establece el mensaje de resultado de la validación.</summary>
      <returns>Mensaje de resultado de la validación.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelValidator">
      <summary>Proporciona una clase base para implementar la lógica de validación.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelValidator.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Se le llama desde los constructores en las clases derivadas para inicializar la clase <see cref="T:System.Web.Mvc.ModelValidator" />.</summary>
      <param name="metadata">Metadatos.</param>
      <param name="controllerContext">Contexto del controlador.</param>
    </member>
    <member name="P:System.Web.Mvc.ModelValidator.ControllerContext">
      <summary>Obtiene el contexto del controlador.</summary>
      <returns>Contexto del controlador.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelValidator.GetClientValidationRules">
      <summary>Cuando se implementa en una clase derivada, devuelve los metadatos para la validación del cliente.</summary>
      <returns>Metadatos para la validación del cliente.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelValidator.GetModelValidator(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Devuelve un validador de modelo compuesto para el modelo.</summary>
      <returns>Un validador de modelo compuesto para el modelo.</returns>
      <param name="metadata">Metadatos.</param>
      <param name="context">Contexto del controlador.</param>
    </member>
    <member name="P:System.Web.Mvc.ModelValidator.IsRequired">
      <summary>Obtiene o establece un valor que indica si una propiedad de modelo es obligatoria.</summary>
      <returns>true si la propiedad del modelo es requerida; en caso contrario, false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelValidator.Metadata">
      <summary>Obtiene los metadatos para el validador de modelo.</summary>
      <returns>Metadatos para el validador del modelo.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelValidator.Validate(System.Object)">
      <summary>Cuando se implementa en una clase derivada, valida el objeto.</summary>
      <returns>Una lista de resultados de la validación.</returns>
      <param name="container">Contenedor.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelValidatorProvider">
      <summary>Proporciona una lista de validadores para un modelo.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProvider.#ctor">
      <summary>Cuando se implementa en una clase derivada, inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.ModelValidatorProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Obtiene una lista de validadores.</summary>
      <returns>Lista de validadores.</returns>
      <param name="metadata">Metadatos.</param>
      <param name="context">Contexto.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelValidatorProviderCollection">
      <summary>Proporciona un contenedor para una lista de proveedores de validación.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProviderCollection.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.ModelValidatorProviderCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProviderCollection.#ctor(System.Collections.Generic.IList{System.Web.Mvc.ModelValidatorProvider})">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.ModelValidatorProviderCollection" /> mediante una lista de proveedores de validación del modelo.</summary>
      <param name="list">Una lista de proveedores de validación del modelo.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProviderCollection.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Devuelve la lista de validadores de modelo.</summary>
      <returns>Lista de validadores de modelo.</returns>
      <param name="metadata">Metadatos del modelo.</param>
      <param name="context">Contexto del controlador.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProviderCollection.InsertItem(System.Int32,System.Web.Mvc.ModelValidatorProvider)">
      <summary>Inserta un proveedor de validadores de modelo en la colección.</summary>
      <param name="index">Índice de base cero en el que debe insertarse un elemento.</param>
      <param name="item">Objeto de proveedor de validadores de modelo que se va a insertar.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProviderCollection.SetItem(System.Int32,System.Web.Mvc.ModelValidatorProvider)">
      <summary>Reemplaza el elemento de proveedor de validadores de modelo en el índice especificado.</summary>
      <param name="index">Índice de base cero del elemento de proveedor de validadores de modelo que se va a reemplazar.</param>
      <param name="item">Nuevo valor para el elemento de proveedor de validadores de modelo.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelValidatorProviders">
      <summary>Proporciona un contenedor para el proveedor de validación actual.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelValidatorProviders.Providers">
      <summary>Obtiene la colección de proveedores de validadores de modelo.</summary>
      <returns>Colección de proveedores de validadores de modelo.</returns>
    </member>
    <member name="T:System.Web.Mvc.MultiSelectList">
      <summary>Representa una lista de elementos de los cuales los usuarios pueden seleccionar más de un elemento.</summary>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.#ctor(System.Collections.IEnumerable)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.MultiSelectList" /> mediante los elementos especificados para incluir en la lista.</summary>
      <param name="items">Elementos.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="items" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.#ctor(System.Collections.IEnumerable,System.Collections.IEnumerable)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.MultiSelectList" /> mediante los elementos especificados para incluir en la lista y los valores seleccionados.</summary>
      <param name="items">Elementos.</param>
      <param name="selectedValues">Valores seleccionados.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="items" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.#ctor(System.Collections.IEnumerable,System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.MultiSelectList" /> mediante los elementos especificados que se van a incluir en la lista, el campo de valor de datos y el campo de texto de datos.</summary>
      <param name="items">Elementos.</param>
      <param name="dataValueField">Campo de valor de datos.</param>
      <param name="dataTextField">Campo de texto de datos.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="items" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.Collections.IEnumerable)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.MultiSelectList" /> mediante los elementos especificados que se van a incluir en la lista, el campo de valor de datos, el campo de texto de datos y los valores seleccionados.</summary>
      <param name="items">Elementos.</param>
      <param name="dataValueField">Campo de valor de datos.</param>
      <param name="dataTextField">Campo de texto de datos.</param>
      <param name="selectedValues">Valores seleccionados.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="items" /> es null.</exception>
    </member>
    <member name="P:System.Web.Mvc.MultiSelectList.DataTextField">
      <summary>Obtiene o establece el campo de texto de datos.</summary>
      <returns>Campo de texto de datos.</returns>
    </member>
    <member name="P:System.Web.Mvc.MultiSelectList.DataValueField">
      <summary>Obtiene o establece el campo de valor de datos.</summary>
      <returns>Campo de valor de datos.</returns>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.GetEnumerator">
      <summary>Devuelve un enumerador que puede utilizarse para iterar por la colección.</summary>
      <returns>Enumerador que se puede usar para iterar por la colección.</returns>
    </member>
    <member name="P:System.Web.Mvc.MultiSelectList.Items">
      <summary>Obtiene o establece los elementos de la lista.</summary>
      <returns>Elementos de la lista.</returns>
    </member>
    <member name="P:System.Web.Mvc.MultiSelectList.SelectedValues">
      <summary>Obtiene o establece los valores seleccionados.</summary>
      <returns>Valores seleccionados.</returns>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.System#Collections#IEnumerable#GetEnumerator">
      <summary>Devuelve un enumerador que puede usarse para iterar en colección.</summary>
      <returns>Enumerador que se puede usar para iterar por la colección.</returns>
    </member>
    <member name="T:System.Web.Mvc.MvcFilter">
      <summary>Cuando se implementa en una clase derivada, proporciona una clase de metadatos que contiene una referencia a la implementación de una o más de las interfaces de filtro, el ámbito y el orden del filtro.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcFilter.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.MvcFilter" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcFilter.#ctor(System.Boolean,System.Int32)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.MvcFilter" /> y especifica el orden de los filtros e indica si se permiten varios filtros.</summary>
      <param name="allowMultiple">true para especificar que se permiten varios filtros del mismo tipo; de lo contrario, false.</param>
      <param name="order">El orden de filtros.</param>
    </member>
    <member name="P:System.Web.Mvc.MvcFilter.AllowMultiple">
      <summary>Obtiene un valor que indica si se puede especificar más de una instancia del atributo de filtro.</summary>
      <returns>true si se permite más de una instancia del atributo de filtro; de lo contrario, false.</returns>
    </member>
    <member name="P:System.Web.Mvc.MvcFilter.Order">
      <summary>Obtiene un valor que indica el orden en el que se aplica un filtro.</summary>
      <returns>Valor que indica el orden en el que se aplica un filtro.</returns>
    </member>
    <member name="T:System.Web.Mvc.MvcHandler">
      <summary>Selecciona el controlador que controlará una solicitud HTTP.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.#ctor(System.Web.Routing.RequestContext)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.MvcHandler" />.</summary>
      <param name="requestContext">Contexto de la solicitud.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="requestContext" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.AddVersionHeader(System.Web.HttpContextBase)">
      <summary>Agrega el encabezado de versión mediante el contexto HTTP especificado.</summary>
      <param name="httpContext">Contexto HTTP.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
      <summary>Lo llama ASP.NET para iniciar el procesamiento de la solicitud asincrónica.</summary>
      <returns>Estado de la llamada asincrónica.</returns>
      <param name="httpContext">Contexto HTTP.</param>
      <param name="callback">Método de devolución de llamada asincrónica.</param>
      <param name="state">Estado del objeto asincrónico.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.BeginProcessRequest(System.Web.HttpContextBase,System.AsyncCallback,System.Object)">
      <summary>Lo llama ASP.NET para comenzar el procesamiento de solicitudes asincrónicas mediante el contexto HTTP base.</summary>
      <returns>Estado de la llamada asincrónica.</returns>
      <param name="httpContext">Contexto HTTP.</param>
      <param name="callback">Método de devolución de llamada asincrónica.</param>
      <param name="state">Estado del objeto asincrónico.</param>
    </member>
    <member name="P:System.Web.Mvc.MvcHandler.DisableMvcResponseHeader">
      <summary>Obtiene o establece un valor que indica si el encabezado de respuesta MVC está deshabilitado.</summary>
      <returns>true si el encabezado de respuesta MVC está deshabilitado; de lo contrario, false.</returns>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.EndProcessRequest(System.IAsyncResult)">
      <summary>Lo llama ASP.NET cuando ha finalizado el procesamiento de la solicitud asincrónica.</summary>
      <param name="asyncResult">Resultado asincrónico.</param>
    </member>
    <member name="P:System.Web.Mvc.MvcHandler.IsReusable">
      <summary>Obtiene un valor que indica si otra solicitud puede usar la instancia de <see cref="T:System.Web.IHttpHandler" />.</summary>
      <returns>true si la instancia de <see cref="T:System.Web.IHttpHandler" /> se puede volver a usar; de lo contrario, false.</returns>
    </member>
    <member name="F:System.Web.Mvc.MvcHandler.MvcVersionHeaderName">
      <summary>Contiene el nombre de encabezado de la versión de ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.ProcessRequest(System.Web.HttpContext)">
      <summary>Procesa la solicitud mediante el contexto de solicitud HTTP especificado.</summary>
      <param name="httpContext">Contexto HTTP.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.ProcessRequest(System.Web.HttpContextBase)">
      <summary>Procesa la solicitud mediante el contexto de solicitud HTTP base especificado.</summary>
      <param name="httpContext">Contexto HTTP.</param>
    </member>
    <member name="P:System.Web.Mvc.MvcHandler.RequestContext">
      <summary>Obtiene el contexto de la solicitud.</summary>
      <returns>Contexto de la solicitud.</returns>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
      <summary>Lo llama ASP.NET para comenzar el procesamiento de solicitudes asincrónicas mediante el contexto HTTP base.</summary>
      <returns>Estado de la llamada asincrónica.</returns>
      <param name="context">Contexto HTTP.</param>
      <param name="cb">Método de devolución de llamada asincrónica.</param>
      <param name="extraData">Los datos.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.System#Web#IHttpAsyncHandler#EndProcessRequest(System.IAsyncResult)">
      <summary>Lo llama ASP.NET cuando ha finalizado el procesamiento de la solicitud asincrónica.</summary>
      <param name="result">Resultado asincrónico.</param>
    </member>
    <member name="P:System.Web.Mvc.MvcHandler.System#Web#IHttpHandler#IsReusable">
      <summary>Obtiene un valor que indica si otra solicitud puede usar la instancia de <see cref="T:System.Web.IHttpHandler" />.</summary>
      <returns>true si la instancia de <see cref="T:System.Web.IHttpHandler" /> se puede volver a usar; de lo contrario, false.</returns>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)">
      <summary>Permite el procesamiento de solicitudes web HTTP por un controlador HTTP personalizado que implementa la interfaz <see cref="T:System.Web.IHttpHandler" />.</summary>
      <param name="httpContext">Objeto <see cref="T:System.Web.HttpContext" /> que proporciona referencias a los objetos de servidor intrínsecos (por ejemplo, Request, Response, Session, y Server) que se usan para atender las solicitudes HTTP.</param>
    </member>
    <member name="T:System.Web.Mvc.MvcHtmlString">
      <summary>Representa una cadena codificada en HTML que no debe volver a codificarse.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcHtmlString.#ctor(System.String)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.MvcHtmlString" />.</summary>
      <param name="value">Cadena que se va a crear.Si no se asigna ningún valor, el objeto se creará usando un valor de cadena vacía.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHtmlString.Create(System.String)">
      <summary>Crea una cadena codificada en HTML mediante el valor de texto especificado.</summary>
      <returns>Cadena codificada en HTML.</returns>
      <param name="value">Valor de la cadena que se va a crear.</param>
    </member>
    <member name="F:System.Web.Mvc.MvcHtmlString.Empty">
      <summary>Contiene una cadena HTML vacía.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcHtmlString.IsNullOrEmpty(System.Web.Mvc.MvcHtmlString)">
      <summary>Determina si la cadena especificada tiene contenido, o es null o está vacía.</summary>
      <returns>true si la cadena es null; en caso contrario, false.</returns>
      <param name="value">Cadena.</param>
    </member>
    <member name="T:System.Web.Mvc.MvcHttpHandler">
      <summary>Comprueba y procesa una solicitud HTTP.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcHttpHandler.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.MvcHttpHandler" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcHttpHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
      <summary>Lo llama ASP.NET para iniciar el procesamiento de la solicitud asincrónica.</summary>
      <returns>Estado de la llamada asincrónica.</returns>
      <param name="httpContext">Contexto HTTP.</param>
      <param name="callback">Método de devolución de llamada asincrónica.</param>
      <param name="state">Estado.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHttpHandler.BeginProcessRequest(System.Web.HttpContextBase,System.AsyncCallback,System.Object)">
      <summary>Lo llama ASP.NET para iniciar el procesamiento de la solicitud asincrónica.</summary>
      <returns>Estado de la llamada asincrónica.</returns>
      <param name="httpContext">Contexto HTTP base.</param>
      <param name="callback">Método de devolución de llamada asincrónica.</param>
      <param name="state">Estado.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHttpHandler.EndProcessRequest(System.IAsyncResult)">
      <summary>Lo llama ASP.NET cuando ha finalizado el procesamiento de la solicitud asincrónica.</summary>
      <param name="asyncResult">Resultado asincrónico.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHttpHandler.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
      <summary>Lo llama ASP.NET para iniciar el procesamiento de la solicitud asincrónica.</summary>
      <returns>Estado de la llamada asincrónica.</returns>
      <param name="context">Contexto.</param>
      <param name="cb">Método de devolución de llamada asincrónica.</param>
      <param name="extraData">Un objeto que contiene los datos.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHttpHandler.System#Web#IHttpAsyncHandler#EndProcessRequest(System.IAsyncResult)">
      <summary>Lo llama ASP.NET cuando ha finalizado el procesamiento de la solicitud asincrónica.</summary>
      <param name="result">Estado de las operaciones asincrónicas.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHttpHandler.VerifyAndProcessRequest(System.Web.IHttpHandler,System.Web.HttpContextBase)">
      <summary>Comprueba y procesa una solicitud HTTP.</summary>
      <param name="httpHandler">Controlador HTTP.</param>
      <param name="httpContext">Contexto HTTP.</param>
    </member>
    <member name="T:System.Web.Mvc.MvcRouteHandler">
      <summary>Crea un objeto que implementa la interfaz IHttpHandler y le pasa el contexto de solicitud.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcRouteHandler.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.MvcRouteHandler" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcRouteHandler.#ctor(System.Web.Mvc.IControllerFactory)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.MvcRouteHandler" /> mediante el objeto controlador de generador especificado.</summary>
      <param name="controllerFactory">El generador del controlador.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcRouteHandler.GetHttpHandler(System.Web.Routing.RequestContext)">
      <summary>Devuelve el controlador HTTP mediante el contexto HTTP especificado.</summary>
      <returns>Controlador HTTP.</returns>
      <param name="requestContext">Contexto de la solicitud.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcRouteHandler.GetSessionStateBehavior(System.Web.Routing.RequestContext)">
      <summary>Devuelve el comportamiento de sesión.</summary>
      <returns>Comportamiento de sesión.</returns>
      <param name="requestContext">Contexto de la solicitud.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcRouteHandler.System#Web#Routing#IRouteHandler#GetHttpHandler(System.Web.Routing.RequestContext)">
      <summary>Devuelve el controlador HTTP mediante el contexto de solicitud especificado.</summary>
      <returns>Controlador HTTP.</returns>
      <param name="requestContext">Contexto de la solicitud.</param>
    </member>
    <member name="T:System.Web.Mvc.MvcWebRazorHostFactory">
      <summary>Crea instancias de archivos <see cref="T:System.Web.Mvc.MvcWebPageRazorHost" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcWebRazorHostFactory.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.MvcWebRazorHostFactory" />. </summary>
    </member>
    <member name="M:System.Web.Mvc.MvcWebRazorHostFactory.CreateHost(System.String,System.String)">
      <summary>Crea un host de Razor.</summary>
      <returns>Host de Razor.</returns>
      <param name="virtualPath">Ruta de acceso virtual al archivo de destino.</param>
      <param name="physicalPath">Ruta de acceso física al archivo de destino.</param>
    </member>
    <member name="T:System.Web.Mvc.NameValueCollectionExtensions">
      <summary>Extiende un objeto NameValueCollection para que la colección se pueda copiar en un diccionario especificado.</summary>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionExtensions.CopyTo(System.Collections.Specialized.NameValueCollection,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Copia la colección especificada al destino especificado.</summary>
      <param name="collection">La colección.</param>
      <param name="destination">El destino.</param>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionExtensions.CopyTo(System.Collections.Specialized.NameValueCollection,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean)">
      <summary>Copia la colección especificada en el destino especificado y opcionalmente reemplaza las entradas anteriores.</summary>
      <param name="collection">La colección.</param>
      <param name="destination">El destino.</param>
      <param name="replaceEntries">Es true para reemplazar las entradas anteriores; de lo contrario, es false.</param>
    </member>
    <member name="T:System.Web.Mvc.NameValueCollectionValueProvider">
      <summary>Representa la clase base para los proveedores de valores cuyos valores proceden de un objeto <see cref="T:System.Collections.Specialized.NameValueCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionValueProvider.#ctor(System.Collections.Specialized.NameValueCollection,System.Collections.Specialized.NameValueCollection,System.Globalization.CultureInfo)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.NameValueCollectionValueProvider" /> mediante la colección sin validar especificada.</summary>
      <param name="collection">Colección que contiene los valores que se usarán para inicializar el proveedor.</param>
      <param name="unvalidatedCollection">Colección que contiene los valores que se usarán para inicializar el proveedor.Esta colección no se validará.</param>
      <param name="culture">Objeto que contiene información sobre la referencia cultural de destino.</param>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionValueProvider.#ctor(System.Collections.Specialized.NameValueCollection,System.Globalization.CultureInfo)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.NameValueCollectionValueProvider" />.</summary>
      <param name="collection">Colección que contiene los valores que se usarán para inicializar el proveedor.</param>
      <param name="culture">Objeto que contiene información sobre la referencia cultural de destino.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="collection" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionValueProvider.ContainsPrefix(System.String)">
      <summary>Determina si la colección contiene el prefijo especificado.</summary>
      <returns>true si la colección contiene el prefijo especificado; de lo contrario, false.</returns>
      <param name="prefix">Prefijo que se va a buscar.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="prefix" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionValueProvider.GetKeysFromPrefix(System.String)">
      <summary>Obtiene las claves mediante el prefijo especificado.</summary>
      <returns>Claves.</returns>
      <param name="prefix">Prefijo.</param>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionValueProvider.GetValue(System.String)">
      <summary>Devuelve un objeto de valor mediante la clave especificada.</summary>
      <returns>Objeto de valor para la clave especificada.</returns>
      <param name="key">Clave para la que se va a recuperar el objeto de valor.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="key" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionValueProvider.GetValue(System.String,System.Boolean)">
      <summary>Devuelve un objeto de valor mediante la clave y la directiva de validación especificadas.</summary>
      <returns>Objeto de valor para la clave especificada.</returns>
      <param name="key">Clave.</param>
      <param name="skipValidation">true si la validación debería omitirse; en caso contrario, false.</param>
    </member>
    <member name="T:System.Web.Mvc.NoAsyncTimeoutAttribute">
      <summary>Proporciona un contenedor de conveniencia para el atributo <see cref="T:System.Web.Mvc.AsyncTimeoutAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.NoAsyncTimeoutAttribute.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.NoAsyncTimeoutAttribute" />.</summary>
    </member>
    <member name="T:System.Web.Mvc.NonActionAttribute">
      <summary>Representa un atributo que se utiliza para indicar que un método de controlador no es un método de acción.</summary>
    </member>
    <member name="M:System.Web.Mvc.NonActionAttribute.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.NonActionAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.NonActionAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>Determina si el atributo marca un método que no es un método de acción mediante el contexto del controlador especificado.</summary>
      <returns>Es true si el atributo marca un método de no acción válido; de lo contrario, es false.</returns>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="methodInfo">Información de método.</param>
    </member>
    <member name="T:System.Web.Mvc.OutputCacheAttribute">
      <summary>Representa un atributo que se usa para marcar un método de acción cuyo resultado estará almacenado en memoria caché.</summary>
    </member>
    <member name="M:System.Web.Mvc.OutputCacheAttribute.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.OutputCacheAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.CacheProfile">
      <summary>Obtiene o establece el nombre de perfil de la memoria caché.</summary>
      <returns>Nombre de perfil de la memoria caché.</returns>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.ChildActionCache">
      <summary>Obtiene o establece la memoria caché de la acción secundaria.</summary>
      <returns>Memoria caché de la acción secundaria.</returns>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.Duration">
      <summary>Obtiene o establece la duración del almacenamiento en caché en segundos.</summary>
      <returns>Duración del almacenamiento en caché.</returns>
    </member>
    <member name="M:System.Web.Mvc.OutputCacheAttribute.IsChildActionCacheActive(System.Web.Mvc.ControllerContext)">
      <summary>Devuelve un valor que indica si está activa una memoria caché de la acción secundaria.</summary>
      <returns>true si la memoria caché de la acción secundaria está activa; de lo contrario, false.</returns>
      <param name="controllerContext">Contexto del controlador.</param>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.Location">
      <summary>Obtiene o establece la ubicación.</summary>
      <returns>Ubicación.</returns>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.NoStore">
      <summary>Obtiene o establece un valor que indica si se va a almacenar la memoria caché.</summary>
      <returns>true si la memoria caché debe almacenarse; en caso contrario, false.</returns>
    </member>
    <member name="M:System.Web.Mvc.OutputCacheAttribute.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
      <summary>Este método es una implementación de <see cref="M:System.Web.Mvc.IActionFilter.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)" /> y es compatible con la infraestructura de ASP.NET MVC.No está pensado para su uso directamente desde el código.</summary>
      <param name="filterContext">Contexto del filtro.</param>
    </member>
    <member name="M:System.Web.Mvc.OutputCacheAttribute.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
      <summary>Este método es una implementación de <see cref="M:System.Web.Mvc.IActionFilter.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)" /> y es compatible con la infraestructura de ASP.NET MVC.No está pensado para su uso directamente desde el código.</summary>
      <param name="filterContext">Contexto del filtro.</param>
    </member>
    <member name="M:System.Web.Mvc.OutputCacheAttribute.OnException(System.Web.Mvc.ExceptionContext)">
      <summary>Este método es una implementación de <see cref="M:System.Web.Mvc.IExceptionFilter.OnException(System.Web.Mvc.ExceptionContext)" /> y es compatible con la infraestructura de ASP.NET MVC.No está pensado para su uso directamente desde el código.</summary>
      <param name="filterContext">Contexto del filtro.</param>
    </member>
    <member name="M:System.Web.Mvc.OutputCacheAttribute.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)">
      <summary>Este método es una implementación de <see cref="M:System.Web.Mvc.IResultFilter.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)" /> y es compatible con la infraestructura de ASP.NET MVC.No está pensado para su uso directamente desde el código.</summary>
      <param name="filterContext">Contexto del filtro.</param>
    </member>
    <member name="M:System.Web.Mvc.OutputCacheAttribute.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)">
      <summary>Se llama antes de que se ejecute el resultado de la acción.</summary>
      <param name="filterContext">Contexto del filtro, que encapsula la información para usar <see cref="T:System.Web.Mvc.AuthorizeAttribute" />.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="filterContext" /> es null.</exception>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.SqlDependency">
      <summary>Obtiene o establece la dependencia de SQL.</summary>
      <returns>Dependencia de SQL.</returns>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.VaryByContentEncoding">
      <summary>Obtiene o establece la codificación de variación por contenido.</summary>
      <returns>Codificación de variación por contenido.</returns>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.VaryByCustom">
      <summary>Obtiene o establece el valor de variación por personalización.</summary>
      <returns>Valor de variación por personalización.</returns>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.VaryByHeader">
      <summary>Obtiene o establece el valor de variación por encabezado.</summary>
      <returns>Valor de variación por encabezado.</returns>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.VaryByParam">
      <summary>Obtiene o establece el valor de variación por parámetro.</summary>
      <returns>Valor de variación por parámetro.</returns>
    </member>
    <member name="T:System.Web.Mvc.ParameterBindingInfo">
      <summary>Encapsula información para enlazar parámetros de método de acción a un modelo de datos.</summary>
    </member>
    <member name="M:System.Web.Mvc.ParameterBindingInfo.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.ParameterBindingInfo" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ParameterBindingInfo.Binder">
      <summary>Obtiene el enlazador de modelos.</summary>
      <returns>Enlazador de modelos.</returns>
    </member>
    <member name="P:System.Web.Mvc.ParameterBindingInfo.Exclude">
      <summary>Obtiene una lista delimitada por comas de nombres de propiedad para los que está deshabilitado el enlace.</summary>
      <returns>Lista de exclusión.</returns>
    </member>
    <member name="P:System.Web.Mvc.ParameterBindingInfo.Include">
      <summary>Obtiene una lista delimitada por comas de nombres de propiedad para los que está habilitado el enlace.</summary>
      <returns>Lista de inclusión.</returns>
    </member>
    <member name="P:System.Web.Mvc.ParameterBindingInfo.Prefix">
      <summary>Obtiene el prefijo que se debe usar cuando el marco MVC enlaza un valor a un parámetro de acción o a una propiedad de modelo.</summary>
      <returns>Prefijo.</returns>
    </member>
    <member name="T:System.Web.Mvc.ParameterDescriptor">
      <summary>Contiene información que describe un parámetro.</summary>
    </member>
    <member name="M:System.Web.Mvc.ParameterDescriptor.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.ParameterDescriptor" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ParameterDescriptor.ActionDescriptor">
      <summary>Obtiene el descriptor de la acción.</summary>
      <returns>Descriptor de la acción.</returns>
    </member>
    <member name="P:System.Web.Mvc.ParameterDescriptor.BindingInfo">
      <summary>Obtiene la información de enlace.</summary>
      <returns>Información de enlace.</returns>
    </member>
    <member name="P:System.Web.Mvc.ParameterDescriptor.DefaultValue">
      <summary>Obtiene el valor predeterminado del parámetro.</summary>
      <returns>Valor predeterminado del parámetro.</returns>
    </member>
    <member name="M:System.Web.Mvc.ParameterDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>Devuelve una matriz de atributos personalizados definidos para este miembro, excluidos los atributos con nombre.</summary>
      <returns>Una matriz de atributos personalizados o una matriz vacía si no existen atributos personalizados.</returns>
      <param name="inherit">true para buscar la cadena de jerarquía del atributo personalizado heredado; de lo contrario, false.</param>
      <exception cref="T:System.TypeLoadException">El tipo de atributo personalizado no puede cargarse.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Se definió más de un atributo del tipo <paramref name="attributeType" /> para este miembro.</exception>
    </member>
    <member name="M:System.Web.Mvc.ParameterDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Devuelve una matriz de atributos personalizados definidos para este miembro, identificados según el tipo.</summary>
      <returns>Una matriz de atributos personalizados o una matriz vacía si no existen atributos personalizados.</returns>
      <param name="attributeType">Tipo de los atributos personalizados.</param>
      <param name="inherit">true para buscar la cadena de jerarquía del atributo personalizado heredado; de lo contrario, false.</param>
      <exception cref="T:System.TypeLoadException">El tipo de atributo personalizado no puede cargarse.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Se definió más de un atributo del tipo <paramref name="attributeType" /> para este miembro.</exception>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="attributeType" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ParameterDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>Indica si se definen una o más instancias de un tipo de atributo personalizado para este miembro.</summary>
      <returns>true si está definido el tipo de atributo personalizado para este miembro; de lo contrario, false.</returns>
      <param name="attributeType">Tipo de los atributos personalizados.</param>
      <param name="inherit">true para buscar la cadena de jerarquía del atributo personalizado heredado; de lo contrario, false.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="attributeType" /> es null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ParameterDescriptor.ParameterName">
      <summary>Obtiene el nombre del parámetro.</summary>
      <returns>Nombre del parámetro.</returns>
    </member>
    <member name="P:System.Web.Mvc.ParameterDescriptor.ParameterType">
      <summary>Obtiene el tipo de parámetro.</summary>
      <returns>Tipo del parámetro.</returns>
    </member>
    <member name="T:System.Web.Mvc.PartialViewResult">
      <summary>Representa una clase base que se usa para enviar una vista parcial a la respuesta.</summary>
    </member>
    <member name="M:System.Web.Mvc.PartialViewResult.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.PartialViewResult" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.PartialViewResult.FindView(System.Web.Mvc.ControllerContext)">
      <summary>Devuelve el objeto <see cref="T:System.Web.Mvc.ViewEngineResult" /> que se usa para representar la vista.</summary>
      <returns>Resultado del motor de vista.</returns>
      <param name="context">Contexto del controlador.</param>
      <exception cref="T:System.InvalidOperationException">Error mientras el método intentaba buscar la vista.</exception>
    </member>
    <member name="T:System.Web.Mvc.PreApplicationStartCode">
      <summary>Proporciona un punto de registro para el código de inicio anterior a la aplicación de ASP.NET Razor.</summary>
    </member>
    <member name="M:System.Web.Mvc.PreApplicationStartCode.Start">
      <summary>Registra el código de inicio anterior a la aplicación Razor.</summary>
    </member>
    <member name="T:System.Web.Mvc.QueryStringValueProvider">
      <summary>Representa un proveedor de valores para las cadenas de consulta incluidas en un objeto <see cref="T:System.Collections.Specialized.NameValueCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.QueryStringValueProvider.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.QueryStringValueProvider" />.</summary>
      <param name="controllerContext">Un objeto que encapsula la información sobre la solicitud HTTP actual.</param>
    </member>
    <member name="T:System.Web.Mvc.QueryStringValueProviderFactory">
      <summary>Representa una clase que es responsable de crear una nueva instancia de un objeto de proveedor de valores de cadena de consulta.</summary>
    </member>
    <member name="M:System.Web.Mvc.QueryStringValueProviderFactory.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.QueryStringValueProviderFactory" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.QueryStringValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>Devuelve un objeto de proveedor de valores para el contexto de controlador especificado.</summary>
      <returns>Un objeto de proveedor de valores de cadena de consulta.</returns>
      <param name="controllerContext">Un objeto que encapsula la información sobre la solicitud HTTP actual.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="controllerContext" /> es null.</exception>
    </member>
    <member name="T:System.Web.Mvc.RangeAttributeAdapter">
      <summary>Proporciona un adaptador para el atributo <see cref="T:System.ComponentModel.DataAnnotations.RangeAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.RangeAttributeAdapter.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.ComponentModel.DataAnnotations.RangeAttribute)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.ComponentModel.DataAnnotations.RangeAttribute" />.</summary>
      <param name="metadata">Metadatos del modelo.</param>
      <param name="context">Contexto del controlador.</param>
      <param name="attribute">Atributo de intervalo.</param>
    </member>
    <member name="M:System.Web.Mvc.RangeAttributeAdapter.GetClientValidationRules">
      <summary>Obtiene una lista de reglas de validación del cliente para una comprobación de intervalo.</summary>
      <returns>Una lista de reglas de validación del cliente para una comprobación de intervalo.</returns>
    </member>
    <member name="T:System.Web.Mvc.RazorView">
      <summary>Representa la clase que se usa para crear vistas que tienen sintaxis Razor.</summary>
    </member>
    <member name="M:System.Web.Mvc.RazorView.#ctor(System.Web.Mvc.ControllerContext,System.String,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.RazorView" />.</summary>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="viewPath">Ruta de acceso a la vista.</param>
      <param name="layoutPath">La página de diseño o maestra.</param>
      <param name="runViewStartPages">Un valor que indica si los archivos de inicio de vista deben ejecutarse antes que la vista.</param>
      <param name="viewStartFileExtensions">Conjunto de extensiones de archivo que se usarán al buscar los archivos de inicio de vista.</param>
    </member>
    <member name="M:System.Web.Mvc.RazorView.#ctor(System.Web.Mvc.ControllerContext,System.String,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.String},System.Web.Mvc.IViewPageActivator)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.RazorView" /> mediante el activador de página de vista.</summary>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="viewPath">Ruta de acceso a la vista.</param>
      <param name="layoutPath">La página de diseño o maestra.</param>
      <param name="runViewStartPages">Un valor que indica si los archivos de inicio de vista deben ejecutarse antes que la vista.</param>
      <param name="viewStartFileExtensions">Conjunto de extensiones de archivo que se usarán al buscar los archivos de inicio de vista.</param>
      <param name="viewPageActivator">Activador de la página de vista.</param>
    </member>
    <member name="P:System.Web.Mvc.RazorView.LayoutPath">
      <summary>Obtiene la página de diseño o maestra.</summary>
      <returns>La página de diseño o maestra.</returns>
    </member>
    <member name="M:System.Web.Mvc.RazorView.RenderView(System.Web.Mvc.ViewContext,System.IO.TextWriter,System.Object)">
      <summary>Representa el contexto de vista especificado mediante el escritor y la instancia de <see cref="T:System.Web.Mvc.WebViewPage" /> especificados.</summary>
      <param name="viewContext">Contexto de la vista.</param>
      <param name="writer">Sistema de escritura que se usa para representar la vista para la respuesta.</param>
      <param name="instance">Instancia de <see cref="T:System.Web.Mvc.WebViewPage" />.</param>
    </member>
    <member name="P:System.Web.Mvc.RazorView.RunViewStartPages">
      <summary>Obtiene un valor que indica si los archivos de inicio de vista deben ejecutarse antes que la vista.</summary>
      <returns>Un valor que indica si los archivos de inicio de vista deben ejecutarse antes que la vista.</returns>
    </member>
    <member name="P:System.Web.Mvc.RazorView.ViewStartFileExtensions">
      <summary>Obtiene o establece el conjunto de extensiones de archivo que se usarán al buscar archivos de inicio de vista.</summary>
      <returns>El conjunto de extensiones de archivo que se usarán al buscar archivos de inicio de vista.</returns>
    </member>
    <member name="T:System.Web.Mvc.RazorViewEngine">
      <summary>Representa un motor de vista que se emplea para representar una página web que usa la sintaxis de ASP.NET Razor.</summary>
    </member>
    <member name="M:System.Web.Mvc.RazorViewEngine.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.RazorViewEngine" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.RazorViewEngine.#ctor(System.Web.Mvc.IViewPageActivator)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.RazorViewEngine" /> mediante el activador de página de vista.</summary>
      <param name="viewPageActivator">Activador de la página de vista.</param>
    </member>
    <member name="M:System.Web.Mvc.RazorViewEngine.CreatePartialView(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Crea una vista parcial mediante el contexto de controlador especificado y la ruta de acceso parcial.</summary>
      <returns>Vista parcial.</returns>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="partialPath">Ruta de acceso a la vista parcial.</param>
    </member>
    <member name="M:System.Web.Mvc.RazorViewEngine.CreateView(System.Web.Mvc.ControllerContext,System.String,System.String)">
      <summary>Crea una vista mediante el contexto de controlador especificado y las rutas de acceso de la vista y la vista maestra.</summary>
      <returns>La vista.</returns>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="viewPath">Ruta de acceso a la vista.</param>
      <param name="masterPath">Ruta de acceso a la vista maestra.</param>
    </member>
    <member name="T:System.Web.Mvc.RedirectResult">
      <summary>Controla el procesamiento de acciones de aplicación al redirigir a un identificador URI especificado.</summary>
    </member>
    <member name="M:System.Web.Mvc.RedirectResult.#ctor(System.String)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.RedirectResult" />.</summary>
      <param name="url">Dirección URL de destino.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="url" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.RedirectResult.#ctor(System.String,System.Boolean)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.RedirectResult" /> mediante la dirección URL especificada y un marcador de redirección permanente.</summary>
      <param name="url">Dirección URL.</param>
      <param name="permanent">Un valor que indica si la redirección debe ser permanente.</param>
    </member>
    <member name="M:System.Web.Mvc.RedirectResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Habilita el procesamiento del resultado de un método de acción mediante un tipo personalizado que se hereda de la clase <see cref="T:System.Web.Mvc.ActionResult" />.</summary>
      <param name="context">Contexto en el que se ejecuta el resultado.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="context" /> es null.</exception>
    </member>
    <member name="P:System.Web.Mvc.RedirectResult.Permanent">
      <summary>Obtiene un valor que indica si la redirección debe ser permanente.</summary>
      <returns>true si el redireccionamiento debe ser permanente; en caso contrario, false.</returns>
    </member>
    <member name="P:System.Web.Mvc.RedirectResult.Url">
      <summary>Obtiene o establece la dirección URL de destino.</summary>
      <returns>Dirección URL de destino.</returns>
    </member>
    <member name="T:System.Web.Mvc.RedirectToRouteResult">
      <summary>Representa un resultado que realiza una redirección mediante el diccionario de valores de ruta especificado.</summary>
    </member>
    <member name="M:System.Web.Mvc.RedirectToRouteResult.#ctor(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.RedirectToRouteResult" /> mediante el nombre de ruta y los valores de ruta especificados.</summary>
      <param name="routeName">Nombre de la ruta.</param>
      <param name="routeValues">Valores de ruta.</param>
    </member>
    <member name="M:System.Web.Mvc.RedirectToRouteResult.#ctor(System.String,System.Web.Routing.RouteValueDictionary,System.Boolean)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.RedirectToRouteResult" /> mediante el nombre de ruta, los valores de ruta y el marcador de redirección permanente especificados.</summary>
      <param name="routeName">Nombre de la ruta.</param>
      <param name="routeValues">Valores de ruta.</param>
      <param name="permanent">Un valor que indica si la redirección debe ser permanente.</param>
    </member>
    <member name="M:System.Web.Mvc.RedirectToRouteResult.#ctor(System.Web.Routing.RouteValueDictionary)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.RedirectToRouteResult" /> mediante los valores de ruta especificados.</summary>
      <param name="routeValues">Valores de ruta.</param>
    </member>
    <member name="M:System.Web.Mvc.RedirectToRouteResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Habilita el procesamiento del resultado de un método de acción mediante un tipo personalizado que se hereda de la clase <see cref="T:System.Web.Mvc.ActionResult" />.</summary>
      <param name="context">Contexto en el que se ejecuta el resultado.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="context" /> es null.</exception>
    </member>
    <member name="P:System.Web.Mvc.RedirectToRouteResult.Permanent">
      <summary>Obtiene un valor que indica si la redirección debe ser permanente.</summary>
      <returns>true si el redireccionamiento debe ser permanente; en caso contrario, false.</returns>
    </member>
    <member name="P:System.Web.Mvc.RedirectToRouteResult.RouteName">
      <summary>Obtiene o establece el nombre de la ruta.</summary>
      <returns>Nombre de la ruta.</returns>
    </member>
    <member name="P:System.Web.Mvc.RedirectToRouteResult.RouteValues">
      <summary>Obtiene o establece los valores de ruta.</summary>
      <returns>Valores de ruta.</returns>
    </member>
    <member name="T:System.Web.Mvc.ReflectedActionDescriptor">
      <summary>Contiene información que describe un método de acción reflejado.</summary>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.#ctor(System.Reflection.MethodInfo,System.String,System.Web.Mvc.ControllerDescriptor)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.ReflectedActionDescriptor" />.</summary>
      <param name="methodInfo">Información de método de acción.</param>
      <param name="actionName">Nombre de la acción.</param>
      <param name="controllerDescriptor">Descriptor del controlador.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="methodInfo" /> o <paramref name="controllerDescriptor" /> es null.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="actionName" /> es null o está vacío.</exception>
    </member>
    <member name="P:System.Web.Mvc.ReflectedActionDescriptor.ActionName">
      <summary>Obtiene el nombre de la acción.</summary>
      <returns>Nombre de la acción.</returns>
    </member>
    <member name="P:System.Web.Mvc.ReflectedActionDescriptor.ControllerDescriptor">
      <summary>Obtiene el descriptor del controlador.</summary>
      <returns>Descriptor del controlador.</returns>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.Execute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Ejecuta el contexto del controlador especificado mediante los parámetros de método de acción especificados.</summary>
      <returns>Valor devuelto de la acción.</returns>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="parameters">Parámetros.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="parameters" /> o <paramref name="controllerContext" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>Devuelve una matriz de atributos personalizados definidos para este miembro, excluidos los atributos con nombre.</summary>
      <returns>Una matriz de atributos personalizados o una matriz vacía si no existen atributos personalizados.</returns>
      <param name="inherit">true para buscar la cadena de jerarquía del atributo personalizado heredado; de lo contrario, false.</param>
      <exception cref="T:System.TypeLoadException">El tipo de atributo personalizado no puede cargarse.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Se definió más de un atributo del tipo <paramref name="attributeType" /> para este miembro.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Devuelve una matriz de atributos personalizados definidos para este miembro, identificados según el tipo.</summary>
      <returns>Una matriz de atributos personalizados o una matriz vacía si no existen atributos personalizados.</returns>
      <param name="attributeType">Tipo de los atributos personalizados.</param>
      <param name="inherit">true para buscar la cadena de jerarquía del atributo personalizado heredado; de lo contrario, false.</param>
      <exception cref="T:System.TypeLoadException">El tipo de atributo personalizado no puede cargarse.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Se definió más de un atributo del tipo <paramref name="attributeType" /> para este miembro.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.GetFilterAttributes(System.Boolean)">
      <summary>Obtiene los atributos del filtro.</summary>
      <returns>Los atributos del filtro.</returns>
      <param name="useCache">true para usar la memoria caché, de lo contrario false.</param>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.GetParameters">
      <summary>Recupera los parámetros del método de acción.</summary>
      <returns>Parámetros del método de acción.</returns>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.GetSelectors">
      <summary>Recupera los selectores de acción.</summary>
      <returns>Selectores de acción.</returns>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>Indica si se definen una o más instancias de un tipo de atributo personalizado para este miembro.</summary>
      <returns>true si está definido el tipo de atributo personalizado para este miembro; de lo contrario, false.</returns>
      <param name="attributeType">Tipo de los atributos personalizados.</param>
      <param name="inherit">true para buscar la cadena de jerarquía del atributo personalizado heredado; de lo contrario, false.</param>
    </member>
    <member name="P:System.Web.Mvc.ReflectedActionDescriptor.MethodInfo">
      <summary>Obtiene o establece la información de método de acción.</summary>
      <returns>Información de método de acción.</returns>
    </member>
    <member name="P:System.Web.Mvc.ReflectedActionDescriptor.UniqueId">
      <summary>Obtiene el identificador exclusivo del descriptor de la acción reflejado mediante la inicialización diferida.</summary>
      <returns>Identificador único.</returns>
    </member>
    <member name="T:System.Web.Mvc.ReflectedControllerDescriptor">
      <summary>Contiene información que describe un controlador reflejado.</summary>
    </member>
    <member name="M:System.Web.Mvc.ReflectedControllerDescriptor.#ctor(System.Type)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.ReflectedControllerDescriptor" />.</summary>
      <param name="controllerType">Tipo del controlador.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="controllerType" /> es null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ReflectedControllerDescriptor.ControllerType">
      <summary>Obtiene el tipo del controlador.</summary>
      <returns>Tipo del controlador.</returns>
    </member>
    <member name="M:System.Web.Mvc.ReflectedControllerDescriptor.FindAction(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Busca la acción especificada para el contexto del controlador especificado.</summary>
      <returns>Información acerca de la acción.</returns>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="actionName">Nombre de la acción.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="controllerContext" /> es null.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="actionName" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedControllerDescriptor.GetCanonicalActions">
      <summary>Devuelve la lista de acciones para el controlador.</summary>
      <returns>Lista de descriptores de acción para el controlador.</returns>
    </member>
    <member name="M:System.Web.Mvc.ReflectedControllerDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>Devuelve una matriz de atributos personalizados definidos para este miembro, excluidos los atributos con nombre.</summary>
      <returns>Una matriz de atributos personalizados o una matriz vacía si no existen atributos personalizados.</returns>
      <param name="inherit">true para buscar la cadena de jerarquía del atributo personalizado heredado; de lo contrario, false.</param>
      <exception cref="T:System.TypeLoadException">El tipo de atributo personalizado no puede cargarse.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Se definió más de un atributo del tipo <paramref name="attributeType" /> para este miembro.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedControllerDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Devuelve una matriz de atributos personalizados definidos para este miembro, identificados según el tipo.</summary>
      <returns>Una matriz de atributos personalizados o una matriz vacía si no existen atributos personalizados.</returns>
      <param name="attributeType">Tipo de los atributos personalizados.</param>
      <param name="inherit">true para buscar la cadena de jerarquía del atributo personalizado heredado; de lo contrario, false.</param>
      <exception cref="T:System.TypeLoadException">El tipo de atributo personalizado no puede cargarse.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Se definió más de un atributo del tipo <paramref name="attributeType" /> para este miembro.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedControllerDescriptor.GetFilterAttributes(System.Boolean)">
      <summary>Obtiene los atributos del filtro.</summary>
      <returns>Los atributos del filtro.</returns>
      <param name="useCache">true para usar la memoria caché, de lo contrario false.</param>
    </member>
    <member name="M:System.Web.Mvc.ReflectedControllerDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>Devuelve un valor que indica si se define una o más instancias de un tipo de atributo personalizado para este miembro.</summary>
      <returns>true si está definido el tipo de atributo personalizado para este miembro; de lo contrario, false.</returns>
      <param name="attributeType">Tipo de los atributos personalizados.</param>
      <param name="inherit">true para buscar la cadena de jerarquía del atributo personalizado heredado; de lo contrario, false.</param>
    </member>
    <member name="T:System.Web.Mvc.ReflectedParameterDescriptor">
      <summary>Contiene información que describe un parámetro de método de acción reflejado.</summary>
    </member>
    <member name="M:System.Web.Mvc.ReflectedParameterDescriptor.#ctor(System.Reflection.ParameterInfo,System.Web.Mvc.ActionDescriptor)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.ReflectedParameterDescriptor" />.</summary>
      <param name="parameterInfo">Información de parámetro.</param>
      <param name="actionDescriptor">Descriptor de la acción.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="parameterInfo" /> o <paramref name="actionDescriptor" /> es null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ReflectedParameterDescriptor.ActionDescriptor">
      <summary>Obtiene el descriptor de la acción.</summary>
      <returns>Descriptor de la acción.</returns>
    </member>
    <member name="P:System.Web.Mvc.ReflectedParameterDescriptor.BindingInfo">
      <summary>Obtiene la información de enlace.</summary>
      <returns>Información de enlace.</returns>
    </member>
    <member name="P:System.Web.Mvc.ReflectedParameterDescriptor.DefaultValue">
      <summary>Obtiene el valor predeterminado del parámetro reflejado.</summary>
      <returns>Valor predeterminado del parámetro reflejado.</returns>
    </member>
    <member name="M:System.Web.Mvc.ReflectedParameterDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>Devuelve una matriz de atributos personalizados definidos para este miembro, excluidos los atributos con nombre.</summary>
      <returns>Una matriz de atributos personalizados o una matriz vacía si no existen atributos personalizados.</returns>
      <param name="inherit">true para buscar la cadena de jerarquía del atributo personalizado heredado; de lo contrario, false.</param>
      <exception cref="T:System.TypeLoadException">El tipo de atributo personalizado no puede cargarse.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Se definió más de un atributo del tipo <paramref name="attributeType" /> para este miembro.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedParameterDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Devuelve una matriz de atributos personalizados definidos para este miembro, identificados según el tipo.</summary>
      <returns>Una matriz de atributos personalizados o una matriz vacía si no existen atributos personalizados.</returns>
      <param name="attributeType">Tipo de los atributos personalizados.</param>
      <param name="inherit">true para buscar la cadena de jerarquía del atributo personalizado heredado; de lo contrario, false.</param>
      <exception cref="T:System.TypeLoadException">El tipo de atributo personalizado no puede cargarse.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Se definió más de un atributo del tipo <paramref name="attributeType" /> para este miembro.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedParameterDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>Devuelve un valor que indica si se define una o más instancias de un tipo de atributo personalizado para este miembro.</summary>
      <returns>true si está definido el tipo de atributo personalizado para este miembro; de lo contrario, false.</returns>
      <param name="attributeType">Tipo de los atributos personalizados.</param>
      <param name="inherit">true para buscar la cadena de jerarquía del atributo personalizado heredado; de lo contrario, false.</param>
    </member>
    <member name="P:System.Web.Mvc.ReflectedParameterDescriptor.ParameterInfo">
      <summary>Obtiene o establece la información del parámetro.</summary>
      <returns>Información de parámetro.</returns>
    </member>
    <member name="P:System.Web.Mvc.ReflectedParameterDescriptor.ParameterName">
      <summary>Obtiene el nombre del parámetro.</summary>
      <returns>Nombre del parámetro.</returns>
    </member>
    <member name="P:System.Web.Mvc.ReflectedParameterDescriptor.ParameterType">
      <summary>Obtiene el tipo de parámetro.</summary>
      <returns>Tipo del parámetro.</returns>
    </member>
    <member name="T:System.Web.Mvc.RegularExpressionAttributeAdapter">
      <summary>Proporciona un adaptador para el atributo <see cref="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.RegularExpressionAttributeAdapter.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.ComponentModel.DataAnnotations.RegularExpressionAttribute)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.RegularExpressionAttributeAdapter" />.</summary>
      <param name="metadata">Metadatos del modelo.</param>
      <param name="context">Contexto del controlador.</param>
      <param name="attribute">Atributo de expresión regular.</param>
    </member>
    <member name="M:System.Web.Mvc.RegularExpressionAttributeAdapter.GetClientValidationRules">
      <summary>Obtiene una lista de reglas de validación del cliente para la expresión regular.</summary>
      <returns>Una lista de reglas de validación del cliente para la expresión regular.</returns>
    </member>
    <member name="T:System.Web.Mvc.RemoteAttribute">
      <summary>Proporciona un atributo que usa el validador remoto del complemento de validación jQuery. </summary>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.RemoteAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.RemoteAttribute" /> mediante el nombre de ruta especificado.</summary>
      <param name="routeName">Nombre de la ruta.</param>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.#ctor(System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.RemoteAttribute" /> mediante el nombre de método de acción y el nombre de controlador especificados.</summary>
      <param name="action">Nombre del método de la acción.</param>
      <param name="controller">Nombre del controlador.</param>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.#ctor(System.String,System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.RemoteAttribute" /> mediante el nombre de método de acción, el nombre de controlador y el nombre de área especificados.</summary>
      <param name="action">Nombre del método de la acción.</param>
      <param name="controller">Nombre del controlador.</param>
      <param name="areaName">Nombre del área.</param>
    </member>
    <member name="P:System.Web.Mvc.RemoteAttribute.AdditionalFields">
      <summary>Obtiene o establece los campos adicionales que son necesarios para la validación.</summary>
      <returns>Campos adicionales que son necesarios para la validación.</returns>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.FormatAdditionalFieldsForClientValidation(System.String)">
      <summary>Devuelve una cadena delimitada por comas de nombres de campo de validación.</summary>
      <returns>Cadena delimitada por comas de nombres de campos de validación.</returns>
      <param name="property">Nombre de la propiedad de validación.</param>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.FormatErrorMessage(System.String)">
      <summary>Da formato al mensaje de error que se muestra cuando se produce un error de validación.</summary>
      <returns>Mensaje de error con formato.</returns>
      <param name="name">Nombre que se mostrará con el mensaje de error.</param>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.FormatPropertyForClientValidation(System.String)">
      <summary>Da formato a la propiedad de validación de clientes al anteponerle un asterisco (*) y un punto.</summary>
      <returns>Cadena "*." Se antepone a la propiedad.</returns>
      <param name="property">Propiedad.</param>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.GetClientValidationRules(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Obtiene una lista de reglas de validación de clientes para la propiedad.</summary>
      <returns>Lista de reglas de validación de clientes remoto para la propiedad.</returns>
      <param name="metadata">Metadatos del modelo.</param>
      <param name="context">Contexto del controlador.</param>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.GetUrl(System.Web.Mvc.ControllerContext)">
      <summary>Obtiene la dirección URL de la llamada de validación remota.</summary>
      <returns>Dirección URL de la llamada de validación remota.</returns>
      <param name="controllerContext">Contexto del controlador.</param>
    </member>
    <member name="P:System.Web.Mvc.RemoteAttribute.HttpMethod">
      <summary>Obtiene o establece el método HTTP que se usa para la validación remota.</summary>
      <returns>Método HTTP que se usa para la validación remota.El valor predeterminado es "Get".</returns>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.IsValid(System.Object)">
      <summary>Este método devuelve siempre true.</summary>
      <returns>true</returns>
      <param name="value">Destino de validación.</param>
    </member>
    <member name="P:System.Web.Mvc.RemoteAttribute.RouteData">
      <summary>Obtiene el diccionario de datos de ruta.</summary>
      <returns>Diccionario de datos de ruta.</returns>
    </member>
    <member name="P:System.Web.Mvc.RemoteAttribute.RouteName">
      <summary>Obtiene o establece el nombre de ruta.</summary>
      <returns>Nombre de la ruta.</returns>
    </member>
    <member name="P:System.Web.Mvc.RemoteAttribute.Routes">
      <summary>Obtiene la colección de rutas de la tabla de rutas.</summary>
      <returns>Colección de rutas de la tabla de rutas.</returns>
    </member>
    <member name="T:System.Web.Mvc.RequiredAttributeAdapter">
      <summary>Proporciona un adaptador para el atributo <see cref="T:System.Runtime.CompilerServices.RequiredAttributeAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.RequiredAttributeAdapter.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.ComponentModel.DataAnnotations.RequiredAttribute)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Runtime.CompilerServices.RequiredAttributeAttribute" />.</summary>
      <param name="metadata">Metadatos del modelo.</param>
      <param name="context">Contexto del controlador.</param>
      <param name="attribute">Atributo obligatorio.</param>
    </member>
    <member name="M:System.Web.Mvc.RequiredAttributeAdapter.GetClientValidationRules">
      <summary>Obtiene una lista de reglas de validación del cliente para el valor requerido.</summary>
      <returns>Una lista de reglas de validación del cliente para el valor requerido.</returns>
    </member>
    <member name="T:System.Web.Mvc.RequireHttpsAttribute">
      <summary>Representa un atributo que obliga a reenviar una solicitud HTTP no segura sobre HTTPS.</summary>
    </member>
    <member name="M:System.Web.Mvc.RequireHttpsAttribute.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.RequireHttpsAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.RequireHttpsAttribute.HandleNonHttpsRequest(System.Web.Mvc.AuthorizationContext)">
      <summary>Controla las solicitudes HTTP no seguras que se envían al método de acción.</summary>
      <param name="filterContext">Objeto que encapsula la información necesaria para usar el atributo <see cref="T:System.Web.Mvc.RequireHttpsAttribute" />.</param>
      <exception cref="T:System.InvalidOperationException">La solicitud HTTP contiene una invalidación de método de transferencia no válida.Todas las solicitudes GET se consideran no válidas.</exception>
    </member>
    <member name="M:System.Web.Mvc.RequireHttpsAttribute.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>Determina si se protege una solicitud (HTTPS) y, de lo contrario, llama al método <see cref="M:System.Web.Mvc.RequireHttpsAttribute.HandleNonHttpsRequest(System.Web.Mvc.AuthorizationContext)" />.</summary>
      <param name="filterContext">Objeto que encapsula la información necesaria para usar el atributo <see cref="T:System.Web.Mvc.RequireHttpsAttribute" />.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="filterContext" /> es null.</exception>
    </member>
    <member name="T:System.Web.Mvc.ResultExecutedContext">
      <summary>Proporciona el contexto para el método <see cref="M:System.Web.Mvc.ActionFilterAttribute.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)" /> de la clase <see cref="T:System.Web.Mvc.ActionFilterAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ResultExecutedContext.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.ResultExecutedContext" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ResultExecutedContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionResult,System.Boolean,System.Exception)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.ResultExecutedContext" />.</summary>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="result">Objeto resultado.</param>
      <param name="canceled">true para cancelar la ejecución; en caso contrario, false.</param>
      <param name="exception">El objeto excepción.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="result" /> es null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ResultExecutedContext.Canceled">
      <summary>Obtiene o establece un valor que indica si esta instancia de <see cref="T:System.Web.Mvc.ResultExecutedContext" /> se cancela.</summary>
      <returns>true si la instancia se cancelo; en caso contrario, false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ResultExecutedContext.Exception">
      <summary>Obtiene o establece el objeto de excepción.</summary>
      <returns>El objeto excepción.</returns>
    </member>
    <member name="P:System.Web.Mvc.ResultExecutedContext.ExceptionHandled">
      <summary>Obtiene o establece un valor que indica si la excepción se ha controlado.</summary>
      <returns>true si la excepción se ha controlado; de lo contrario, false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ResultExecutedContext.Result">
      <summary>Obtiene o establece el resultado de la acción.</summary>
      <returns>Resultado de la acción.</returns>
    </member>
    <member name="T:System.Web.Mvc.ResultExecutingContext">
      <summary>Proporciona el contexto para el método <see cref="M:System.Web.Mvc.ActionFilterAttribute.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)" /> de la clase <see cref="T:System.Web.Mvc.ActionFilterAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ResultExecutingContext.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.ResultExecutingContext" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ResultExecutingContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionResult)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.ResultExecutingContext" /> mediante el contexto del controlador especificado y el resultado de la acción.</summary>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="result">Resultado de la acción.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="result" /> es null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ResultExecutingContext.Cancel">
      <summary>Obtiene o establece un valor que indica si el valor de este objeto <see cref="T:System.Web.Mvc.ResultExecutingContext" /> es "cancel".</summary>
      <returns>true si el valor es "cancel"; en caso contrario, false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ResultExecutingContext.Result">
      <summary>Obtiene o establece el resultado de la acción.</summary>
      <returns>Resultado de la acción.</returns>
    </member>
    <member name="T:System.Web.Mvc.RouteCollectionExtensions">
      <summary>Extiende un objeto <see cref="T:System.Web.Routing.RouteCollection" /> para el enrutamiento MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.GetVirtualPathForArea(System.Web.Routing.RouteCollection,System.Web.Routing.RequestContext,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Devuelve un objeto que contiene información sobre la ruta y la ruta de acceso virtual que son el resultado de generar una dirección URL en el área actual.</summary>
      <returns>Objeto que contiene información sobre la ruta y la ruta de acceso virtual que son el resultado de generar una dirección URL en el área actual.</returns>
      <param name="routes">Objeto que contiene las rutas para las aplicaciones.</param>
      <param name="requestContext">Objeto que encapsula la información sobre la ruta solicitada.</param>
      <param name="name">Nombre de la ruta que se va a usa cuando se recupere la información sobre la ruta de acceso de la dirección URL.</param>
      <param name="values">Objeto que contiene los parámetros de una ruta.</param>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.GetVirtualPathForArea(System.Web.Routing.RouteCollection,System.Web.Routing.RequestContext,System.Web.Routing.RouteValueDictionary)">
      <summary>Devuelve un objeto que contiene información sobre la ruta y la ruta de acceso virtual que son el resultado de generar una dirección URL en el área actual.</summary>
      <returns>Objeto que contiene información sobre la ruta y la ruta de acceso virtual que son el resultado de generar una dirección URL en el área actual.</returns>
      <param name="routes">Objeto que contiene las rutas para las aplicaciones.</param>
      <param name="requestContext">Objeto que encapsula la información sobre la ruta solicitada.</param>
      <param name="values">Objeto que contiene los parámetros de una ruta.</param>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.IgnoreRoute(System.Web.Routing.RouteCollection,System.String)">
      <summary>Omite la ruta de la dirección URL especificada para la lista determinada de rutas disponibles.</summary>
      <param name="routes">Una colección de rutas para la aplicación.</param>
      <param name="url">Modelo de dirección URL para la ruta que se va a omitir.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="routes" /> o <paramref name="url" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.IgnoreRoute(System.Web.Routing.RouteCollection,System.String,System.Object)">
      <summary>Omite la ruta de la dirección URL especificada para la lista determinada de rutas disponibles y una lista de restricciones.</summary>
      <param name="routes">Una colección de rutas para la aplicación.</param>
      <param name="url">Modelo de dirección URL para la ruta que se va a omitir.</param>
      <param name="constraints">Un conjunto de expresiones que especifican los valores para el parámetro <paramref name="url" />.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="routes" /> o <paramref name="url" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String)">
      <summary>Asigna la ruta de la dirección URL especificada.</summary>
      <returns>Una referencia a la ruta asignada.</returns>
      <param name="routes">Una colección de rutas para la aplicación.</param>
      <param name="name">Nombre de la ruta que se va a asignar.</param>
      <param name="url">Modelo de dirección URL de la ruta.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="routes" /> o <paramref name="url" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String,System.Object)">
      <summary>Asigna la ruta de la dirección URL especificada y establece los valores de ruta predeterminados.</summary>
      <returns>Una referencia a la ruta asignada.</returns>
      <param name="routes">Una colección de rutas para la aplicación.</param>
      <param name="name">Nombre de la ruta que se va a asignar.</param>
      <param name="url">Modelo de dirección URL de la ruta.</param>
      <param name="defaults">Objeto que contiene los valores de ruta predeterminados.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="routes" /> o <paramref name="url" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String,System.Object,System.Object)">
      <summary>Asigna la ruta de la dirección URL especificada y establece los valores de ruta predeterminados y las restricciones.</summary>
      <returns>Una referencia a la ruta asignada.</returns>
      <param name="routes">Una colección de rutas para la aplicación.</param>
      <param name="name">Nombre de la ruta que se va a asignar.</param>
      <param name="url">Modelo de dirección URL de la ruta.</param>
      <param name="defaults">Objeto que contiene los valores de ruta predeterminados.</param>
      <param name="constraints">Un conjunto de expresiones que especifican los valores para el parámetro <paramref name="url" />.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="routes" /> o <paramref name="url" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String,System.Object,System.Object,System.String[])">
      <summary>Asigna la ruta de la dirección URL especificada y establece los valores de ruta predeterminados, las restricciones y los espacios de nombres.</summary>
      <returns>Una referencia a la ruta asignada.</returns>
      <param name="routes">Una colección de rutas para la aplicación.</param>
      <param name="name">Nombre de la ruta que se va a asignar.</param>
      <param name="url">Modelo de dirección URL de la ruta.</param>
      <param name="defaults">Objeto que contiene los valores de ruta predeterminados.</param>
      <param name="constraints">Un conjunto de expresiones que especifican los valores para el parámetro <paramref name="url" />.</param>
      <param name="namespaces">Conjunto de espacios de nombres para la aplicación.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="routes" /> o <paramref name="url" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String,System.Object,System.String[])">
      <summary>Asigna la ruta de la dirección URL especificada y establece los valores de ruta predeterminados y los espacios de nombres.</summary>
      <returns>Una referencia a la ruta asignada.</returns>
      <param name="routes">Una colección de rutas para la aplicación.</param>
      <param name="name">Nombre de la ruta que se va a asignar.</param>
      <param name="url">Modelo de dirección URL de la ruta.</param>
      <param name="defaults">Objeto que contiene los valores de ruta predeterminados.</param>
      <param name="namespaces">Conjunto de espacios de nombres para la aplicación.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="routes" /> o <paramref name="url" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String,System.String[])">
      <summary>Asigna la ruta de la dirección URL especificada y establece los espacios de nombres.</summary>
      <returns>Una referencia a la ruta asignada.</returns>
      <param name="routes">Una colección de rutas para la aplicación.</param>
      <param name="name">Nombre de la ruta que se va a asignar.</param>
      <param name="url">Modelo de dirección URL de la ruta.</param>
      <param name="namespaces">Conjunto de espacios de nombres para la aplicación.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="routes" /> o <paramref name="url" /> es null.</exception>
    </member>
    <member name="T:System.Web.Mvc.RouteDataValueProvider">
      <summary>Representa un proveedor de valores para los datos de ruta contenidos en un objeto que implementa la interfaz <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.RouteDataValueProvider.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.RouteDataValueProvider" />.</summary>
      <param name="controllerContext">Objeto que contiene información sobre la solicitud HTTP.</param>
    </member>
    <member name="T:System.Web.Mvc.RouteDataValueProviderFactory">
      <summary>Representa un generador para crear objetos de proveedor de valores de datos de ruta.</summary>
    </member>
    <member name="M:System.Web.Mvc.RouteDataValueProviderFactory.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.RouteDataValueProviderFactory" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.RouteDataValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>Devuelve un objeto de proveedor de valores para el contexto de controlador especificado.</summary>
      <returns>Un objeto de proveedor de valores.</returns>
      <param name="controllerContext">Un objeto que encapsula la información sobre la solicitud HTTP actual.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="controllerContext" /> es null.</exception>
    </member>
    <member name="T:System.Web.Mvc.SelectList">
      <summary>Representa una lista que permite a los usuarios seleccionar un elemento.</summary>
    </member>
    <member name="M:System.Web.Mvc.SelectList.#ctor(System.Collections.IEnumerable)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.SelectList" /> mediante los elementos especificados para la lista.</summary>
      <param name="items">Elementos.</param>
    </member>
    <member name="M:System.Web.Mvc.SelectList.#ctor(System.Collections.IEnumerable,System.Object)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.SelectList" /> mediante los elementos especificados para la lista y un valor seleccionado.</summary>
      <param name="items">Elementos.</param>
      <param name="selectedValue">El valor seleccionado.</param>
    </member>
    <member name="M:System.Web.Mvc.SelectList.#ctor(System.Collections.IEnumerable,System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.SelectList" /> mediante los elementos especificados para la lista, el campo de valor de datos y el campo de texto de datos.</summary>
      <param name="items">Elementos.</param>
      <param name="dataValueField">Campo de valor de datos.</param>
      <param name="dataTextField">Campo de texto de datos.</param>
    </member>
    <member name="M:System.Web.Mvc.SelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.Object)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.SelectList" /> mediante los elementos especificados para la lista, el campo de valor de datos, el campo de texto de datos y un valor seleccionado.</summary>
      <param name="items">Elementos.</param>
      <param name="dataValueField">Campo de valor de datos.</param>
      <param name="dataTextField">Campo de texto de datos.</param>
      <param name="selectedValue">El valor seleccionado.</param>
    </member>
    <member name="P:System.Web.Mvc.SelectList.SelectedValue">
      <summary>Obtiene el valor de lista seleccionado por el usuario.</summary>
      <returns>El valor seleccionado.</returns>
    </member>
    <member name="T:System.Web.Mvc.SelectListItem">
      <summary>Representa el elemento seleccionado en una instancia de la clase <see cref="T:System.Web.Mvc.SelectList" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.SelectListItem.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.SelectListItem" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.SelectListItem.Selected">
      <summary>Obtiene o establece un valor que indica si este objeto <see cref="T:System.Web.Mvc.SelectListItem" /> está seleccionado.</summary>
      <returns>true si el elemento está seleccionado; en caso contrario, false.</returns>
    </member>
    <member name="P:System.Web.Mvc.SelectListItem.Text">
      <summary>Obtiene o establece el texto del elemento seleccionado.</summary>
      <returns>El texto.</returns>
    </member>
    <member name="P:System.Web.Mvc.SelectListItem.Value">
      <summary>Obtiene o establece el valor del elemento seleccionado.</summary>
      <returns>Valor.</returns>
    </member>
    <member name="T:System.Web.Mvc.SessionStateAttribute">
      <summary>Especifica el estado de sesión del controlador.</summary>
    </member>
    <member name="M:System.Web.Mvc.SessionStateAttribute.#ctor(System.Web.SessionState.SessionStateBehavior)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.SessionStateAttribute" />.</summary>
      <param name="behavior">Tipo de estado de sesión.</param>
    </member>
    <member name="P:System.Web.Mvc.SessionStateAttribute.Behavior">
      <summary>Obtiene el comportamiento de estado de sesión del controlador.</summary>
      <returns>Comportamiento de estado de sesión para el controlador.</returns>
    </member>
    <member name="T:System.Web.Mvc.SessionStateTempDataProvider">
      <summary>Proporciona datos del estado de sesión al objeto <see cref="T:System.Web.Mvc.TempDataDictionary" /> actual.</summary>
    </member>
    <member name="M:System.Web.Mvc.SessionStateTempDataProvider.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.SessionStateTempDataProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.SessionStateTempDataProvider.LoadTempData(System.Web.Mvc.ControllerContext)">
      <summary>Carga los datos temporales mediante el contexto del controlador especificado.</summary>
      <returns>Datos temporales.</returns>
      <param name="controllerContext">Contexto del controlador.</param>
      <exception cref="T:System.InvalidOperationException">Error mientras se recuperaba el contexto de sesión.</exception>
    </member>
    <member name="M:System.Web.Mvc.SessionStateTempDataProvider.SaveTempData(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Guarda los valores especificados en el diccionario de datos temporal mediante el contexto del controlador especificado.</summary>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="values">Valores.</param>
      <exception cref="T:System.InvalidOperationException">Error mientras se recuperaba el contexto de sesión.</exception>
    </member>
    <member name="T:System.Web.Mvc.StringLengthAttributeAdapter">
      <summary>Proporciona un adaptador para el atributo <see cref="T:System.ComponentModel.DataAnnotations.StringLengthAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.StringLengthAttributeAdapter.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.ComponentModel.DataAnnotations.StringLengthAttribute)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.StringLengthAttributeAdapter" />.</summary>
      <param name="metadata">Metadatos del modelo.</param>
      <param name="context">Contexto del controlador.</param>
      <param name="attribute">Atributo de longitud de cadena.</param>
    </member>
    <member name="M:System.Web.Mvc.StringLengthAttributeAdapter.GetClientValidationRules">
      <summary>Obtiene una lista de reglas de validación del cliente para la longitud de cadena.</summary>
      <returns>Una lista de reglas de validación del cliente para la longitud de cadena.</returns>
    </member>
    <member name="T:System.Web.Mvc.TempDataDictionary">
      <summary>Representa un conjunto de datos que solo persiste de una solicitud a la siguiente.</summary>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.TempDataDictionary" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Add(System.String,System.Object)">
      <summary>Agrega un elemento que tiene la clave y el valor especificados al objeto <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <param name="key">Clave del elemento que se va a agregar.</param>
      <param name="value">Valor del elemento que se va a agregar.</param>
      <exception cref="T:System.NotSupportedException">El objeto <see cref="T:System.Collections.Generic.IDictionary`2" /> es de solo lectura.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> es null.</exception>
      <exception cref="T:System.ArgumentException">Ya existe un elemento con la misma clave en el objeto <see cref="T:System.Collections.Generic.IDictionary`2" />.</exception>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Clear">
      <summary>Quita todos los elementos de la instancia de <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <exception cref="T:System.NotSupportedException">El objeto <see cref="T:System.Collections.Generic.ICollection`1" /> es de solo lectura.</exception>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.ContainsKey(System.String)">
      <summary>Determina si la instancia de <see cref="T:System.Collections.Generic.IDictionary`2" /> contiene un elemento que tiene la clave especificada.</summary>
      <returns>true si la instancia contiene <see cref="T:System.Collections.Generic.IDictionary`2" /> un elemento que tiene la clave especificada; de lo contrario, false.</returns>
      <param name="key">Clave que se va a buscar en la instancia de <see cref="T:System.Collections.Generic.IDictionary`2" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.ContainsValue(System.Object)">
      <summary>Determina si el diccionario contiene el valor especificado.</summary>
      <returns>true si el diccionario contiene el valor especificado; de lo contrario, false.</returns>
      <param name="value">Valor.</param>
    </member>
    <member name="P:System.Web.Mvc.TempDataDictionary.Count">
      <summary>Obtiene el número de elementos del objeto <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <returns>Número de elementos del objeto <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.GetEnumerator">
      <summary>Obtiene el enumerador.</summary>
      <returns>Enumerador.</returns>
    </member>
    <member name="P:System.Web.Mvc.TempDataDictionary.Item(System.String)">
      <summary>Obtiene o establece el objeto que tiene la clave especificada.</summary>
      <returns>Objeto que tiene la clave especificada.</returns>
      <param name="key">Clave para obtener acceso.</param>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Keep">
      <summary>Marca todas las claves en el diccionario para la retención.</summary>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Keep(System.String)">
      <summary>Marca la clave especificada en el diccionario para la retención.</summary>
      <param name="key">Clave que se va a retener en el diccionario.</param>
    </member>
    <member name="P:System.Web.Mvc.TempDataDictionary.Keys">
      <summary>Obtiene un objeto <see cref="T:System.Collections.Generic.ICollection`1" /> que contiene las claves de los elementos del objeto <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns>Claves de los elementos del objeto <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Load(System.Web.Mvc.ControllerContext,System.Web.Mvc.ITempDataProvider)">
      <summary>Carga el contexto del controlador especificado mediante el proveedor de datos especificado.</summary>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="tempDataProvider">Proveedor de datos temporal.</param>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Peek(System.String)">
      <summary>Devuelve un objeto que contiene el elemento que está asociado a la clave especificada, sin marcar la clave para la eliminación.</summary>
      <returns>Un objeto que contiene el elemento que está asociado a la clave especificada.</returns>
      <param name="key">Clave del elemento que se va a devolver.</param>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Remove(System.String)">
      <summary>Quita del objeto <see cref="T:System.Collections.Generic.IDictionary`2" /> el elemento que tiene la clave especificada.</summary>
      <returns>true si el elemento se quitó correctamente; en caso contrario, false.Este método también devuelve false si <paramref name="key" /> no se encuentra en <see cref="T:System.Collections.Generic.IDictionary`2" />..</returns>
      <param name="key">Clave del elemento que se va a quitar.</param>
      <exception cref="T:System.NotSupportedException">El objeto <see cref="T:System.Collections.Generic.IDictionary`2" /> es de solo lectura.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Save(System.Web.Mvc.ControllerContext,System.Web.Mvc.ITempDataProvider)">
      <summary>Guarda el contexto del controlador especificado mediante el proveedor de datos especificado.</summary>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="tempDataProvider">Proveedor de datos temporal.</param>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.System#Collections#Generic#ICollection{T}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Agrega el par de clave y valor especificado al diccionario.</summary>
      <param name="keyValuePair">Par de clave y valor.</param>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.System#Collections#Generic#ICollection{T}#Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Determina si una secuencia contiene un elemento especificado mediante el comparador de igualdad predeterminado.</summary>
      <returns>true si el diccionario contiene el par de clave y valor especificado; de lo contrario, false.</returns>
      <param name="keyValuePair">Par de clave y valor que se va a buscar.</param>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.System#Collections#Generic#ICollection{T}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary>Copia un par de clave y valor a la matriz especificada en el índice especificado.</summary>
      <param name="array">Matriz de destino.</param>
      <param name="index">El índice.</param>
    </member>
    <member name="P:System.Web.Mvc.TempDataDictionary.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>Obtiene un valor que indica si el diccionario es de solo lectura.</summary>
      <returns>true si el diccionario es de solo lectura; en caso contrario, false.</returns>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.System#Collections#Generic#ICollection{T}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Elimina del diccionario el par de clave y valor especificado.</summary>
      <returns>true si el par de clave y valor se quitó correctamente; en caso contrario, false.</returns>
      <param name="keyValuePair">Par de clave y valor.</param>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>Devuelve un enumerador que puede usarse para recorrer en iteración una colección.</summary>
      <returns>Objeto <see cref="T:System.Collections.IEnumerator" /> que se puede usar para recorrer en iteración la colección.</returns>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.TryGetValue(System.String,System.Object@)">
      <summary>Obtiene el valor del elemento que tiene la clave especificada.</summary>
      <returns>true el objeto que implementa <see cref="T:System.Collections.Generic.IDictionary`2" /> contiene un elemento que tiene la clave especificada; de lo contrario, false.</returns>
      <param name="key">Clave del valor que se va a obtener.</param>
      <param name="value">Cuando este método devuelve el resultado, el valor asociado a la clave especificada, si se encuentra la clave; en caso contrario, el valor predeterminado para el tipo del parámetro <paramref name="value" />.Este parámetro se pasa sin inicializar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> es null.</exception>
    </member>
    <member name="P:System.Web.Mvc.TempDataDictionary.Values">
      <summary>Obtiene el objeto <see cref="T:System.Collections.Generic.ICollection`1" /> que contiene los valores del objeto <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns>Valores de los elementos del objeto que implementa <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="T:System.Web.Mvc.TemplateInfo">
      <summary>Encapsula la información sobre el contexto de la plantilla actual.</summary>
    </member>
    <member name="M:System.Web.Mvc.TemplateInfo.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.TemplateInfo" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.TemplateInfo.FormattedModelValue">
      <summary>Obtiene o establece el valor de modelo con formato.</summary>
      <returns>Valor de modelo con formato.</returns>
    </member>
    <member name="M:System.Web.Mvc.TemplateInfo.GetFullHtmlFieldId(System.String)">
      <summary>Recupera el identificador de DOM completo de un campo mediante el atributo name HTML especificado.</summary>
      <returns>El identificador de DOM completo.</returns>
      <param name="partialFieldName">Valor del atributo name HTML.</param>
    </member>
    <member name="M:System.Web.Mvc.TemplateInfo.GetFullHtmlFieldName(System.String)">
      <summary>Recupera el nombre completo (con un prefijo) de un campo mediante el atributo name HTML especificado.</summary>
      <returns>Nombre con prefijo del campo.</returns>
      <param name="partialFieldName">Valor del atributo name HTML.</param>
    </member>
    <member name="P:System.Web.Mvc.TemplateInfo.HtmlFieldPrefix">
      <summary>Obtiene o establece el prefijo del campo HTML.</summary>
      <returns>Prefijo del campo HTML.</returns>
    </member>
    <member name="P:System.Web.Mvc.TemplateInfo.TemplateDepth">
      <summary>Contiene el número de objetos visitados por el usuario.</summary>
      <returns>Número de objetos.</returns>
    </member>
    <member name="M:System.Web.Mvc.TemplateInfo.Visited(System.Web.Mvc.ModelMetadata)">
      <summary>Determina si el usuario ha visitado la plantilla.</summary>
      <returns>true si el usuario ha visitado la plantilla; de lo contrario, false.</returns>
      <param name="metadata">Objeto que encapsula la información que describe el modelo.</param>
    </member>
    <member name="T:System.Web.Mvc.UrlHelper">
      <summary>Contiene los métodos para crear direcciones URL para ASP.NET MVC dentro de una aplicación.</summary>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.#ctor(System.Web.Routing.RequestContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.UrlHelper" /> mediante el contexto de solicitud especificado.</summary>
      <param name="requestContext">Objeto que contiene información sobre la solicitud actual y sobre la ruta con la que coincide.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="requestContext" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.#ctor(System.Web.Routing.RequestContext,System.Web.Routing.RouteCollection)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.UrlHelper" /> mediante el contexto de solicitud y la colección de rutas especificados.</summary>
      <param name="requestContext">Objeto que contiene información sobre la solicitud actual y sobre la ruta con la que coincide.</param>
      <param name="routeCollection">Colección de rutas.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="requestContext" /> o <paramref name="routeCollection" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String)">
      <summary>Genera una dirección URL completa para un método de acción mediante el nombre de acción especificado.</summary>
      <returns>Dirección URL completa para un método de acción.</returns>
      <param name="actionName">Nombre del método de la acción.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.Object)">
      <summary>Genera una dirección URL completa para un método de acción mediante el nombre de acción y los valores de ruta especificados.</summary>
      <returns>Dirección URL completa para un método de acción.</returns>
      <param name="actionName">Nombre del método de la acción.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.Los parámetros se recuperan mediante reflexión examinando las propiedades del objeto.El objeto suele crearse utilizando la sintaxis del inicializador de objeto.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.String)">
      <summary>Genera una dirección URL completa para un método de acción mediante el nombre de acción y el nombre de ruta especificados.</summary>
      <returns>Dirección URL completa para un método de acción.</returns>
      <param name="actionName">Nombre del método de la acción.</param>
      <param name="controllerName">Nombre del controlador.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.String,System.Object)">
      <summary>Genera una dirección URL completa para un método de acción mediante el nombre de acción, el nombre del controlador y los valores de ruta especificados.</summary>
      <returns>Dirección URL completa para un método de acción.</returns>
      <param name="actionName">Nombre del método de la acción.</param>
      <param name="controllerName">Nombre del controlador.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.Los parámetros se recuperan mediante reflexión examinando las propiedades del objeto.El objeto suele crearse utilizando la sintaxis del inicializador de objeto.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.String,System.Object,System.String)">
      <summary>Genera una dirección URL completa para un método de acción mediante el nombre de acción, el nombre del controlador, los valores de ruta especificados y el protocolo que se va a usar.</summary>
      <returns>Dirección URL completa para un método de acción.</returns>
      <param name="actionName">Nombre del método de la acción.</param>
      <param name="controllerName">Nombre del controlador.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.Los parámetros se recuperan mediante reflexión examinando las propiedades del objeto.El objeto suele crearse utilizando la sintaxis del inicializador de objeto.</param>
      <param name="protocol">Protocolo de la dirección URL, como "http" o "https".</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Genera una dirección URL completa para un método de acción mediante el nombre de acción, el nombre del controlador y los valores de ruta especificados.</summary>
      <returns>Dirección URL completa para un método de acción.</returns>
      <param name="actionName">Nombre del método de la acción.</param>
      <param name="controllerName">Nombre del controlador.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.String,System.Web.Routing.RouteValueDictionary,System.String,System.String)">
      <summary>Genera una dirección URL completa para un método de acción mediante el nombre de acción, el nombre del controlador, los valores de ruta especificados, el protocolo que se va a usar y el nombre de host.</summary>
      <returns>Dirección URL completa para un método de acción.</returns>
      <param name="actionName">Nombre del método de la acción.</param>
      <param name="controllerName">Nombre del controlador.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.</param>
      <param name="protocol">Protocolo de la dirección URL, como "http" o "https".</param>
      <param name="hostName">Nombre de host para la dirección URL.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Genera una dirección URL completa para un método de acción para el nombre de acción y los valores de ruta especificados.</summary>
      <returns>Dirección URL completa para un método de acción.</returns>
      <param name="actionName">Nombre del método de la acción.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Content(System.String)">
      <summary>Convierte una ruta de acceso virtual (relativa) en una ruta de acceso absoluta de la aplicación.</summary>
      <returns>Ruta de acceso absoluta de la aplicación.</returns>
      <param name="contentPath">La ruta de acceso virtual del contenido.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Encode(System.String)">
      <summary>Codifica caracteres especiales en una cadena de dirección URL en equivalentes carácter-entidad.</summary>
      <returns>Cadena de dirección URL codificada.</returns>
      <param name="url">Texto que se va a codificar.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.GenerateContentUrl(System.String,System.Web.HttpContextBase)">
      <summary>Devuelve una cadena que contiene una dirección URL de contenido.</summary>
      <returns>Una cadena que contiene una dirección URL de contenido.</returns>
      <param name="contentPath">Ruta de acceso del contenido.</param>
      <param name="httpContext">Contexto HTTP.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.GenerateUrl(System.String,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteCollection,System.Web.Routing.RequestContext,System.Boolean)">
      <summary>Devuelve una cadena que contiene una dirección URL.</summary>
      <returns>Cadena que contiene una dirección URL.</returns>
      <param name="routeName">Nombre de la ruta.</param>
      <param name="actionName">Nombre de la acción.</param>
      <param name="controllerName">Nombre del controlador.</param>
      <param name="protocol">Protocolo HTTP.</param>
      <param name="hostName">Nombre del host.</param>
      <param name="fragment">Fragmento.</param>
      <param name="routeValues">Valores de ruta.</param>
      <param name="routeCollection">Colección de rutas.</param>
      <param name="requestContext">Contexto de la solicitud.</param>
      <param name="includeImplicitMvcValues">true para incluir valores MVC implícitos; de lo contrario, false.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.GenerateUrl(System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteCollection,System.Web.Routing.RequestContext,System.Boolean)">
      <summary>Devuelve una cadena que contiene una dirección URL.</summary>
      <returns>Cadena que contiene una dirección URL.</returns>
      <param name="routeName">Nombre de la ruta.</param>
      <param name="actionName">Nombre de la acción.</param>
      <param name="controllerName">Nombre del controlador.</param>
      <param name="routeValues">Valores de ruta.</param>
      <param name="routeCollection">Colección de rutas.</param>
      <param name="requestContext">Contexto de la solicitud.</param>
      <param name="includeImplicitMvcValues">true para incluir valores MVC implícitos; de lo contrario,false.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.HttpRouteUrl(System.String,System.Object)">
      <summary>Genera una dirección URL completa para los valores de ruta especificados.</summary>
      <returns>Dirección URL completa para los valores de ruta especificados.</returns>
      <param name="routeName">Nombre de la ruta.</param>
      <param name="routeValues">Valores de ruta.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.HttpRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Genera una dirección URL completa para los valores de ruta especificados.</summary>
      <returns>Dirección URL completa para los valores de ruta especificados.</returns>
      <param name="routeName">Nombre de la ruta.</param>
      <param name="routeValues">Valores de ruta.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.IsLocalUrl(System.String)">
      <summary>Devuelve un valor que indica si la dirección URL es local.</summary>
      <returns>true si la dirección URL es local; de lo contrario, false.</returns>
      <param name="url">Dirección URL.</param>
    </member>
    <member name="P:System.Web.Mvc.UrlHelper.RequestContext">
      <summary>Obtiene información sobre una solicitud HTTP que coincide con una ruta definida.</summary>
      <returns>Contexto de la solicitud.</returns>
    </member>
    <member name="P:System.Web.Mvc.UrlHelper.RouteCollection">
      <summary>Obtiene una colección que contiene las rutas registradas para la aplicación.</summary>
      <returns>Colección de rutas.</returns>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.Object)">
      <summary>Genera una dirección URL completa para los valores de ruta especificados.</summary>
      <returns>Dirección URL completa.</returns>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.Los parámetros se recuperan mediante reflexión examinando las propiedades del objeto.El objeto suele crearse utilizando la sintaxis del inicializador de objeto.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.String)">
      <summary>Genera una dirección URL completa para el nombre de ruta especificado.</summary>
      <returns>Dirección URL completa.</returns>
      <param name="routeName">Nombre de la ruta que se usa para generar la dirección URL.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.String,System.Object)">
      <summary>Genera una dirección URL completa para los valores de ruta especificados mediante un nombre de ruta.</summary>
      <returns>Dirección URL completa.</returns>
      <param name="routeName">Nombre de la ruta que se usa para generar la dirección URL.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.Los parámetros se recuperan mediante reflexión examinando las propiedades del objeto.El objeto suele crearse utilizando la sintaxis del inicializador de objeto.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.String,System.Object,System.String)">
      <summary>Genera una dirección URL completa para los valores de ruta especificados mediante un nombre de ruta y el protocolo que se va a usar.</summary>
      <returns>Dirección URL completa.</returns>
      <param name="routeName">Nombre de la ruta que se usa para generar la dirección URL.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.Los parámetros se recuperan mediante reflexión examinando las propiedades del objeto.El objeto suele crearse utilizando la sintaxis del inicializador de objeto.</param>
      <param name="protocol">Protocolo de la dirección URL, como "http" o "https".</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Genera una dirección URL completa para los valores de ruta especificados mediante un nombre de ruta.</summary>
      <returns>Dirección URL completa.</returns>
      <param name="routeName">Nombre de la ruta que se usa para generar la dirección URL.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.String,System.Web.Routing.RouteValueDictionary,System.String,System.String)">
      <summary>Genera una dirección URL completa para los valores de ruta especificados mediante el nombre de ruta especificado, el protocolo que se va a usar y el nombre de host.</summary>
      <returns>Dirección URL completa.</returns>
      <param name="routeName">Nombre de la ruta que se usa para generar la dirección URL.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.</param>
      <param name="protocol">Protocolo de la dirección URL, como "http" o "https".</param>
      <param name="hostName">Nombre de host para la dirección URL.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.Web.Routing.RouteValueDictionary)">
      <summary>Genera una dirección URL completa para los valores de ruta especificados.</summary>
      <returns>Dirección URL completa.</returns>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.</param>
    </member>
    <member name="T:System.Web.Mvc.UrlParameter">
      <summary>Representa un parámetro opcional que lo usa la clase <see cref="T:System.Web.Mvc.MvcHandler" /> durante el enrutamiento.</summary>
    </member>
    <member name="F:System.Web.Mvc.UrlParameter.Optional">
      <summary>Contiene el valor de solo lectura para el parámetro opcional.</summary>
    </member>
    <member name="M:System.Web.Mvc.UrlParameter.ToString">
      <summary>Devuelve una cadena vacía.Este método es compatible con la infraestructura de ASP.NET MVC y no está pensado para que se use directamente desde el código.</summary>
      <returns>Una cadena vacía.</returns>
    </member>
    <member name="T:System.Web.Mvc.ValidatableObjectAdapter">
      <summary>Proporciona un adaptador de objetos que se puede validar.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValidatableObjectAdapter.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.ValidatableObjectAdapter" />.</summary>
      <param name="metadata">Metadatos del modelo.</param>
      <param name="context">Contexto del controlador.</param>
    </member>
    <member name="M:System.Web.Mvc.ValidatableObjectAdapter.Validate(System.Object)">
      <summary>Valida el objeto especificado.</summary>
      <returns>Una lista de resultados de la validación.</returns>
      <param name="container">Contenedor.</param>
    </member>
    <member name="T:System.Web.Mvc.ValidateAntiForgeryTokenAttribute">
      <summary>Representa un atributo que se usa para impedir la falsificación de una solicitud.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValidateAntiForgeryTokenAttribute.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.ValidateAntiForgeryTokenAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValidateAntiForgeryTokenAttribute.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>Se llama cuando se necesita autorización.</summary>
      <param name="filterContext">Contexto del filtro.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="filterContext" /> es null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ValidateAntiForgeryTokenAttribute.Salt">
      <summary>Obtiene o establece la cadena salt.</summary>
      <returns>Cadena salt.</returns>
    </member>
    <member name="T:System.Web.Mvc.ValidateInputAttribute">
      <summary>Representa un atributo que se usa para marcar métodos de acción cuya entrada se debe validar.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValidateInputAttribute.#ctor(System.Boolean)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.ValidateInputAttribute" />.</summary>
      <param name="enableValidation">Es true para habilitar la validación.</param>
    </member>
    <member name="P:System.Web.Mvc.ValidateInputAttribute.EnableValidation">
      <summary>Obtiene o establece un valor que indica si se va a habilitar la validación.</summary>
      <returns>true si la validación está habilitada; en caso contrario, false.</returns>
    </member>
    <member name="M:System.Web.Mvc.ValidateInputAttribute.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>Se llama cuando se necesita autorización.</summary>
      <param name="filterContext">Contexto del filtro.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="filterContext" /> es null.</exception>
    </member>
    <member name="T:System.Web.Mvc.ValueProviderCollection">
      <summary>Representa la colección de objetos de proveedor de valores para la aplicación.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.ValueProviderCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.#ctor(System.Collections.Generic.IList{System.Web.Mvc.IValueProvider})">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.Web.Mvc.ValueProviderCollection" /> y registra los proveedores de valores especificados.</summary>
      <param name="list">Lista de proveedores de valor que se va a registrar.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.ContainsPrefix(System.String)">
      <summary>Determina si la colección contiene el prefijo especificado.</summary>
      <returns>true si la colección contiene el prefijo especificado; de lo contrario, false.</returns>
      <param name="prefix">Prefijo que se va a buscar.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.GetKeysFromPrefix(System.String)">
      <summary>Obtiene las claves mediante el prefijo especificado.</summary>
      <returns>Claves.</returns>
      <param name="prefix">Prefijo.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.GetValue(System.String)">
      <summary>Devuelve un objeto de valor mediante la clave especificada.</summary>
      <returns>Objeto de valor para la clave especificada.</returns>
      <param name="key">Clave para la que se va a recuperar el objeto de valor.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.GetValue(System.String,System.Boolean)">
      <summary>Devuelve un objeto de valor mediante la clave y el parámetro de omisión de la validación especificados.</summary>
      <returns>Objeto de valor para la clave especificada.</returns>
      <param name="key">Clave para la que se va a recuperar el objeto de valor.</param>
      <param name="skipValidation">true para especificar que la validación debería omitirse; en caso contrario, false.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.InsertItem(System.Int32,System.Web.Mvc.IValueProvider)">
      <summary>Inserta el objeto de proveedor de valores especificado en la ubicación de índice especificada de la colección.</summary>
      <param name="index">Ubicación del índice de base cero en la que se va a insertar el proveedor de valores en la colección.</param>
      <param name="item">Objeto de proveedor de valores que se va a insertar.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="item" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.SetItem(System.Int32,System.Web.Mvc.IValueProvider)">
      <summary>Reemplaza el proveedor de valores en la ubicación de índice especificada con un nuevo proveedor de valores.</summary>
      <param name="index">Índice de base cero del elemento que se va a reemplazar.</param>
      <param name="item">Nuevo valor para el elemento del índice especificado.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="item" /> es null.</exception>
    </member>
    <member name="T:System.Web.Mvc.ValueProviderDictionary">
      <summary>Representa un diccionario de proveedores de valores para la aplicación.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.ValueProviderDictionary" />.</summary>
      <param name="controllerContext">Contexto del controlador.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ValueProviderResult})">
      <summary>Agrega el elemento especificado a la colección de proveedores de valores.</summary>
      <param name="item">Objeto que se va a agregar al objeto <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotSupportedException">El objeto <see cref="T:System.Collections.Generic.ICollection`1" /> es de solo lectura.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.Add(System.String,System.Object)">
      <summary>Agrega un elemento que tiene la clave y el valor especificados a la colección de proveedores de valores.</summary>
      <param name="key">Clave del elemento que se va a agregar.</param>
      <param name="value">Valor del elemento que se va a agregar.</param>
      <exception cref="T:System.NotSupportedException">El objeto <see cref="T:System.Collections.Generic.IDictionary`2" /> es de solo lectura.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> es null.</exception>
      <exception cref="T:System.ArgumentException">Ya existe un elemento con la clave especificada en el objeto <see cref="T:System.Collections.Generic.IDictionary`2" />.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.Add(System.String,System.Web.Mvc.ValueProviderResult)">
      <summary>Agrega un elemento que tiene la clave y el valor especificados a la colección de proveedores de valores.</summary>
      <param name="key">Clave del elemento que se va a agregar.</param>
      <param name="value">Valor del elemento que se va a agregar.</param>
      <exception cref="T:System.NotSupportedException">El objeto <see cref="T:System.Collections.Generic.IDictionary`2" /> es de solo lectura.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> es null.</exception>
      <exception cref="T:System.ArgumentException">Ya existe un elemento con la clave especificada en el objeto <see cref="T:System.Collections.Generic.IDictionary`2" />.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.Clear">
      <summary>Quita todos los elementos de la colección de proveedores de valores.</summary>
      <exception cref="T:System.NotSupportedException">El objeto <see cref="T:System.Collections.Generic.ICollection`1" /> es de solo lectura.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ValueProviderResult})">
      <summary>Determina si la colección de proveedores de valores contiene el elemento especificado.</summary>
      <returns>Es true si <paramref name="item" /> se encuentra en la colección de proveedores de valores; en caso contrario, es false.</returns>
      <param name="item">Objeto que se va a buscar en la instancia de <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.ContainsKey(System.String)">
      <summary>Determina si la colección de proveedores de valores contiene un elemento que tiene la clave especificada.</summary>
      <returns>Es true si la colección de proveedores de valores contiene un elemento que tiene la clave; de lo contrario, es false.</returns>
      <param name="key">Clave del elemento que se va a buscar en la instancia de <see cref="T:System.Collections.Generic.IDictionary`2" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> es null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderDictionary.ControllerContext">
      <summary>Obtiene o establece el contexto del controlador.</summary>
      <returns>Contexto del controlador.</returns>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ValueProviderResult}[],System.Int32)">
      <summary>Copia los elementos de la colección en una matriz, empezando por el índice especificado.</summary>
      <param name="array">Matriz unidimensional que constituye el destino de los elementos copiados desde el objeto <see cref="T:System.Collections.Generic.ICollection`1" />.La matriz debe tener una indización de base cero.</param>
      <param name="arrayIndex">Índice de base cero de <paramref name="array" /> donde se inicia la operación de copia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> es null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> es menor que 0.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> es multidimensional.O bienEl valor de <paramref name="arrayIndex" /> es igual o mayor que la longitud de <paramref name="array" />.O bienEl número de elementos de la colección de origen es mayor que el espacio disponible desde el <paramref name="arrayIndex" /> hasta el final de la <paramref name="array" /> de destino.O bienEl tipo <paramref name="T" /> no puede convertirse automáticamente al tipo de la matriz de destino.</exception>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderDictionary.Count">
      <summary>Obtiene el número de elementos de la colección.</summary>
      <returns>Número de elementos de la colección.</returns>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.GetEnumerator">
      <summary>Devuelve un enumerador que puede utilizarse para iterar por la colección.</summary>
      <returns>Enumerador que se puede usar para iterar por la colección.</returns>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderDictionary.IsReadOnly">
      <summary>Obtiene un valor que indica si la colección es de sólo lectura.</summary>
      <returns>true si la colección es de solo lectura; en caso contrario, false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderDictionary.Item(System.String)">
      <summary>Obtiene o establece el objeto <see cref="T:System.Web.Mvc.ValueProviderResult" /> que tiene la clave especificada.</summary>
      <returns>Objeto <see cref="T:System.Web.Mvc.ValueProviderResult" />.</returns>
      <param name="key">Clave.</param>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderDictionary.Keys">
      <summary>Obtiene una colección que contiene las claves de la instancia de <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns>Colección que contiene las claves del objeto que implementa la interfaz <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ValueProviderResult})">
      <summary>Quita la primera aparición del elemento especificado de la colección de proveedores de valores.</summary>
      <returns>Es true si <paramref name="item" /> se quitó correctamente de la colección; de lo contrario, es false.Este método también devuelve false si <paramref name="item" /> no se encuentra en la colección.</returns>
      <param name="item">Objeto que se va a quitar de la instancia de <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotSupportedException">El objeto <see cref="T:System.Collections.Generic.ICollection`1" /> es de solo lectura.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.Remove(System.String)">
      <summary>Quita el primer elemento que tenga la clave especificada de la colección de proveedores de valores.</summary>
      <returns>true si el elemento se quitó correctamente; en caso contrario, false.Este método también devuelve false si <paramref name="key" /> no se encuentra en la colección.</returns>
      <param name="key">Clave del elemento que se va a quitar.</param>
      <exception cref="T:System.NotSupportedException">El objeto <see cref="T:System.Collections.Generic.IDictionary`2" /> es de solo lectura.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>Devuelve un enumerador que puede usarse para recorrer en iteración una colección.</summary>
      <returns>Enumerador que se puede usar para iterar por la colección.</returns>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.System#Web#Mvc#IValueProvider#ContainsPrefix(System.String)">
      <summary>Determina si la colección contiene el prefijo especificado.</summary>
      <returns>true si la colección contiene el prefijo especificado; de lo contrario, false.</returns>
      <param name="prefix">Prefijo que se va a buscar.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.System#Web#Mvc#IValueProvider#GetValue(System.String)">
      <summary>Devuelve un objeto de valor mediante la clave especificada.</summary>
      <returns>Objeto de valor para la clave especificada.</returns>
      <param name="key">Clave para la que se va a devolver el objeto de valor.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.TryGetValue(System.String,System.Web.Mvc.ValueProviderResult@)">
      <summary>Obtiene el valor del elemento que tiene la clave especificada.</summary>
      <returns>true el objeto que implementa <see cref="T:System.Collections.Generic.IDictionary`2" /> contiene un elemento que tiene la clave especificada; de lo contrario, false.</returns>
      <param name="key">Clave del elemento que se va a obtener.</param>
      <param name="value">Cuando este método devuelve el resultado, el valor asociado a la clave especificada, si se encuentra la clave; en caso contrario, el valor predeterminado para el tipo del parámetro <paramref name="value" />.Este parámetro se pasa sin inicializar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> es null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderDictionary.Values">
      <summary>Obtiene una colección que contiene los valores del objeto <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns>Colección de los valores del objeto que implementa la interfaz <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="T:System.Web.Mvc.ValueProviderFactories">
      <summary>Representa un contenedor para objetos de generador de proveedores de valores.</summary>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderFactories.Factories">
      <summary>Obtiene la colección de generadores de proveedores de valores para la aplicación.</summary>
      <returns>La colección de objetos de generador de proveedores de valores.</returns>
    </member>
    <member name="T:System.Web.Mvc.ValueProviderFactory">
      <summary>Representa un generador para crear objetos de proveedor de valores.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactory.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.ValueProviderFactory" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>Devuelve un objeto de proveedor de valores para el contexto de controlador especificado.</summary>
      <returns>Un objeto de proveedor de valores.</returns>
      <param name="controllerContext">Un objeto que encapsula la información sobre la solicitud HTTP actual.</param>
    </member>
    <member name="T:System.Web.Mvc.ValueProviderFactoryCollection">
      <summary>Representa la colección de generadores de proveedores de valores para la aplicación.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactoryCollection.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.ValueProviderFactoryCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactoryCollection.#ctor(System.Collections.Generic.IList{System.Web.Mvc.ValueProviderFactory})">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.ValueProviderFactoryCollection" /> mediante la lista especificada de generadores de proveedores de valores.</summary>
      <param name="list">Una lista de los generadores de proveedores de valores con que se va a inicializar la colección.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactoryCollection.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>Devuelve el generador de proveedores de valores para el contexto de controlador especificado.</summary>
      <returns>El objeto de generador de proveedores de valores para el contexto de controlador especificado.</returns>
      <param name="controllerContext">Un objeto que encapsula la información sobre la solicitud HTTP actual.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactoryCollection.InsertItem(System.Int32,System.Web.Mvc.ValueProviderFactory)">
      <summary>Inserta el objeto de generador de proveedores de valores especificado en la ubicación de índice especificada.</summary>
      <param name="index">Ubicación del índice de base cero en la que se va a insertar el proveedor de valores en la colección.</param>
      <param name="item">Objeto de generador de proveedores de valores que se va a insertar.</param>
      <exception cref="ArgumentNullException">El parámetro <paramref name="item" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactoryCollection.SetItem(System.Int32,System.Web.Mvc.ValueProviderFactory)">
      <summary>Establece el objeto de generador de proveedores de valores especificado en la ubicación de índice dada.</summary>
      <param name="index">Ubicación del índice de base cero en la que se va a insertar el proveedor de valores en la colección.</param>
      <param name="item">Objeto de generador de proveedores de valores que se va a establecer.</param>
      <exception cref="ArgumentNullException">El parámetro <paramref name="item" /> es null.</exception>
    </member>
    <member name="T:System.Web.Mvc.ValueProviderResult">
      <summary>Representa el resultado de enlazar un valor (por ejemplo de un envío de formulario o de una cadena de consulta) a una propiedad de argumento acción-método o al propio argumento.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderResult.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.ValueProviderResult" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderResult.#ctor(System.Object,System.String,System.Globalization.CultureInfo)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.ValueProviderResult" /> mediante el valor sin formato, el valor intentado y la información de referencia cultural especificados.</summary>
      <param name="rawValue">Valor sin formato.</param>
      <param name="attemptedValue">Valor intentado.</param>
      <param name="culture">Referencia cultural.</param>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderResult.AttemptedValue">
      <summary>Obtiene o establece el valor sin formato que se convierte en una cadena para mostrar.</summary>
      <returns>Valor sin formato.</returns>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderResult.ConvertTo(System.Type)">
      <summary>Convierte el valor encapsulado por este resultado al tipo especificado.</summary>
      <returns>El valor convertido.</returns>
      <param name="type">Tipo de destino.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="type" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderResult.ConvertTo(System.Type,System.Globalization.CultureInfo)">
      <summary>Convierte el valor encapsulado por este resultado al tipo especificado utilizando la información de la referencia cultural especificada.</summary>
      <returns>El valor convertido.</returns>
      <param name="type">Tipo de destino.</param>
      <param name="culture">Referencia cultural que se va a usar en la conversión.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="type" /> es null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderResult.Culture">
      <summary>Obtiene o establece la referencia cultural.</summary>
      <returns>Referencia cultural.</returns>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderResult.RawValue">
      <summary>Obtiene o establece el valor sin formato proporcionado por el proveedor de valor.</summary>
      <returns>Valor sin formato.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewContext">
      <summary>Encapsula información relacionada con la representación de una vista.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewContext.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.ViewContext" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.IView,System.Web.Mvc.ViewDataDictionary,System.Web.Mvc.TempDataDictionary,System.IO.TextWriter)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.ViewContext" /> mediante el contexto, la vista, el diccionario de datos de la vista, el diccionario de datos temporal y el escritor de texto del controlador especificado.</summary>
      <param name="controllerContext">Encapsula información sobre la solicitud HTTP.</param>
      <param name="view">Vista que se va a representar.</param>
      <param name="viewData">Diccionario que contiene los datos necesarios para representar la vista.</param>
      <param name="tempData">Diccionario que contiene los datos temporales para la vista.</param>
      <param name="writer">Objeto de escritor de texto que se usa para escribir la salida HTML.</param>
      <exception cref="T:System.ArgumentNullException">Uno de los parámetros es null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.ClientValidationEnabled">
      <summary>Obtiene o establece un valor válido que indica si se ha habilitado la validación en el lado cliente.</summary>
      <returns>true si la validación de clientes está habilitada; en caso contrario, false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.FormContext">
      <summary>Obtiene o establece un objeto que encapsula la información necesaria para validar y procesar los datos de entrada de un formulario HTML.</summary>
      <returns>Un objeto que encapsula la información necesaria para validar y procesar los datos de entrada de un formulario HTML.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewContext.OutputClientValidation">
      <summary>Escribe la información de validación de clientes en la respuesta HTTP.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.TempData">
      <summary>Obtiene datos asociados a esta solicitud y disponibles para una única solicitud.</summary>
      <returns>Datos temporales.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.UnobtrusiveJavaScriptEnabled">
      <summary>Obtiene o establece un valor que indica si se ha habilitado JavaScript discreto.</summary>
      <returns>true si JavaScript discreto está habilitado; en caso contrario, false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.View">
      <summary>Obtiene un objeto que implementa la interfaz <see cref="T:System.Web.Mvc.IView" /> para la representación en el explorador.</summary>
      <returns>La vista.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.ViewBag">
      <summary>Obtiene el diccionario de datos de vista dinámicos.</summary>
      <returns>Diccionario de datos de vista dinámicos.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.ViewData">
      <summary>Obtiene los datos de vista que se pasan a la vista.</summary>
      <returns>Datos de la vista.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.Writer">
      <summary>Obtiene o establece el objeto de escritor de texto que se usa para escribir la salida HTML.</summary>
      <returns>El objeto que se usa para escribir la salida HTML.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewDataDictionary">
      <summary>Representa un contenedor que se usa para pasar datos entre un controlador y una vista.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.ViewDataDictionary" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.#ctor(System.Object)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.ViewDataDictionary" /> utilizando el modelo especificado.</summary>
      <param name="model">El modelo.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.#ctor(System.Web.Mvc.ViewDataDictionary)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.ViewDataDictionary" /> mediante el diccionario especificado.</summary>
      <param name="dictionary">Diccionario.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="dictionary" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Agrega el elemento especificado a la colección.</summary>
      <param name="item">Objeto que se agrega a la colección.</param>
      <exception cref="T:System.NotSupportedException">La colección es de solo lectura.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Add(System.String,System.Object)">
      <summary>Agrega un elemento a la colección mediante la clave y el valor especificados.</summary>
      <param name="key">Clave del elemento que se va a agregar.</param>
      <param name="value">Valor del elemento que se va a agregar.</param>
      <exception cref="T:System.NotSupportedException">El objeto <see cref="T:System.Collections.Generic.IDictionary`2" /> es de solo lectura.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> es null.</exception>
      <exception cref="T:System.ArgumentException">Ya existe un elemento con la misma clave en el objeto <see cref="T:System.Collections.Generic.IDictionary`2" />.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Clear">
      <summary>Quita todos los elementos de la colección.</summary>
      <exception cref="T:System.NotSupportedException">El objeto <see cref="T:System.Collections.Generic.ICollection`1" /> es de solo lectura.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Determina si la colección contiene el elemento especificado.</summary>
      <returns>Es true si <paramref name="item" /> se encuentra en la colección; en caso contrario, es false.</returns>
      <param name="item">Objeto que se va a buscar en la colección.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.ContainsKey(System.String)">
      <summary>Determina si la colección contiene un elemento con la clave especificada.</summary>
      <returns>true si la colección contiene un elemento que tiene la clave especificada; de lo contrario, false.</returns>
      <param name="key">Clave del elemento que se va a buscar en la colección.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary>Copia los elementos de la colección en una matriz, que empieza en un índice en particular.</summary>
      <param name="array">Matriz unidimensional que constituye el destino de los elementos copiados de la colección.La matriz debe tener una indización de base cero.</param>
      <param name="arrayIndex">Índice de base cero de <paramref name="array" /> donde se comienza a copiar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> es null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> es menor que 0.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> es multidimensional.O bien El valor de <paramref name="arrayIndex" /> es igual o mayor que la longitud de <paramref name="array" />.O bien El número de elementos de la colección de origen es mayor que el espacio disponible desde el <paramref name="arrayIndex" /> hasta el final de la <paramref name="array" /> de destino.O bien El tipo <paramref name="T" /> no puede convertirse automáticamente al tipo de la <paramref name="array" /> de destino.</exception>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.Count">
      <summary>Obtiene el número de elementos de la colección.</summary>
      <returns>Número de elementos de la colección.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Eval(System.String)">
      <summary>Evalúa la expresión especificada.</summary>
      <returns>Resultados de la evaluación.</returns>
      <param name="expression">Expresión.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="expression" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Eval(System.String,System.String)">
      <summary>Evalúa la expresión especificada mediante el formato especificado.</summary>
      <returns>Resultados de la evaluación.</returns>
      <param name="expression">Expresión.</param>
      <param name="format">El formato.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.GetEnumerator">
      <summary>Devuelve un enumerador que puede utilizarse para iterar por la colección.</summary>
      <returns>Enumerador que se puede usar para iterar por la colección.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.GetViewDataInfo(System.String)">
      <summary>Devuelve información sobre los datos de vista, tal como la define el parámetro <paramref name="expression" />.</summary>
      <returns>Un objeto que contiene la información de datos de vista definida por el parámetro <paramref name="expression" />.</returns>
      <param name="expression">Un conjunto de pares de clave y valor que definen la información de los datos de vista que se van a devolver.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="expression" /> es null o está vacío.</exception>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.IsReadOnly">
      <summary>Obtiene un valor que indica si la colección es de sólo lectura.</summary>
      <returns>true si la colección es de solo lectura; en caso contrario, false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.Item(System.String)">
      <summary>Obtiene o establece el elemento que está asociado a la clave especificada.</summary>
      <returns>Valor del elemento seleccionado.</returns>
      <param name="key">Clave.</param>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.Keys">
      <summary>Obtiene una colección que contiene las claves de este diccionario.</summary>
      <returns>Colección que contiene las claves del objeto que implementa la interfaz <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.Model">
      <summary>Obtiene o establece el modelo asociado a los datos de vista.</summary>
      <returns>Modelo asociado a los datos de vista.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.ModelMetadata">
      <summary>Obtiene o establece información sobre el modelo.</summary>
      <returns>Información sobre el modelo.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.ModelState">
      <summary>Obtiene el estado del modelo.</summary>
      <returns>Estado del modelo.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Quita la primera aparición de un objeto especificado de la colección.</summary>
      <returns>Es true si <paramref name="item" /> se quitó correctamente de la colección; de lo contrario, es false.Este método también devuelve false si <paramref name="item" /> no se encuentra en la colección.</returns>
      <param name="item">Objeto que se va a quitar de la colección.</param>
      <exception cref="T:System.NotSupportedException">La colección es de solo lectura.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Remove(System.String)">
      <summary>Quita el elemento de la colección mediante la clave especificada.</summary>
      <returns>true si se ha eliminado correctamente el elemento; en caso contrario, false.Este método también devuelve false si <paramref name="key" /> no se encontró en la colección original.</returns>
      <param name="key">Clave del elemento que se va a quitar.</param>
      <exception cref="T:System.NotSupportedException">La colección es de solo lectura.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.SetModel(System.Object)">
      <summary>Establece el modelo de datos que se va a usar para la vista.</summary>
      <param name="value">Modelo de datos que se va a usar para la vista.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>Devuelve un enumerador que puede utilizarse para iterar por la colección.</summary>
      <returns>Enumerador que se puede usar para iterar por la colección.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.TemplateInfo">
      <summary>Obtiene o establece un objeto que encapsula la información sobre el contexto de la plantilla actual.</summary>
      <returns>Un objeto que contiene información sobre la plantilla actual.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.TryGetValue(System.String,System.Object@)">
      <summary>Intenta recuperar el valor que está asociado a la clave especificada.</summary>
      <returns>true si la colección contiene un elemento con la clave especificada; de lo contrario, false.</returns>
      <param name="key">Clave del valor que se va a obtener.</param>
      <param name="value">Cuando este método devuelve el resultado, el valor asociado a la clave especificada, si se encuentra la clave; en caso contrario, el valor predeterminado para el tipo del parámetro <paramref name="value" />.Este parámetro se pasa sin inicializar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> es null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.Values">
      <summary>Obtiene una colección que contiene los valores de este diccionario.</summary>
      <returns>Colección que contiene los valores del objeto que implementa la interfaz <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewDataDictionary`1">
      <summary>Representa un contenedor que se utiliza para pasar datos fuertemente tipados entre un controlador y una vista.</summary>
      <typeparam name="TModel">Tipo del modelo.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary`1.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.ViewDataDictionary`1" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary`1.#ctor(System.Web.Mvc.ViewDataDictionary)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> utilizando el diccionario de datos de vista especificado.</summary>
      <param name="viewDataDictionary">Un diccionario de datos de vista existente que se va a copiar en esta instancia.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary`1.#ctor(`0)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> utilizando el modelo especificado.</summary>
      <param name="model">Modelo de datos que se va a usar para la vista.</param>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary`1.Model">
      <summary>Obtiene o establece el modelo.</summary>
      <returns>Referencia al modelo de datos.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary`1.ModelMetadata">
      <summary>Obtiene o establece información sobre el modelo.</summary>
      <returns>Información sobre el modelo.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary`1.SetModel(System.Object)">
      <summary>Establece el modelo de datos que se va a usar para la vista.</summary>
      <param name="value">Modelo de datos que se va a usar para la vista.</param>
      <exception cref="T:System.InvalidOperationException">Se ha producido un error mientras se estaba estableciendo el modelo.</exception>
    </member>
    <member name="T:System.Web.Mvc.ViewDataInfo">
      <summary>Encapsula la información sobre el contenido de la plantilla actual que se usa para desarrollar las plantillas y sobre las aplicaciones auxiliares HTML que interactúan con las plantillas.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewDataInfo.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.ViewDataInfo" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewDataInfo.#ctor(System.Func{System.Object})">
      <summary>Inicializa una nueva instancia de la clase T:System.Web.Mvc.ViewDataInfo y asocia un delegado para obtener acceso a la información de datos de vista.</summary>
      <param name="valueAccessor">Un delegado que define cómo se obtiene acceso a la información de datos de vista.</param>
    </member>
    <member name="P:System.Web.Mvc.ViewDataInfo.Container">
      <summary>Obtiene o establece el objeto que contiene los valores que va a mostrar la plantilla.</summary>
      <returns>Objeto que contiene los valores que va a mostrar la plantilla.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataInfo.PropertyDescriptor">
      <summary>Obtiene o establece la descripción de la propiedad que va a mostrar la plantilla.</summary>
      <returns>Descripción de la propiedad que va a mostrar la plantilla.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataInfo.Value">
      <summary>Obtiene o establece el valor actual que va a mostrar la plantilla.</summary>
      <returns>Valor actual que va a mostrar la plantilla.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewEngineCollection">
      <summary>Representa una colección de motores de vista disponibles para la aplicación.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.ViewEngineCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.#ctor(System.Collections.Generic.IList{System.Web.Mvc.IViewEngine})">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.ViewEngineCollection" /> mediante la lista especificada de motores de vista.</summary>
      <param name="list">Lista ajustada por la nueva colección.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="list" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.FindPartialView(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Busca la vista parcial especificada mediante el contexto de controlador especificado.</summary>
      <returns>Vista parcial.</returns>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="partialViewName">Nombre de la vista parcial.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="controllerContext" /> es null.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="partialViewName" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.FindView(System.Web.Mvc.ControllerContext,System.String,System.String)">
      <summary>Busca la vista parcial especificada mediante el contexto de controlador y la vista maestra especificadas.</summary>
      <returns>La vista.</returns>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="viewName">Nombre de la vista.</param>
      <param name="masterName">Nombre de la vista maestra.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="controllerContext" /> es null.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="viewName" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.InsertItem(System.Int32,System.Web.Mvc.IViewEngine)">
      <summary>Inserta un elemento en la colección en el índice especificado.</summary>
      <param name="index">Índice de base cero en el que debe insertarse <paramref name="item" />.</param>
      <param name="item">Objeto que se va a insertar. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="index" /> es menor que cero.O bien<paramref name="index" /> es mayor que el número de elementos de la colección.</exception>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="item" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.SetItem(System.Int32,System.Web.Mvc.IViewEngine)">
      <summary>Reemplaza el elemento del índice especificado.</summary>
      <param name="index">Índice de base cero del elemento que se va a reemplazar.</param>
      <param name="item">Nuevo valor para el elemento del índice especificado. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="index" /> es menor que cero.O bien<paramref name="index" /> es mayor que el número de elementos de la colección.</exception>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="item" /> es null.</exception>
    </member>
    <member name="T:System.Web.Mvc.ViewEngineResult">
      <summary>Representa el resultado de buscar un motor de vista.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineResult.#ctor(System.Collections.Generic.IEnumerable{System.String})">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.ViewEngineResult" /> mediante las ubicaciones de búsqueda especificadas.</summary>
      <param name="searchedLocations">Ubicaciones de búsqueda.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="searchedLocations" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineResult.#ctor(System.Web.Mvc.IView,System.Web.Mvc.IViewEngine)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.ViewEngineResult" /> mediante la vista y el motor de vista especificados.</summary>
      <param name="view">La vista.</param>
      <param name="viewEngine">Motor de vista.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="view " /> o <paramref name="viewEngine" /> es null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ViewEngineResult.SearchedLocations">
      <summary>Obtiene o establece las ubicaciones de búsqueda.</summary>
      <returns>Ubicaciones de búsqueda.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewEngineResult.View">
      <summary>Obtiene o establece la vista.</summary>
      <returns>La vista.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewEngineResult.ViewEngine">
      <summary>Obtiene o establece el motor de vista.</summary>
      <returns>Motor de vista.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewEngines">
      <summary>Representa una colección de motores de vista disponibles para la aplicación.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewEngines.Engines">
      <summary>Obtiene los motores de vista.</summary>
      <returns>Motores de vista.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewMasterPage">
      <summary>Representa la información necesaria para compilar una página de vista maestra.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewMasterPage.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.ViewMasterPage" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.Ajax">
      <summary>Obtiene el script AJAX de la página maestra.</summary>
      <returns>Script AJAX de la página maestra.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.Html">
      <summary>Obtiene el HTML de la página maestra.</summary>
      <returns>HTML de la página maestra.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.Model">
      <summary>Obtiene el modelo.</summary>
      <returns>El modelo.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.TempData">
      <summary>Obtiene los datos temporales.</summary>
      <returns>Datos temporales.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.Url">
      <summary>Obtiene la dirección URL.</summary>
      <returns>Dirección URL.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.ViewBag">
      <summary>Obtiene el diccionario de contenedor de vista dinámico.</summary>
      <returns>Diccionario de contenedor de vista dinámico.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.ViewContext">
      <summary>Obtiene el contexto de la vista.</summary>
      <returns>Contexto de la vista.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.ViewData">
      <summary>Obtiene los datos de la vista.</summary>
      <returns>Datos de la vista.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.Writer">
      <summary>Obtiene el sistema de escritura que se usa para representar la página maestra.</summary>
      <returns>Sistema de escritura que se usa para representar la página maestra.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewMasterPage`1">
      <summary>Representa la información necesaria para crear una página de vista maestra fuertemente tipada.</summary>
      <typeparam name="TModel">Tipo del modelo.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.ViewMasterPage`1.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.ViewMasterPage`1" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage`1.Ajax">
      <summary>Obtiene el script AJAX de la página maestra.</summary>
      <returns>Script AJAX de la página maestra.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage`1.Html">
      <summary>Obtiene el HTML de la página maestra.</summary>
      <returns>HTML de la página maestra.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage`1.Model">
      <summary>Obtiene el modelo.</summary>
      <returns>Referencia al modelo de datos.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage`1.ViewData">
      <summary>Obtiene los datos de la vista.</summary>
      <returns>Datos de la vista.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewPage">
      <summary>Representa las propiedades y métodos que se necesitan para representar una vista como una página de formularios Web Forms.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.ViewPage" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.Ajax">
      <summary>Obtiene o establece el objeto <see cref="T:System.Web.Mvc.AjaxHelper" /> que se usa para representar HTML en escenarios Ajax.</summary>
      <returns>Objeto auxiliar AJAX que está asociado a la vista.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.Html">
      <summary>Obtiene o establece el objeto <see cref="T:System.Web.Mvc.HtmlHelper" /> que se usa para representar los elementos HTML.</summary>
      <returns>Objeto auxiliar HTML que está asociado a la vista.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.InitHelpers">
      <summary>Inicializa las propiedades <see cref="P:System.Web.Mvc.ViewPage.Ajax" />, <see cref="P:System.Web.Mvc.ViewPage.Html" /> y <see cref="P:System.Web.Mvc.ViewPage.Url" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.MasterLocation">
      <summary>Obtiene o establece la ruta de acceso de la vista maestra.</summary>
      <returns>Ruta de acceso de la vista maestra.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.Model">
      <summary>Obtiene la propiedad Model del objeto <see cref="T:System.Web.Mvc.ViewDataDictionary" /> asociado.</summary>
      <returns>Propiedad Model del objeto <see cref="T:System.Web.Mvc.ViewDataDictionary" /> asociado.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.OnPreInit(System.EventArgs)">
      <summary>Provoca el evento <see cref="E:System.Web.UI.Page.PreInit" /> al principio de la inicialización de la página.</summary>
      <param name="e">Datos del evento.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.ProcessRequest(System.Web.HttpContext)">
      <summary>Permite el procesamiento de la solicitud HTTP especificada por el marco de ASP.NET MVC.</summary>
      <param name="context">Objeto que encapsula la información específica de HTTP sobre la solicitud HTTP actual.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.Render(System.Web.UI.HtmlTextWriter)">
      <summary>Inicializa el objeto <see cref="T:System.Web.UI.HtmlTextWriter" /> que recibe el contenido de la página que se va a representar.</summary>
      <param name="writer">Objeto que recibe el contenido de la página.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.RenderView(System.Web.Mvc.ViewContext)">
      <summary>Representa la página de vista para la respuesta mediante el contexto de vista especificado.</summary>
      <param name="viewContext">Objeto que encapsula la información necesaria para representar la vista, que incluye el contexto del controlador, el contexto de formulario, los datos temporales y los datos de la vista para la vista asociada.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.SetTextWriter(System.IO.TextWriter)">
      <summary>Establece el escritor de texto que se usa para representar la vista para la respuesta.</summary>
      <param name="textWriter">Sistema de escritura que se usa para representar la vista para la respuesta.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.SetViewData(System.Web.Mvc.ViewDataDictionary)">
      <summary>Establece el diccionario de datos de vista para la vista asociada.</summary>
      <param name="viewData">Un diccionario de datos que se va a pasar a la vista.</param>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.TempData">
      <summary>Obtiene los datos temporales que se van a pasar a la vista.</summary>
      <returns>Datos temporales que se van a pasar a la vista.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.Url">
      <summary>Obtiene o establece la dirección URL de la página representada.</summary>
      <returns>Dirección URL de la página representada.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.ViewBag">
      <summary>Obtiene el contenedor de la vista.</summary>
      <returns>Contenedor de la vista.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.ViewContext">
      <summary>Obtiene o establece la información que se usa para representar la vista.</summary>
      <returns>Información que se usa para representar la vista, que incluye el contexto de formulario, los datos temporales y los datos de la vista asociada.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.ViewData">
      <summary>Obtiene o establece un diccionario que contiene los datos que se van a pasar entre el controlador y la vista.</summary>
      <returns>Un diccionario que contiene los datos que se van a pasar entre el controlador y la vista.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.Writer">
      <summary>Obtiene el escritor de texto que se usa para representar la vista para la respuesta.</summary>
      <returns>Escritor de texto que se usa para representar la vista para la respuesta.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewPage`1">
      <summary>Representa la información necesaria para presentar una vista fuertemente tipada como página de formularios Web Forms.</summary>
      <typeparam name="TModel">Tipo del modelo.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.ViewPage`1.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.ViewPage`1" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewPage`1.Ajax">
      <summary>Obtiene o establece el objeto <see cref="T:System.Web.Mvc.AjaxHelper`1" /> que permite presentar HTML en escenarios Ajax.</summary>
      <returns>Objeto auxiliar AJAX que está asociado a la vista.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage`1.Html">
      <summary>Obtiene o establece el objeto <see cref="T:System.Web.Mvc.HtmlHelper" /> que permite presentar los elementos.</summary>
      <returns>Objeto auxiliar HTML que está asociado a la vista.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewPage`1.InitHelpers">
      <summary>Crea instancias e inicializa las propiedades <see cref="P:System.Web.Mvc.ViewPage`1.Ajax" /> y <see cref="P:System.Web.Mvc.ViewPage`1.Html" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewPage`1.Model">
      <summary>Obtiene la propiedad <see cref="P:System.Web.Mvc.ViewDataDictionary`1.Model" /> del objeto <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> asociado.</summary>
      <returns>Referencia al modelo de datos.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewPage`1.SetViewData(System.Web.Mvc.ViewDataDictionary)">
      <summary>Establece el diccionario de datos de vista para la vista asociada.</summary>
      <param name="viewData">Un diccionario de datos que se va a pasar a la vista.</param>
    </member>
    <member name="P:System.Web.Mvc.ViewPage`1.ViewData">
      <summary>Obtiene o establece un diccionario que contiene los datos que se van a pasar entre el controlador y la vista.</summary>
      <returns>Un diccionario que contiene los datos que se van a pasar entre el controlador y la vista.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewResult">
      <summary>Representa una clase que se utiliza para representar una vista utilizando una instancia de <see cref="T:System.Web.Mvc.IView" /> devuelta por un objeto <see cref="T:System.Web.Mvc.IViewEngine" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewResult.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.ViewResult" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewResult.FindView(System.Web.Mvc.ControllerContext)">
      <summary>Busca en los motores de vista registrados y devuelve el objeto que se utiliza para representar la vista.</summary>
      <returns>Objeto que se utiliza para representar la vista.</returns>
      <param name="context">Contexto del controlador.</param>
      <exception cref="T:System.InvalidOperationException">Se ha producido un error mientras el método estaba buscando la vista.</exception>
    </member>
    <member name="P:System.Web.Mvc.ViewResult.MasterName">
      <summary>Obtiene el nombre de la vista maestra (tal como una plantilla o página maestra) que se va a utilizar cuando se represente la vista.</summary>
      <returns>Nombre de la vista maestra.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewResultBase">
      <summary>Representa una clase base que se usa para proporcionar el modelo a la vista y, a continuación, representar la vista para la respuesta.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewResultBase.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.ViewResultBase" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewResultBase.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Cuando lo llama el invocador de acción, representa la vista para la respuesta.</summary>
      <param name="context">Contexto en el que se ejecuta el resultado.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="context" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewResultBase.FindView(System.Web.Mvc.ControllerContext)">
      <summary>Devuelve el objeto <see cref="T:System.Web.Mvc.ViewEngineResult" /> que se usa para representar la vista.</summary>
      <returns>Motor de vista.</returns>
      <param name="context">Contexto.</param>
    </member>
    <member name="P:System.Web.Mvc.ViewResultBase.Model">
      <summary>Obtiene el modelo de datos de la vista.</summary>
      <returns>Modelo de datos de la vista.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewResultBase.TempData">
      <summary>Obtiene o establece el objeto <see cref="T:System.Web.Mvc.TempDataDictionary" /> para este resultado.</summary>
      <returns>Datos temporales.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewResultBase.View">
      <summary>Obtiene o establece el objeto <see cref="T:System.Web.Mvc.IView" /> que se representa para la respuesta.</summary>
      <returns>La vista.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewResultBase.ViewBag">
      <summary>Obtiene el contenedor de la vista.</summary>
      <returns>Contenedor de la vista.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewResultBase.ViewData">
      <summary>Obtiene o establece el objeto <see cref="T:System.Web.Mvc.ViewDataDictionary" /> de datos de vista para este resultado.</summary>
      <returns>Datos de la vista.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewResultBase.ViewEngineCollection">
      <summary>Obtiene o establece la colección de motores de vista asociados a este resultado.</summary>
      <returns>Colección de motores de vista.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewResultBase.ViewName">
      <summary>Obtiene o establece el nombre de la vista que se va a representar.</summary>
      <returns>Nombre de la vista.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewStartPage">
      <summary>Proporciona una clase abstracta que se puede usar para implementar una página de inicio de vista (maestra).</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewStartPage.#ctor">
      <summary>Cuando se implementa en una clase derivada, inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.ViewStartPage" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewStartPage.Html">
      <summary>Cuando se implementa en una clase derivada, obtiene el formato HTML para la página de inicio de vista.</summary>
      <returns>Formato HTML para la página de inicio de vista.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewStartPage.Url">
      <summary>Cuando se implementa en una clase derivada, obtiene la dirección URL de la página de inicio de la vista.</summary>
      <returns>Dirección URL de la página de inicio de la vista.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewStartPage.ViewContext">
      <summary>Cuando se implementa en una clase derivada, obtiene el contexto de la vista para la página de inicio de la vista.</summary>
      <returns>Contexto de la vista para la página de inicio de la vista.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewTemplateUserControl">
      <summary>Proporciona un contenedor para los objetos <see cref="T:System.Web.Mvc.TemplateInfo" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewTemplateUserControl.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.ViewTemplateUserControl" />.</summary>
    </member>
    <member name="T:System.Web.Mvc.ViewTemplateUserControl`1">
      <summary>Proporciona un contenedor para los objetos <see cref="T:System.Web.Mvc.TemplateInfo" />.</summary>
      <typeparam name="TModel">Tipo del modelo.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.ViewTemplateUserControl`1.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.ViewTemplateUserControl`1" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewTemplateUserControl`1.FormattedModelValue">
      <summary>Obtiene el valor con formato.</summary>
      <returns>Valor con formato.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewType">
      <summary>Representa el tipo de una vista.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewType.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.ViewType" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewType.TypeName">
      <summary>Obtiene o establece el nombre del tipo.</summary>
      <returns>Nombre del tipo.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewUserControl">
      <summary>Representa la información que se necesita para compilar un control de usuario.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewUserControl.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.ViewUserControl" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.Ajax">
      <summary>Obtiene el script AJAX para la vista.</summary>
      <returns>Script AJAX para la vista.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewUserControl.EnsureViewData">
      <summary>Garantiza que los datos de la vista se agregan al objeto <see cref="T:System.Web.Mvc.ViewDataDictionary" /> del control de usuario si los datos de la vista existen.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.Html">
      <summary>Obtiene el HTML de la vista.</summary>
      <returns>HTML de la vista.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.Model">
      <summary>Obtiene el modelo.</summary>
      <returns>El modelo.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewUserControl.RenderView(System.Web.Mvc.ViewContext)">
      <summary>Representa la vista mediante el contexto de vista especificado.</summary>
      <param name="viewContext">Contexto de la vista.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewUserControl.SetTextWriter(System.IO.TextWriter)">
      <summary>Establece el escritor de texto que se usa para representar la vista para la respuesta.</summary>
      <param name="textWriter">Sistema de escritura que se usa para representar la vista para la respuesta.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewUserControl.SetViewData(System.Web.Mvc.ViewDataDictionary)">
      <summary>Establece el diccionario de datos de la vista mediante los datos de vista especificados.</summary>
      <param name="viewData">Datos de la vista.</param>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.TempData">
      <summary>Obtiene el diccionario de datos temporales.</summary>
      <returns>Diccionario de datos temporales.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.Url">
      <summary>Obtiene la dirección URL de la vista.</summary>
      <returns>Dirección URL de la vista.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.ViewBag">
      <summary>Obtiene el contenedor de la vista.</summary>
      <returns>Contenedor de la vista.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.ViewContext">
      <summary>Obtiene o establece el contexto de la vista.</summary>
      <returns>Contexto de la vista.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.ViewData">
      <summary>Obtiene o establece el diccionario de datos de la vista.</summary>
      <returns>Diccionario de datos de la vista.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.ViewDataKey">
      <summary>Obtiene o establece la clave de datos de la vista.</summary>
      <returns>Clave de datos de la vista.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.Writer">
      <summary>Obtiene el sistema de escritura que se usa para representar la vista para la respuesta.</summary>
      <returns>Sistema de escritura que se usa para representar la vista para la respuesta.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewUserControl`1">
      <summary>Representa la información necesaria para crear un control de usuario fuertemente tipado.</summary>
      <typeparam name="TModel">Tipo del modelo.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.ViewUserControl`1.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.ViewUserControl`1" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl`1.Ajax">
      <summary>Obtiene el script AJAX para la vista.</summary>
      <returns>Script AJAX para la vista.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl`1.Html">
      <summary>Obtiene el HTML de la vista.</summary>
      <returns>HTML de la vista.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl`1.Model">
      <summary>Obtiene el modelo.</summary>
      <returns>Referencia al modelo de datos.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewUserControl`1.SetViewData(System.Web.Mvc.ViewDataDictionary)">
      <summary>Establece los datos de vista para la vista.</summary>
      <param name="viewData">Datos de la vista.</param>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl`1.ViewData">
      <summary>Obtiene o establece los datos de la vista.</summary>
      <returns>Datos de la vista.</returns>
    </member>
    <member name="T:System.Web.Mvc.VirtualPathProviderViewEngine">
      <summary>Representa una implementación de clase base abstracta de la interfaz <see cref="T:System.Web.Mvc.IViewEngine" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.VirtualPathProviderViewEngine.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.VirtualPathProviderViewEngine" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.AreaMasterLocationFormats">
      <summary>Obtiene o establece los formatos de ubicación maestros habilitados para el área.</summary>
      <returns>Formatos de ubicación maestros habilitados para el área.</returns>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.AreaPartialViewLocationFormats">
      <summary>Obtiene o establece los formatos de ubicación de vista parcial habilitados para el área.</summary>
      <returns>Formatos de ubicación de vista parcial habilitados para el área.</returns>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.AreaViewLocationFormats">
      <summary>Obtiene o establece los formatos de ubicación de vista habilitados para el área.</summary>
      <returns>Formatos de ubicación de vista habilitados para el área.</returns>
    </member>
    <member name="M:System.Web.Mvc.VirtualPathProviderViewEngine.CreatePartialView(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Crea la vista parcial especificada mediante el contexto de controlador especificado.</summary>
      <returns>Referencia a la vista parcial.</returns>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="partialPath">Ruta de acceso parcial para la nueva vista parcial.</param>
    </member>
    <member name="M:System.Web.Mvc.VirtualPathProviderViewEngine.CreateView(System.Web.Mvc.ControllerContext,System.String,System.String)">
      <summary>Crea la vista especificada mediante el contexto del controlador, la ruta de acceso de la vista y la ruta de acceso de la vista maestra.</summary>
      <returns>Referencia a la vista.</returns>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="viewPath">Ruta de acceso de la vista.</param>
      <param name="masterPath">Ruta de acceso de la vista maestra.</param>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.DisplayModeProvider">
      <summary>Obtiene o establece el proveedor del modo de presentación.</summary>
      <returns>Proveedor del modo de presentación.</returns>
    </member>
    <member name="M:System.Web.Mvc.VirtualPathProviderViewEngine.FileExists(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Devuelve un valor que indica si el archivo está en la ruta de acceso especificada mediante el contexto del controlador especificado.</summary>
      <returns>Es true si el archivo está en la ruta especificada; de lo contrario, es false.</returns>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="virtualPath">Ruta de acceso virtual.</param>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.FileExtensions">
      <summary>Obtiene o establece las extensiones de nombre de archivo que se usan para localizar una vista.</summary>
      <returns>Extensiones de nombre de archivo que se usan para localizar una vista.</returns>
    </member>
    <member name="M:System.Web.Mvc.VirtualPathProviderViewEngine.FindPartialView(System.Web.Mvc.ControllerContext,System.String,System.Boolean)">
      <summary>Busca la vista parcial especificada mediante el contexto de controlador especificado.</summary>
      <returns>Vista parcial.</returns>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="partialViewName">Nombre de la vista parcial.</param>
      <param name="useCache">Es true para usar la vista parcial almacenada en caché.</param>
      <exception cref="T:System.ArgumentNullException">El valor del parámetro <paramref name="controllerContext" /> es null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="partialViewName" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.Mvc.VirtualPathProviderViewEngine.FindView(System.Web.Mvc.ControllerContext,System.String,System.String,System.Boolean)">
      <summary>Busca la vista parcial especificada mediante el contexto de controlador y el nombre de vista maestra especificados.</summary>
      <returns>Vista de página.</returns>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="viewName">Nombre de la vista.</param>
      <param name="masterName">Nombre de la vista maestra.</param>
      <param name="useCache">Es true para usar la vista almacenada en caché.</param>
      <exception cref="T:System.ArgumentNullException">El valor del parámetro <paramref name="controllerContext" /> es null (Nothing en Visual Basic).</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="viewName" /> es null o está vacío.</exception>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.MasterLocationFormats">
      <summary>Obtiene o establece los formatos de ubicación maestros.</summary>
      <returns>Formatos de maestros.</returns>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.PartialViewLocationFormats">
      <summary>Obtiene o establece los formatos de ubicación de vista parcial.</summary>
      <returns>Formatos de ubicación de vista parcial.</returns>
    </member>
    <member name="M:System.Web.Mvc.VirtualPathProviderViewEngine.ReleaseView(System.Web.Mvc.ControllerContext,System.Web.Mvc.IView)">
      <summary>Libera la vista especificada mediante el contexto de controlador especificado.</summary>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="view">Vista que se va a liberar.</param>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.ViewLocationCache">
      <summary>Obtiene o establece la memoria caché de ubicación de vista.</summary>
      <returns>Memoria caché de ubicación de vista.</returns>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.ViewLocationFormats">
      <summary>Obtiene o establece los formatos de ubicación de vista.</summary>
      <returns>Formatos de ubicación de vista.</returns>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.VirtualPathProvider">
      <summary>Obtiene o establece el proveedor de la ruta de acceso virtual.</summary>
      <returns>Proveedor de la ruta de acceso virtual.</returns>
    </member>
    <member name="T:System.Web.Mvc.WebFormView">
      <summary>Representa la información que se necesita para compilar una página de formularios Web Forms en ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.WebFormView.#ctor(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.Web.Mvc.WebFormView" /> mediante el contexto del controlador y la ruta de acceso de la vista.</summary>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="viewPath">Ruta de acceso a la vista.</param>
    </member>
    <member name="M:System.Web.Mvc.WebFormView.#ctor(System.Web.Mvc.ControllerContext,System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.WebFormView" /> mediante el contexto de controlador, la ruta de acceso de la vista y la ruta de acceso a la página maestra.</summary>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="viewPath">Ruta de acceso a la vista.</param>
      <param name="masterPath">Ruta de acceso a la página maestra.</param>
    </member>
    <member name="M:System.Web.Mvc.WebFormView.#ctor(System.Web.Mvc.ControllerContext,System.String,System.String,System.Web.Mvc.IViewPageActivator)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.WebFormView" /> mediante el contexto de controlador, la ruta de acceso de la vista y la ruta de acceso a la página maestra, y una instancia de <see cref="T:System.Web.Mvc.IViewPageActivator" />.</summary>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="viewPath">Ruta de acceso a la vista.</param>
      <param name="masterPath">Ruta de acceso a la página maestra.</param>
      <param name="viewPageActivator">Instancia de la interfaz del activador de página de vista.</param>
    </member>
    <member name="P:System.Web.Mvc.WebFormView.MasterPath">
      <summary>Obtiene o establece la ruta de acceso maestra.</summary>
      <returns>Ruta de acceso maestra.</returns>
    </member>
    <member name="M:System.Web.Mvc.WebFormView.RenderView(System.Web.Mvc.ViewContext,System.IO.TextWriter,System.Object)">
      <summary>Representa la vista para la respuesta.</summary>
      <param name="viewContext">Objeto que encapsula la información necesaria para representar la vista, que incluye el contexto del controlador, el contexto de formulario, los datos temporales y los datos de la vista para la vista asociada.</param>
      <param name="writer">Objeto de escritor de texto que se usa para escribir la salida HTML.</param>
      <param name="instance">Instancia de la página de vista.</param>
    </member>
    <member name="T:System.Web.Mvc.WebFormViewEngine">
      <summary>Representa un motor de vista que se usa para representar una página de formularios Web Forms para la respuesta.</summary>
    </member>
    <member name="M:System.Web.Mvc.WebFormViewEngine.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.WebFormViewEngine" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.WebFormViewEngine.#ctor(System.Web.Mvc.IViewPageActivator)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.WebFormViewEngine" /> mediante el activador de página de vista especificado.</summary>
      <param name="viewPageActivator">Instancia de una clase que implementa la interfaz <see cref="T:System.Web.Mvc.IViewPageActivator" />.</param>
    </member>
    <member name="M:System.Web.Mvc.WebFormViewEngine.CreatePartialView(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Crea la vista parcial especificada mediante el contexto de controlador especificado.</summary>
      <returns>Vista parcial.</returns>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="partialPath">Ruta de acceso parcial.</param>
    </member>
    <member name="M:System.Web.Mvc.WebFormViewEngine.CreateView(System.Web.Mvc.ControllerContext,System.String,System.String)">
      <summary>Crea la vista parcial especificada mediante el contexto de controlador y las rutas de acceso de la vista y la vista maestra.</summary>
      <returns>La vista.</returns>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="viewPath">Ruta de acceso a la vista.</param>
      <param name="masterPath">La ruta de acceso de la vista maestra.</param>
    </member>
    <member name="T:System.Web.Mvc.WebViewPage">
      <summary>Representa las propiedades y métodos que se necesitan para representar una vista que usa la sintaxis de ASP.NET Razor.</summary>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.WebViewPage" />. </summary>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.Ajax">
      <summary>Obtiene o establece el objeto <see cref="T:System.Web.Mvc.AjaxHelper" /> que se usa para representar HTML mediante Ajax. </summary>
      <returns>Objeto <see cref="T:System.Web.Mvc.AjaxHelper" /> que se usa para representar HTML mediante Ajax.</returns>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage.ConfigurePage(System.Web.WebPages.WebPageBase)">
      <summary>Establece el contexto de vista y los datos de vista para la página.</summary>
      <param name="parentPage">Página primaria.</param>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.Context">
      <summary>Obtiene el objeto <see cref="T:System.Web.HttpContext" /> asociado a la página.</summary>
      <returns>Objeto <see cref="T:System.Web.HttpContext" /> asociado a la página.</returns>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage.ExecutePageHierarchy">
      <summary>Ejecuta la jerarquía de página para la canalización de ejecución de ASP.NET Razor.</summary>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.Html">
      <summary>Obtiene o establece el objeto <see cref="T:System.Web.Mvc.HtmlHelper" /> que se usa para representar los elementos HTML.</summary>
      <returns>Objeto <see cref="T:System.Web.Mvc.HtmlHelper" /> que se usa para representar los elementos HTML.</returns>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage.InitHelpers">
      <summary>Inicializa las clases <see cref="T:System.Web.Mvc.AjaxHelper" />, <see cref="T:System.Web.Mvc.HtmlHelper" /> y <see cref="T:System.Web.Mvc.UrlHelper" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.Model">
      <summary>Obtiene la propiedad Model del objeto <see cref="T:System.Web.Mvc.ViewDataDictionary" /> asociado.</summary>
      <returns>Propiedad Model del objeto <see cref="T:System.Web.Mvc.ViewDataDictionary" /> asociado.</returns>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage.SetViewData(System.Web.Mvc.ViewDataDictionary)">
      <summary>Establece los datos de vista.</summary>
      <param name="viewData">Datos de la vista.</param>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.TempData">
      <summary>Obtiene los datos temporales que se van a pasar a la vista.</summary>
      <returns>Datos temporales que se van a pasar a la vista.</returns>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.Url">
      <summary>Obtiene o establece la dirección URL de la página representada.</summary>
      <returns>Dirección URL de la página representada.</returns>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.ViewBag">
      <summary>Obtiene el contenedor de la vista.</summary>
      <returns>Contenedor de la vista.</returns>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.ViewContext">
      <summary>Obtiene o establece la información que se usa para representar la vista.</summary>
      <returns>Información que se usa para representar la vista, que incluye el contexto de formulario, los datos temporales y los datos de la vista asociada.</returns>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.ViewData">
      <summary>Obtiene o establece un diccionario que contiene los datos que se van a pasar entre el controlador y la vista.</summary>
      <returns>Un diccionario que contiene los datos que se van a pasar entre el controlador y la vista.</returns>
    </member>
    <member name="T:System.Web.Mvc.WebViewPage`1">
      <summary>Representa las propiedades y métodos que se necesitan para representar una vista que usa la sintaxis de ASP.NET Razor.</summary>
      <typeparam name="TModel">Tipo de modelo de datos de vista.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage`1.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.WebViewPage`1" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage`1.Ajax">
      <summary>Obtiene o establece el objeto <see cref="T:System.Web.Mvc.AjaxHelper" /> que se usa para presentar HTML mediante Ajax.</summary>
      <returns>Objeto <see cref="T:System.Web.Mvc.AjaxHelper" /> que se usa para presentar el formato HTML mediante Ajax.</returns>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage`1.Html">
      <summary>Obtiene o establece el objeto <see cref="T:System.Web.Mvc.HtmlHelper" /> que se usa para representar los elementos HTML.</summary>
      <returns>Objeto <see cref="T:System.Web.Mvc.HtmlHelper" /> que se usa para representar los elementos HTML.</returns>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage`1.InitHelpers">
      <summary>Inicializa las clases <see cref="T:System.Web.Mvc.AjaxHelper" />, <see cref="T:System.Web.Mvc.HtmlHelper" /> y <see cref="T:System.Web.Mvc.UrlHelper" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage`1.Model">
      <summary>Obtiene la propiedad Model del objeto <see cref="T:System.Web.Mvc.ViewDataDictionary" /> asociado.</summary>
      <returns>Propiedad Model del objeto <see cref="T:System.Web.Mvc.ViewDataDictionary" /> asociado.</returns>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage`1.SetViewData(System.Web.Mvc.ViewDataDictionary)">
      <summary>Establece los datos de vista.</summary>
      <param name="viewData">Datos de la vista.</param>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage`1.ViewData">
      <summary>Obtiene o establece un diccionario que contiene los datos que se van a pasar entre el controlador y la vista.</summary>
      <returns>Un diccionario que contiene los datos que se van a pasar entre el controlador y la vista.</returns>
    </member>
    <member name="T:System.Web.Mvc.Ajax.AjaxExtensions">
      <summary>Representa el soporte para AJAX de ASP.NET dentro de una aplicación ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Devuelve un elemento delimitador que contiene la dirección URL para el método de acción especificado; al hacer clic en el vínculo de acción, se invoca asincrónicamente al método de acción mediante JavaScript.</summary>
      <returns>Un elemento delimitador.</returns>
      <param name="ajaxHelper">Objeto auxiliar AJAX.</param>
      <param name="linkText">Texto interno del elemento delimitador.</param>
      <param name="actionName">Nombre del método de la acción.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.Los parámetros se recuperan mediante reflexión examinando las propiedades del objeto.Este objeto suele crearse utilizando la sintaxis del inicializador de objeto.</param>
      <param name="ajaxOptions">Un objeto que proporciona las opciones para la solicitud asincrónica.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="linkText" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Devuelve un elemento delimitador que contiene la dirección URL para el método de acción especificado; al hacer clic en el vínculo de acción, se invoca asincrónicamente al método de acción mediante JavaScript.</summary>
      <returns>Un elemento delimitador.</returns>
      <param name="ajaxHelper">Objeto auxiliar AJAX.</param>
      <param name="linkText">Texto interno del elemento delimitador.</param>
      <param name="actionName">Nombre del método de la acción.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.Los parámetros se recuperan mediante reflexión examinando las propiedades del objeto.Este objeto suele crearse utilizando la sintaxis del inicializador de objeto.</param>
      <param name="ajaxOptions">Un objeto que proporciona las opciones para la solicitud asincrónica.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="linkText" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Devuelve un elemento delimitador que contiene la dirección URL para el método de acción especificado; al hacer clic en el vínculo de acción, se invoca asincrónicamente al método de acción mediante JavaScript.</summary>
      <returns>Un elemento delimitador.</returns>
      <param name="ajaxHelper">Objeto auxiliar AJAX.</param>
      <param name="linkText">Texto interno del elemento delimitador.</param>
      <param name="actionName">Nombre del método de la acción.</param>
      <param name="controllerName">Nombre del controlador.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.Los parámetros se recuperan mediante reflexión examinando las propiedades del objeto.Este objeto suele crearse utilizando la sintaxis del inicializador de objeto.</param>
      <param name="ajaxOptions">Un objeto que proporciona las opciones para la solicitud asincrónica.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="linkText" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Devuelve un elemento delimitador que contiene la dirección URL para el método de acción especificado; al hacer clic en el vínculo de acción, se invoca asincrónicamente al método de acción mediante JavaScript.</summary>
      <returns>Un elemento delimitador.</returns>
      <param name="ajaxHelper">Objeto auxiliar AJAX.</param>
      <param name="linkText">Texto interno del elemento delimitador.</param>
      <param name="actionName">Nombre del método de la acción.</param>
      <param name="controllerName">Nombre del controlador.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.Los parámetros se recuperan mediante reflexión examinando las propiedades del objeto.Este objeto suele crearse utilizando la sintaxis del inicializador de objeto.</param>
      <param name="ajaxOptions">Un objeto que proporciona las opciones para la solicitud asincrónica.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="linkText" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.String,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Devuelve un elemento delimitador que contiene la dirección URL para el método de acción especificado; al hacer clic en el vínculo de acción, se invoca asincrónicamente al método de acción mediante JavaScript.</summary>
      <returns>Un elemento delimitador.</returns>
      <param name="ajaxHelper">Objeto auxiliar AJAX.</param>
      <param name="linkText">Texto interno del elemento delimitador.</param>
      <param name="actionName">Nombre del método de la acción.</param>
      <param name="controllerName">Nombre del controlador.</param>
      <param name="protocol">Protocolo de la dirección URL, como "http" o "https".</param>
      <param name="hostName">Nombre de host para la dirección URL.</param>
      <param name="fragment">Nombre del fragmento de la dirección URL (nombre del delimitador).</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.Los parámetros se recuperan mediante reflexión examinando las propiedades del objeto.Este objeto suele crearse utilizando la sintaxis del inicializador de objeto.</param>
      <param name="ajaxOptions">Un objeto que proporciona las opciones para la solicitud asincrónica.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="linkText" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve un elemento delimitador que contiene la dirección URL para el método de acción especificado; al hacer clic en el vínculo de acción, se invoca asincrónicamente al método de acción mediante JavaScript.</summary>
      <returns>Un elemento delimitador.</returns>
      <param name="ajaxHelper">Objeto auxiliar AJAX.</param>
      <param name="linkText">Texto interno del elemento delimitador.</param>
      <param name="actionName">Nombre del método de la acción.</param>
      <param name="controllerName">Nombre del controlador.</param>
      <param name="protocol">Protocolo de la dirección URL, como "http" o "https".</param>
      <param name="hostName">Nombre de host para la dirección URL.</param>
      <param name="fragment">Nombre del fragmento de la dirección URL (nombre del delimitador).</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.</param>
      <param name="ajaxOptions">Un objeto que proporciona las opciones para la solicitud asincrónica.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="linkText" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Devuelve un elemento delimitador que contiene la dirección URL para el método de acción especificado; al hacer clic en el vínculo de acción, se invoca asincrónicamente al método de acción mediante JavaScript.</summary>
      <returns>Un elemento delimitador.</returns>
      <param name="ajaxHelper">Objeto auxiliar AJAX.</param>
      <param name="linkText">Texto interno del elemento delimitador.</param>
      <param name="actionName">Nombre del método de la acción.</param>
      <param name="controllerName">Nombre del controlador.</param>
      <param name="ajaxOptions">Un objeto que proporciona las opciones para la solicitud asincrónica.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="linkText" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Devuelve un elemento delimitador que contiene la dirección URL para el método de acción especificado; al hacer clic en el vínculo de acción, se invoca asincrónicamente al método de acción mediante JavaScript.</summary>
      <returns>Un elemento delimitador.</returns>
      <param name="ajaxHelper">Objeto auxiliar AJAX.</param>
      <param name="linkText">Texto interno del elemento delimitador.</param>
      <param name="actionName">Nombre del método de la acción.</param>
      <param name="controllerName">Nombre del controlador.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.</param>
      <param name="ajaxOptions">Un objeto que proporciona las opciones para la solicitud asincrónica.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="linkText" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve un elemento delimitador que contiene la dirección URL para el método de acción especificado; al hacer clic en el vínculo de acción, se invoca asincrónicamente al método de acción mediante JavaScript.</summary>
      <returns>Un elemento delimitador.</returns>
      <param name="ajaxHelper">Objeto auxiliar AJAX.</param>
      <param name="linkText">Texto interno del elemento delimitador.</param>
      <param name="actionName">Nombre del método de la acción.</param>
      <param name="controllerName">Nombre del controlador.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.</param>
      <param name="ajaxOptions">Un objeto que proporciona las opciones para la solicitud asincrónica.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="linkText" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Devuelve un elemento delimitador que contiene la dirección URL para el método de acción especificado; al hacer clic en el vínculo de acción, se invoca asincrónicamente al método de acción mediante JavaScript.</summary>
      <returns>Un elemento delimitador.</returns>
      <param name="ajaxHelper">Objeto auxiliar AJAX.</param>
      <param name="linkText">Texto interno del elemento delimitador.</param>
      <param name="actionName">Nombre del método de la acción.</param>
      <param name="ajaxOptions">Un objeto que proporciona las opciones para la solicitud asincrónica.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="linkText" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Devuelve un elemento delimitador que contiene la dirección URL para el método de acción especificado; al hacer clic en el vínculo de acción, se invoca asincrónicamente al método de acción mediante JavaScript.</summary>
      <returns>Un elemento delimitador.</returns>
      <param name="ajaxHelper">Objeto auxiliar AJAX.</param>
      <param name="linkText">Texto interno del elemento delimitador.</param>
      <param name="actionName">Nombre del método de la acción.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.</param>
      <param name="ajaxOptions">Un objeto que proporciona las opciones para la solicitud asincrónica.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="linkText" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve un elemento delimitador que contiene la dirección URL para el método de acción especificado; al hacer clic en el vínculo de acción, se invoca asincrónicamente al método de acción mediante JavaScript.</summary>
      <returns>Un elemento delimitador.</returns>
      <param name="ajaxHelper">Objeto auxiliar AJAX.</param>
      <param name="linkText">Texto interno del elemento delimitador.</param>
      <param name="actionName">Nombre del método de la acción.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.</param>
      <param name="ajaxOptions">Un objeto que proporciona las opciones para la solicitud asincrónica.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="linkText" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Escribe una etiqueta de apertura &lt;form&gt; para la respuesta.</summary>
      <returns>Etiqueta de apertura &lt;form&gt;.</returns>
      <param name="ajaxHelper">Objeto auxiliar AJAX.</param>
      <param name="actionName">Nombre del método de acción que controlará la solicitud.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.Los parámetros se recuperan mediante reflexión examinando las propiedades del objeto.Este objeto suele crearse utilizando la sintaxis del inicializador de objeto.</param>
      <param name="ajaxOptions">Un objeto que proporciona las opciones para la solicitud asincrónica.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Escribe una etiqueta de apertura &lt;form&gt; para la respuesta.</summary>
      <returns>Etiqueta de apertura &lt;form&gt;.</returns>
      <param name="ajaxHelper">Objeto auxiliar AJAX.</param>
      <param name="actionName">Nombre del método de acción que controlará la solicitud.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.Los parámetros se recuperan mediante reflexión examinando las propiedades del objeto.Este objeto suele crearse utilizando la sintaxis del inicializador de objeto.</param>
      <param name="ajaxOptions">Un objeto que proporciona las opciones para la solicitud asincrónica.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Escribe una etiqueta de apertura &lt;form&gt; para la respuesta.</summary>
      <returns>Etiqueta de apertura &lt;form&gt;.</returns>
      <param name="ajaxHelper">Objeto auxiliar AJAX.</param>
      <param name="actionName">Nombre del método de acción que controlará la solicitud.</param>
      <param name="controllerName">Nombre del controlador.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.Los parámetros se recuperan mediante reflexión examinando las propiedades del objeto.Este objeto suele crearse utilizando la sintaxis del inicializador de objeto.</param>
      <param name="ajaxOptions">Un objeto que proporciona las opciones para la solicitud asincrónica.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Escribe una etiqueta de apertura &lt;form&gt; para la respuesta.</summary>
      <returns>Etiqueta de apertura &lt;form&gt;.</returns>
      <param name="ajaxHelper">Objeto auxiliar AJAX.</param>
      <param name="actionName">Nombre del método de acción que controlará la solicitud.</param>
      <param name="controllerName">Nombre del controlador.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.Los parámetros se recuperan mediante reflexión examinando las propiedades del objeto.Este objeto suele crearse utilizando la sintaxis del inicializador de objeto.</param>
      <param name="ajaxOptions">Un objeto que proporciona las opciones para la solicitud asincrónica.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Escribe una etiqueta de apertura &lt;form&gt; para la respuesta.</summary>
      <returns>Etiqueta de apertura &lt;form&gt;.</returns>
      <param name="ajaxHelper">Objeto auxiliar AJAX.</param>
      <param name="actionName">Nombre del método de acción que controlará la solicitud.</param>
      <param name="controllerName">Nombre del controlador.</param>
      <param name="ajaxOptions">Un objeto que proporciona las opciones para la solicitud asincrónica.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Escribe una etiqueta de apertura &lt;form&gt; para la respuesta.</summary>
      <returns>Etiqueta de apertura &lt;form&gt;.</returns>
      <param name="ajaxHelper">Objeto auxiliar AJAX.</param>
      <param name="actionName">Nombre del método de acción que controlará la solicitud.</param>
      <param name="controllerName">Nombre del controlador.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.</param>
      <param name="ajaxOptions">Un objeto que proporciona las opciones para la solicitud asincrónica.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Escribe una etiqueta de apertura &lt;form&gt; para la respuesta.</summary>
      <returns>Etiqueta de apertura &lt;form&gt;.</returns>
      <param name="ajaxHelper">Objeto auxiliar AJAX.</param>
      <param name="actionName">Nombre del método de acción que controlará la solicitud.</param>
      <param name="controllerName">Nombre del controlador.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.</param>
      <param name="ajaxOptions">Un objeto que proporciona las opciones para la solicitud asincrónica.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Escribe una etiqueta de apertura &lt;form&gt; para la respuesta.</summary>
      <returns>Etiqueta de apertura &lt;form&gt;.</returns>
      <param name="ajaxHelper">Objeto auxiliar AJAX.</param>
      <param name="actionName">Nombre del método de acción que controlará la solicitud.</param>
      <param name="ajaxOptions">Un objeto que proporciona las opciones para la solicitud asincrónica.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Escribe una etiqueta de apertura &lt;form&gt; para la respuesta.</summary>
      <returns>Etiqueta de apertura &lt;form&gt;.</returns>
      <param name="ajaxHelper">Objeto auxiliar AJAX.</param>
      <param name="actionName">Nombre del método de acción que controlará la solicitud.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.</param>
      <param name="ajaxOptions">Un objeto que proporciona las opciones para la solicitud asincrónica.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Escribe una etiqueta de apertura &lt;form&gt; para la respuesta. </summary>
      <returns>Etiqueta de apertura &lt;form&gt;.</returns>
      <param name="ajaxHelper">Objeto auxiliar AJAX.</param>
      <param name="actionName">Nombre del método de acción que controlará la solicitud.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.</param>
      <param name="ajaxOptions">Un objeto que proporciona las opciones para la solicitud asincrónica.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Escribe una etiqueta de apertura &lt;form&gt; para la respuesta.</summary>
      <returns>Etiqueta de apertura &lt;form&gt;.</returns>
      <param name="ajaxHelper">Objeto auxiliar AJAX.</param>
      <param name="ajaxOptions">Un objeto que proporciona las opciones para la solicitud asincrónica.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginRouteForm(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Escribe una etiqueta de apertura &lt;form&gt; para la respuesta usando la información de enrutamiento especificada.</summary>
      <returns>Etiqueta de apertura &lt;form&gt;.</returns>
      <param name="ajaxHelper">Objeto auxiliar AJAX.</param>
      <param name="routeName">Nombre de la ruta que se usa para obtener la dirección URL de envío de formulario.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.Los parámetros se recuperan mediante reflexión examinando las propiedades del objeto.Este objeto suele crearse utilizando la sintaxis del inicializador de objeto.</param>
      <param name="ajaxOptions">Un objeto que proporciona las opciones para la solicitud asincrónica.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginRouteForm(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Escribe una etiqueta de apertura &lt;form&gt; para la respuesta usando la información de enrutamiento especificada.</summary>
      <returns>Etiqueta de apertura &lt;form&gt;.</returns>
      <param name="ajaxHelper">Objeto auxiliar AJAX.</param>
      <param name="routeName">Nombre de la ruta que se usa para obtener la dirección URL de envío de formulario.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.Los parámetros se recuperan mediante reflexión examinando las propiedades del objeto.Este objeto suele crearse utilizando la sintaxis del inicializador de objeto.</param>
      <param name="ajaxOptions">Un objeto que proporciona las opciones para la solicitud asincrónica.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginRouteForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Escribe una etiqueta de apertura &lt;form&gt; para la respuesta usando la información de enrutamiento especificada.</summary>
      <returns>Etiqueta de apertura &lt;form&gt;.</returns>
      <param name="ajaxHelper">Objeto auxiliar AJAX.</param>
      <param name="routeName">Nombre de la ruta que se usa para obtener la dirección URL de envío de formulario.</param>
      <param name="ajaxOptions">Un objeto que proporciona las opciones para la solicitud asincrónica.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginRouteForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Escribe una etiqueta de apertura &lt;form&gt; para la respuesta usando la información de enrutamiento especificada.</summary>
      <returns>Etiqueta de apertura &lt;form&gt;.</returns>
      <param name="ajaxHelper">Objeto auxiliar AJAX.</param>
      <param name="routeName">Nombre de la ruta que se usa para obtener la dirección URL de envío de formulario.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.</param>
      <param name="ajaxOptions">Un objeto que proporciona las opciones para la solicitud asincrónica.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginRouteForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Escribe una etiqueta de apertura &lt;form&gt; para la respuesta usando la información de enrutamiento especificada.</summary>
      <returns>Etiqueta de apertura &lt;form&gt;.</returns>
      <param name="ajaxHelper">Objeto auxiliar AJAX.</param>
      <param name="routeName">Nombre de la ruta que se usa para obtener la dirección URL de envío de formulario.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.</param>
      <param name="ajaxOptions">Un objeto que proporciona las opciones para la solicitud asincrónica.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.GlobalizationScript(System.Web.Mvc.AjaxHelper)">
      <summary>Devuelve un elemento de script HTML que contiene una referencia a un script de globalización que define la información sobre la referencia cultural.</summary>
      <returns>Un elemento de script cuyo atributo src está establecido en el script de globalización, como en el ejemplo siguiente: &lt;script type="text/javascript"     src="/MvcApplication1/Scripts/Globalization/en-US.js"&gt;&lt;/script&gt;</returns>
      <param name="ajaxHelper">Objeto auxiliar AJAX que este método extiende.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.GlobalizationScript(System.Web.Mvc.AjaxHelper,System.Globalization.CultureInfo)">
      <summary>Devuelve un elemento HTML de script que contiene una referencia a un script de globalización que define la información sobre la referencia cultural especificada.</summary>
      <returns>Un elemento de script HTML cuyo atributo src está establecido en el script de globalización, como en el ejemplo siguiente:&lt;script type="text/javascript"    src="/MvcApplication1/Scripts/Globalization/en-US.js"&gt;&lt;/script&gt;</returns>
      <param name="ajaxHelper">Objeto auxiliar AJAX que este método extiende.</param>
      <param name="cultureInfo">Encapsula información sobre la referencia cultural de destino, como los formatos de fecha.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="cultureInfo" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Devuelve un elemento delimitador que contiene la ruta de acceso virtual de los valores de ruta especificados; al hacer clic en el vínculo, se realiza asincrónicamente una solicitud para la ruta de acceso virtual mediante JavaScript.</summary>
      <returns>Un elemento delimitador.</returns>
      <param name="ajaxHelper">Objeto auxiliar AJAX.</param>
      <param name="linkText">Texto interno del elemento delimitador.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.Los parámetros se recuperan mediante reflexión examinando las propiedades del objeto.Este objeto suele crearse utilizando la sintaxis del inicializador de objeto.</param>
      <param name="ajaxOptions">Un objeto que proporciona las opciones para la solicitud asincrónica.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="linkText" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Devuelve un elemento delimitador que contiene la ruta de acceso virtual de los valores de ruta especificados; al hacer clic en el vínculo, se realiza asincrónicamente una solicitud para la ruta de acceso virtual mediante JavaScript.</summary>
      <returns>Un elemento delimitador.</returns>
      <param name="ajaxHelper">Objeto auxiliar AJAX.</param>
      <param name="linkText">Texto interno del elemento delimitador.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.Los parámetros se recuperan mediante reflexión examinando las propiedades del objeto.Este objeto suele crearse utilizando la sintaxis del inicializador de objeto.</param>
      <param name="ajaxOptions">Un objeto que proporciona las opciones para la solicitud asincrónica.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="linkText" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Devuelve un elemento delimitador que contiene la ruta de acceso virtual de los valores de ruta especificados; al hacer clic en el vínculo, se realiza asincrónicamente una solicitud para la ruta de acceso virtual mediante JavaScript.</summary>
      <returns>Un elemento delimitador.</returns>
      <param name="ajaxHelper">Objeto auxiliar AJAX.</param>
      <param name="linkText">Texto interno del elemento delimitador.</param>
      <param name="routeName">Nombre de la ruta que se usa para obtener la dirección URL de envío de formulario.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.Los parámetros se recuperan mediante reflexión examinando las propiedades del objeto.Este objeto suele crearse utilizando la sintaxis del inicializador de objeto.</param>
      <param name="ajaxOptions">Un objeto que proporciona las opciones para la solicitud asincrónica.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="linkText" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Devuelve un elemento delimitador que contiene la ruta de acceso virtual de los valores de ruta especificados; al hacer clic en el vínculo, se realiza asincrónicamente una solicitud para la ruta de acceso virtual mediante JavaScript.</summary>
      <returns>Un elemento delimitador.</returns>
      <param name="ajaxHelper">Objeto auxiliar AJAX.</param>
      <param name="linkText">Texto interno del elemento delimitador.</param>
      <param name="routeName">Nombre de la ruta que se usa para obtener la dirección URL de envío de formulario.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.Los parámetros se recuperan mediante reflexión examinando las propiedades del objeto.Este objeto suele crearse utilizando la sintaxis del inicializador de objeto.</param>
      <param name="ajaxOptions">Un objeto que proporciona las opciones para la solicitud asincrónica.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="linkText" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve un elemento delimitador que contiene la ruta de acceso virtual de los valores de ruta especificados; al hacer clic en el vínculo, se realiza asincrónicamente una solicitud para la ruta de acceso virtual mediante JavaScript.</summary>
      <returns>Un elemento delimitador.</returns>
      <param name="ajaxHelper">Objeto auxiliar AJAX.</param>
      <param name="linkText">Texto interno del elemento delimitador.</param>
      <param name="routeName">Nombre de la ruta que se usa para obtener la dirección URL de envío de formulario.</param>
      <param name="protocol">Protocolo de la dirección URL, como "http" o "https".</param>
      <param name="hostName">Nombre de host para la dirección URL.</param>
      <param name="fragment">Nombre del fragmento de la dirección URL (nombre del delimitador).</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.</param>
      <param name="ajaxOptions">Un objeto que proporciona las opciones para la solicitud asincrónica.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="linkText" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Devuelve un elemento delimitador que contiene la ruta de acceso virtual de los valores de ruta especificados; al hacer clic en el vínculo, se realiza asincrónicamente una solicitud para la ruta de acceso virtual mediante JavaScript.</summary>
      <returns>Un elemento delimitador.</returns>
      <param name="ajaxHelper">Objeto auxiliar AJAX.</param>
      <param name="linkText">Texto interno del elemento delimitador.</param>
      <param name="routeName">Nombre de la ruta que se usa para obtener la dirección URL de envío de formulario.</param>
      <param name="ajaxOptions">Un objeto que proporciona las opciones para la solicitud asincrónica.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="linkText" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve un elemento delimitador que contiene la ruta de acceso virtual de los valores de ruta especificados; al hacer clic en el vínculo, se realiza asincrónicamente una solicitud para la ruta de acceso virtual mediante JavaScript.</summary>
      <returns>Un elemento delimitador.</returns>
      <param name="ajaxHelper">Objeto auxiliar AJAX.</param>
      <param name="linkText">Texto interno del elemento delimitador.</param>
      <param name="routeName">Nombre de la ruta que se usa para obtener la dirección URL de envío de formulario.</param>
      <param name="ajaxOptions">Un objeto que proporciona las opciones para la solicitud asincrónica.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="linkText" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Devuelve un elemento delimitador que contiene la ruta de acceso virtual de los valores de ruta especificados; al hacer clic en el vínculo, se realiza asincrónicamente una solicitud para la ruta de acceso virtual mediante JavaScript.</summary>
      <returns>Un elemento delimitador.</returns>
      <param name="ajaxHelper">Objeto auxiliar AJAX.</param>
      <param name="linkText">Texto interno del elemento delimitador.</param>
      <param name="routeName">Nombre de la ruta que se usa para obtener la dirección URL de envío de formulario.</param>
      <param name="ajaxOptions">Un objeto que proporciona las opciones para la solicitud asincrónica.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="linkText" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Devuelve un elemento delimitador que contiene la ruta de acceso virtual de los valores de ruta especificados; al hacer clic en el vínculo, se realiza asincrónicamente una solicitud para la ruta de acceso virtual mediante JavaScript.</summary>
      <returns>Un elemento delimitador.</returns>
      <param name="ajaxHelper">Objeto auxiliar AJAX.</param>
      <param name="linkText">Texto interno del elemento delimitador.</param>
      <param name="routeName">Nombre de la ruta que se usa para obtener la dirección URL de envío de formulario.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.</param>
      <param name="ajaxOptions">Un objeto que proporciona las opciones para la solicitud asincrónica.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="linkText" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve un elemento delimitador que contiene la ruta de acceso virtual de los valores de ruta especificados; al hacer clic en el vínculo, se realiza asincrónicamente una solicitud para la ruta de acceso virtual mediante JavaScript.</summary>
      <returns>Un elemento delimitador.</returns>
      <param name="ajaxHelper">Objeto auxiliar AJAX.</param>
      <param name="linkText">Texto interno del elemento delimitador.</param>
      <param name="routeName">Nombre de la ruta que se usa para obtener la dirección URL de envío de formulario.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.</param>
      <param name="ajaxOptions">Un objeto que proporciona las opciones para la solicitud asincrónica.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="linkText" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Devuelve un elemento delimitador que contiene la ruta de acceso virtual de los valores de ruta especificados; al hacer clic en el vínculo, se realiza asincrónicamente una solicitud para la ruta de acceso virtual mediante JavaScript.</summary>
      <returns>Un elemento delimitador.</returns>
      <param name="ajaxHelper">Objeto auxiliar AJAX.</param>
      <param name="linkText">Texto interno del elemento delimitador.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.</param>
      <param name="ajaxOptions">Un objeto que proporciona las opciones para la solicitud asincrónica.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="linkText" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve un elemento delimitador que contiene la ruta de acceso virtual de los valores de ruta especificados; al hacer clic en el vínculo, se realiza asincrónicamente una solicitud para la ruta de acceso virtual mediante JavaScript.</summary>
      <returns>Un elemento delimitador.</returns>
      <param name="ajaxHelper">Objeto auxiliar AJAX.</param>
      <param name="linkText">Texto interno del elemento delimitador.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.</param>
      <param name="ajaxOptions">Un objeto que proporciona las opciones para la solicitud asincrónica.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="linkText" /> es null o está vacío.</exception>
    </member>
    <member name="T:System.Web.Mvc.Ajax.AjaxOptions">
      <summary>Representa la configuración de opciones para ejecutar los scripts Ajax en una aplicación de ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxOptions.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.Ajax.AjaxOptions" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.Confirm">
      <summary>Obtiene o establece el mensaje que se mostrará en una ventana de confirmación antes de que se envíe una solicitud.</summary>
      <returns>Mensaje que se va a mostrar en una ventana de confirmación.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.HttpMethod">
      <summary>Obtiene o establece el método de solicitud HTTP ("Get" o "Post").</summary>
      <returns>Método de solicitud HTTP.El valor predeterminado es "Post".</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.InsertionMode">
      <summary>Obtiene o establece el modo que especifica cómo insertar la respuesta en el elemento DOM de destino.</summary>
      <returns>Modo de inserción ("InsertAfter", "InsertBefore" o "Replace").El valor predeterminado es "Replace".</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.LoadingElementDuration">
      <summary>Obtiene o establece un valor, en milisegundos, que controla la duración de la animación cuando se muestra u oculta el elemento que se está cargando.</summary>
      <returns>Valor, en milisegundos, que controla la duración de la animación cuando se muestra u oculta el elemento que se está cargando.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.LoadingElementId">
      <summary>Obtiene o establece el atributo id de un elemento HTML que se muestra mientras se está cargando la función Ajax.</summary>
      <returns>El identificador del elemento que se muestra mientras se está cargando la función Ajax.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.OnBegin">
      <summary>Obtiene o establece el nombre de la función JavaScript a la que se llama inmediatamente antes de que se actualice la página.</summary>
      <returns>Nombre de la función JavaScript a la que se llama antes de que se actualice la página.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.OnComplete">
      <summary>Obtiene o establece la función JavaScript a la que se llama cuando se ha creado una instancia de datos de la respuesta pero antes de que se actualice la página.</summary>
      <returns>Función JavaScript a la que se llama cuando se ha creado una instancia de datos de la respuesta.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.OnFailure">
      <summary>Obtiene o establece la función JavaScript a la que se llama si no se puede actualizar la página.</summary>
      <returns>Función JavaScript a la que se llama si no se puede actualizar la página.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.OnSuccess">
      <summary>Obtiene o establece la función JavaScript a la que se llama una vez que la página se actualiza correctamente.</summary>
      <returns>Función JavaScript a la que se llama una vez que la página se actualiza correctamente.</returns>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxOptions.ToUnobtrusiveHtmlAttributes">
      <summary>Devuelve las opciones de Ajax como colección de atributos HTML para admitir un JavaScript discreto.</summary>
      <returns>Opciones de Ajax como colección de atributos HTML para admitir un JavaScript discreto.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.UpdateTargetId">
      <summary>Obtiene o establece el identificador del elemento DOM que se va a actualizar mediante la respuesta del servidor.</summary>
      <returns>Identificador del elemento DOM que se va a actualizar.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.Url">
      <summary>Obtiene o establece la dirección URL en la que se va a hacer la solicitud.</summary>
      <returns>Dirección URL en la que se va a hacer la solicitud.</returns>
    </member>
    <member name="T:System.Web.Mvc.Ajax.InsertionMode">
      <summary>Enumera los modos de inserción de script AJAX.</summary>
    </member>
    <member name="F:System.Web.Mvc.Ajax.InsertionMode.Replace">
      <summary>Reemplazar el elemento.</summary>
    </member>
    <member name="F:System.Web.Mvc.Ajax.InsertionMode.InsertBefore">
      <summary>Insertar antes del elemento.</summary>
    </member>
    <member name="F:System.Web.Mvc.Ajax.InsertionMode.InsertAfter">
      <summary>Insertar después del elemento.</summary>
    </member>
    <member name="T:System.Web.Mvc.Async.AsyncActionDescriptor">
      <summary>Proporciona información sobre un método de acción asincrónica, tal como su nombre, controlador, parámetros, atributos y filtros.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncActionDescriptor.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.Async.AsyncActionDescriptor" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncActionDescriptor.BeginExecute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>Invoca el método de acción asincrónica mediante los parámetros y el contexto de controlador especificados.</summary>
      <returns>Un objeto que contiene el resultado de una llamada asincrónica.</returns>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="parameters">Parámetros del método de acción.</param>
      <param name="callback">Método de devolución de llamada.</param>
      <param name="state">Un objeto que contiene la información que debe usar el método de devolución de llamada.Este parámetro puede ser null.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncActionDescriptor.EndExecute(System.IAsyncResult)">
      <summary>Devuelve el resultado de una operación asincrónica.</summary>
      <returns>Resultado de una operación asincrónica.</returns>
      <param name="asyncResult">Un objeto que representa el estado de una operación asincrónica.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncActionDescriptor.Execute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Ejecuta el método de acción asincrónica mediante los parámetros y el contexto de controlador especificados.</summary>
      <returns>Resultado de ejecutar el método de acción asincrónica.</returns>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="parameters">Parámetros del método de acción.</param>
    </member>
    <member name="T:System.Web.Mvc.Async.AsyncControllerActionInvoker">
      <summary>Representa una clase responsable de invocar los métodos de acción de un controlador asincrónico.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.Async.AsyncControllerActionInvoker" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.BeginInvokeAction(System.Web.Mvc.ControllerContext,System.String,System.AsyncCallback,System.Object)">
      <summary>Invoca el método de acción asincrónica mediante el contexto de controlador, el nombre de la acción, el método de devolución de llamada y el estado especificados.</summary>
      <returns>Un objeto que contiene el resultado de una operación asincrónica.</returns>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="actionName">Nombre de la acción.</param>
      <param name="callback">Método de devolución de llamada.</param>
      <param name="state">Un objeto que contiene la información que debe usar el método de devolución de llamada.Este parámetro puede ser null.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.BeginInvokeActionMethod(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>Invoca el método de acción asincrónica mediante el contexto de controlador, el descriptor de la acción, los parámetros, el método de devolución de llamada y el estado especificados.</summary>
      <returns>Un objeto que contiene el resultado de una operación asincrónica.</returns>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="actionDescriptor">Descriptor de la acción.</param>
      <param name="parameters">Parámetros para el método de acción asincrónica.</param>
      <param name="callback">Método de devolución de llamada.</param>
      <param name="state">Un objeto que contiene la información que debe usar el método de devolución de llamada.Este parámetro puede ser null.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.BeginInvokeActionMethodWithFilters(System.Web.Mvc.ControllerContext,System.Collections.Generic.IList{System.Web.Mvc.IActionFilter},System.Web.Mvc.ActionDescriptor,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>Invoca el método de acción asincrónica mediante el contexto de controlador, los filtros, el descriptor de la acción, los parámetros, el método de devolución de llamada y el estado especificados.</summary>
      <returns>Un objeto que contiene el resultado de una operación asincrónica.</returns>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="filters">Filtros.</param>
      <param name="actionDescriptor">Descriptor de la acción.</param>
      <param name="parameters">Parámetros para el método de acción asincrónica.</param>
      <param name="callback">Método de devolución de llamada.</param>
      <param name="state">Un objeto que contiene la información que debe usar el método de devolución de llamada.Este parámetro puede ser null.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeAction(System.IAsyncResult)">
      <summary>Cancela la acción.</summary>
      <returns>true si la acción se canceló; de lo contrario false.</returns>
      <param name="asyncResult">Objeto definido por el usuario que califica una operación asincrónica o que contiene información sobre una operación asincrónica.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeActionMethod(System.IAsyncResult)">
      <summary>Cancela la acción.</summary>
      <returns>true si la acción se canceló; de lo contrario false.</returns>
      <param name="asyncResult">Objeto definido por el usuario que califica una operación asincrónica o que contiene información sobre una operación asincrónica.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeActionMethodWithFilters(System.IAsyncResult)">
      <summary>Cancela la acción.</summary>
      <returns>true si la acción se canceló; de lo contrario false.</returns>
      <param name="asyncResult">Objeto definido por el usuario que califica una operación asincrónica o que contiene información sobre una operación asincrónica.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.GetControllerDescriptor(System.Web.Mvc.ControllerContext)">
      <summary>Devuelve el descriptor del controlador.</summary>
      <returns>Descriptor del controlador.</returns>
      <param name="controllerContext">Contexto del controlador.</param>
    </member>
    <member name="T:System.Web.Mvc.Async.AsyncManager">
      <summary>Proporciona las operaciones asincrónicas para la clase <see cref="T:System.Web.Mvc.AsyncController" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncManager.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.Async.AsyncManager" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncManager.#ctor(System.Threading.SynchronizationContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.Async.AsyncManager" /> mediante el contexto de sincronización proporcionado.</summary>
      <param name="syncContext">Contexto de sincronización.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncManager.Finish">
      <summary>Notifica a ASP.NET que todas las operaciones asincrónicas se han completado.</summary>
    </member>
    <member name="E:System.Web.Mvc.Async.AsyncManager.Finished">
      <summary>Se produce cuando se llama al método <see cref="M:System.Web.Mvc.Async.AsyncManager.Finish" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.Async.AsyncManager.OutstandingOperations">
      <summary>Obtiene el número de operaciones pendientes.</summary>
      <returns>Número de operaciones pendientes.</returns>
    </member>
    <member name="P:System.Web.Mvc.Async.AsyncManager.Parameters">
      <summary>Obtiene los parámetros que se pasaron al método de finalización asincrónico.</summary>
      <returns>Parámetros que se pasaron al método de finalización asincrónico.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncManager.Sync(System.Action)">
      <summary>Ejecuta una devolución de llamada en el contexto de sincronización actual.</summary>
      <param name="action">Acción asincrónica.</param>
    </member>
    <member name="P:System.Web.Mvc.Async.AsyncManager.Timeout">
      <summary>Obtiene o establece el valor de tiempo de espera asincrónico, en milisegundos.</summary>
      <returns>El valor de tiempo de espera asincrónico, en milisegundos.</returns>
    </member>
    <member name="T:System.Web.Mvc.Async.IAsyncActionInvoker">
      <summary>Define la interfaz para un invocador de acción, que se usa para invocar una acción asincrónica en respuesta a una solicitud HTTP.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.IAsyncActionInvoker.BeginInvokeAction(System.Web.Mvc.ControllerContext,System.String,System.AsyncCallback,System.Object)">
      <summary>Invoca la acción especificada.</summary>
      <returns>Estado del resultado asincrónico.</returns>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="actionName">Nombre de la acción asincrónica.</param>
      <param name="callback">Método de devolución de llamada.</param>
      <param name="state">Estado.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.IAsyncActionInvoker.EndInvokeAction(System.IAsyncResult)">
      <summary>Cancela la acción asincrónica.</summary>
      <returns>true si el método asincrónico se pudo cancelar; de lo contrario, false.</returns>
      <param name="asyncResult">Resultado asincrónico.</param>
    </member>
    <member name="T:System.Web.Mvc.Async.IAsyncController">
      <summary>Define los métodos necesarios para un controlador asincrónico.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.IAsyncController.BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object)">
      <summary>Ejecuta el contexto de solicitud especificado.</summary>
      <returns>Estado de la operación asincrónica.</returns>
      <param name="requestContext">Contexto de la solicitud.</param>
      <param name="callback">Método de devolución de llamada asincrónica.</param>
      <param name="state">Estado.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.IAsyncController.EndExecute(System.IAsyncResult)">
      <summary>Finaliza la operación asincrónica.</summary>
      <param name="asyncResult">Resultado asincrónico.</param>
    </member>
    <member name="T:System.Web.Mvc.Async.IAsyncManagerContainer">
      <summary>Proporciona un contenedor para el objeto de administrador asincrónico.</summary>
    </member>
    <member name="P:System.Web.Mvc.Async.IAsyncManagerContainer.AsyncManager">
      <summary>Obtiene el objeto de administrador asincrónico.</summary>
      <returns>El objeto de administrador asincrónico.</returns>
    </member>
    <member name="T:System.Web.Mvc.Async.OperationCounter">
      <summary>Proporciona un contenedor que mantiene un recuento de operaciones asincrónicas pendientes.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.OperationCounter.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.Async.OperationCounter" />.</summary>
    </member>
    <member name="E:System.Web.Mvc.Async.OperationCounter.Completed">
      <summary>Se produce cuando se completa un método asincrónico.</summary>
    </member>
    <member name="P:System.Web.Mvc.Async.OperationCounter.Count">
      <summary>Obtiene el número de operaciones.</summary>
      <returns>Número de operaciones.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.OperationCounter.Decrement">
      <summary>Reduce el número de operaciones en 1.</summary>
      <returns>Número de operaciones actualizado.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.OperationCounter.Decrement(System.Int32)">
      <summary>Reduce el número de operaciones en el valor especificado.</summary>
      <returns>Número de operaciones actualizado.</returns>
      <param name="value">Número de operaciones en el que se va a reducir el recuento.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.OperationCounter.Increment">
      <summary>Incrementa el número de operaciones en uno.</summary>
      <returns>Número de operaciones actualizado.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.OperationCounter.Increment(System.Int32)">
      <summary>Incrementa el número de operaciones en el valor especificado.</summary>
      <returns>Número de operaciones actualizado.</returns>
      <param name="value">Número de operaciones en el que se va a incrementar el recuento.</param>
    </member>
    <member name="T:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor">
      <summary>Proporciona información sobre un método de acción asincrónica, tal como su nombre, controlador, parámetros, atributos y filtros.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.#ctor(System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.String,System.Web.Mvc.ControllerDescriptor)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor" />.</summary>
      <param name="asyncMethodInfo">Objeto que contiene la información sobre el método que empieza la operación asincrónica (el método cuyo nombre termina con "Asynch").</param>
      <param name="completedMethodInfo">Un objeto que contiene la información sobre el método de finalización (el método cuyo nombre termina con "Completed").</param>
      <param name="actionName">Nombre de la acción.</param>
      <param name="controllerDescriptor">Descriptor del controlador.</param>
    </member>
    <member name="P:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.ActionName">
      <summary>Obtiene el nombre del método de la acción.</summary>
      <returns>Nombre del método de la acción.</returns>
    </member>
    <member name="P:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.AsyncMethodInfo">
      <summary>Obtiene la información de método para el método de acción asincrónica.</summary>
      <returns>Información de método para el método de acción asincrónica.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.BeginExecute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>Inicia la ejecución del método de acción asincrónica mediante los parámetros y el contexto de controlador especificados.</summary>
      <returns>Un objeto que contiene el resultado de una llamada asincrónica.</returns>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="parameters">Parámetros del método de acción.</param>
      <param name="callback">Método de devolución de llamada.</param>
      <param name="state">Un objeto que contiene la información que debe usar el método de devolución de llamada.Este parámetro puede ser null.</param>
    </member>
    <member name="P:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.CompletedMethodInfo">
      <summary>Obtiene la información de método para el método de finalización asincrónico.</summary>
      <returns>Información de método para el método de finalización asincrónico.</returns>
    </member>
    <member name="P:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.ControllerDescriptor">
      <summary>Obtiene el descriptor del controlador para el método de acción asincrónica.</summary>
      <returns>Descriptor del controlador para el método de acción asincrónica.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.EndExecute(System.IAsyncResult)">
      <summary>Devuelve el resultado de una operación asincrónica.</summary>
      <returns>Resultado de una operación asincrónica.</returns>
      <param name="asyncResult">Un objeto que representa el estado de una operación asincrónica.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>Devuelve una matriz de atributos personalizados definidos para este miembro, excluidos los atributos con nombre.</summary>
      <returns>Una matriz de atributos personalizados o una matriz vacía si no existen atributos personalizados.</returns>
      <param name="inherit">true para buscar la cadena de jerarquía del atributo personalizado heredado; de lo contrario, false.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Devuelve una matriz de atributos personalizados definidos para este miembro, identificados según el tipo.</summary>
      <returns>Una matriz de atributos personalizados o una matriz vacía si no existe ningún atributo personalizado del tipo especificado.</returns>
      <param name="attributeType">Tipo de los atributos personalizados que se van a devolver.</param>
      <param name="inherit">true para buscar la cadena de jerarquía del atributo personalizado heredado; de lo contrario, false.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.GetFilterAttributes(System.Boolean)">
      <summary>Obtiene los atributos del filtro.</summary>
      <returns>Los atributos del filtro.</returns>
      <param name="useCache">Usar la marca de caché.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.GetParameters">
      <summary>Devuelve los parámetros del método de la acción.</summary>
      <returns>Parámetros del método de acción.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.GetSelectors">
      <summary>Devuelve los selectores de método de acción.</summary>
      <returns>Selectores de método de acción.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>Determina si están definidas una o más instancias del tipo de atributo especificado para el miembro de acción.</summary>
      <returns>true si se define para este miembro un atributo de tipo representado por <paramref name="attributeType" />; de lo contrario, false.</returns>
      <param name="attributeType">Tipo del atributo personalizado.</param>
      <param name="inherit">true para buscar la cadena de jerarquía del atributo personalizado heredado; de lo contrario, false.</param>
    </member>
    <member name="P:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.UniqueId">
      <summary>Obtiene el identificador único inicializado de forma diferida de la instancia de esta clase.</summary>
      <returns>Identificador único inicializado de forma diferida de la instancia de esta clase.</returns>
    </member>
    <member name="T:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor">
      <summary>Encapsula la información que describe un controlador asincrónico, tal como su nombre, su tipo y sus acciones.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.#ctor(System.Type)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor" />.</summary>
      <param name="controllerType">Tipo del controlador.</param>
    </member>
    <member name="P:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.ControllerType">
      <summary>Obtiene el tipo del controlador.</summary>
      <returns>Tipo del controlador.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.FindAction(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Busca un método de acción mediante el nombre especificado y el contexto del controlador.</summary>
      <returns>Información acerca del método de la acción.</returns>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="actionName">Nombre de la acción.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.GetCanonicalActions">
      <summary>Devuelve una lista de descriptores de método de acción en el controlador.</summary>
      <returns>Una lista de descriptores de método de acción en el controlador.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>Devuelve los atributos personalizados definidos para este miembro, excluidos los atributos con nombre.</summary>
      <returns>Una matriz de atributos personalizados o una matriz vacía si no existen atributos personalizados.</returns>
      <param name="inherit">true para buscar la cadena de jerarquía del atributo personalizado heredado; de lo contrario, false.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Devuelve los atributos personalizados de un tipo especificado definidos para este miembro, excluidos los atributos con nombre.</summary>
      <returns>Una matriz de atributos personalizados o una matriz vacía si no existen atributos personalizados.</returns>
      <param name="attributeType">Tipo de los atributos personalizados.</param>
      <param name="inherit">true para buscar la cadena de jerarquía del atributo personalizado heredado; de lo contrario, false.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.GetFilterAttributes(System.Boolean)">
      <summary>Obtiene los atributos del filtro.</summary>
      <returns>Los atributos del filtro.</returns>
      <param name="useCache">true para usar la memoria caché, de lo contrario false.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>Devuelve un valor que indica si están definidas una o más instancias del atributo personalizado especificado para este miembro.</summary>
      <returns>true si se define para este miembro un atributo del tipo representado por <paramref name="attributeType" />; de lo contrario, false.</returns>
      <param name="attributeType">Tipo del atributo personalizado.</param>
      <param name="inherit">true para buscar la cadena de jerarquía del atributo personalizado heredado; de lo contrario, false.</param>
    </member>
    <member name="T:System.Web.Mvc.Async.SynchronousOperationException">
      <summary>Representa una excepción que se produjo durante el procesamiento sincrónico de una solicitud HTTP en una aplicación de ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.SynchronousOperationException.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.Async.SynchronousOperationException" /> mediante un mensaje que proporciona el sistema.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.SynchronousOperationException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.Async.SynchronousOperationException" /> mediante el mensaje especificado.</summary>
      <param name="message">Mensaje que describe la excepción.El llamador de este constructor debe asegurarse de que la cadena se ha traducido para la referencia cultural actual del sistema.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.SynchronousOperationException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.Async.SynchronousOperationException" /> mediante un mensaje de error especificado y una referencia a la excepción interna que es la causa de esta excepción.</summary>
      <param name="message">Mensaje que describe la excepción.El llamador de este constructor debe asegurarse de que la cadena se ha traducido para la referencia cultural actual del sistema.</param>
      <param name="innerException">Excepción que es la causa de la excepción actual.Si el parámetro <paramref name="innerException" /> no es null, la excepción actual se inicia en un bloque catch que controla la excepción interna.</param>
    </member>
    <member name="T:System.Web.Mvc.Async.TaskAsyncActionDescriptor">
      <summary>Cuando un método de acción devuelve Task o Task&lt;T&gt;, <see cref="T:System.Web.Mvc.Async.TaskAsyncActionDescriptor" /> proporciona información acerca de la acción.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.TaskAsyncActionDescriptor.#ctor(System.Reflection.MethodInfo,System.String,System.Web.Mvc.ControllerDescriptor)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.Async.TaskAsyncActionDescriptor" />.</summary>
      <param name="taskMethodInfo">Información de método del a tarea.</param>
      <param name="actionName">Nombre de la acción.</param>
      <param name="controllerDescriptor">Descriptor del controlador.</param>
    </member>
    <member name="P:System.Web.Mvc.Async.TaskAsyncActionDescriptor.ActionName">
      <summary>Obtiene el nombre del método de la acción.</summary>
      <returns>Nombre del método de la acción.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.TaskAsyncActionDescriptor.BeginExecute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>Invoca el método de acción asincrónica mediante los parámetros, la devolución de contexto de controlador y el estado especificados.</summary>
      <returns>Un objeto que contiene el resultado de una llamada asincrónica.</returns>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="parameters">Parámetros del método de acción.</param>
      <param name="callback">Método de devolución de llamada opcional.</param>
      <param name="state">Un objeto que contiene la información que debe usar el método de devolución de llamada.Este parámetro puede ser null.</param>
    </member>
    <member name="P:System.Web.Mvc.Async.TaskAsyncActionDescriptor.ControllerDescriptor">
      <summary>Obtiene el descriptor del controlador.</summary>
      <returns>Descriptor del controlador.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.TaskAsyncActionDescriptor.EndExecute(System.IAsyncResult)">
      <summary>Finaliza la operación asincrónica.</summary>
      <returns>Resultado de una operación asincrónica.</returns>
      <param name="asyncResult">Un objeto que representa el estado de una operación asincrónica.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.TaskAsyncActionDescriptor.Execute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Ejecuta el método de acción asincrónica.</summary>
      <returns>Resultado de ejecutar el método de acción asincrónica.</returns>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="parameters">Parámetros del método de acción.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.TaskAsyncActionDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>Devuelve una matriz de atributos personalizados definidos para este miembro, excluidos los atributos con nombre.</summary>
      <returns>Una matriz de atributos personalizados o una matriz vacía si no existen atributos personalizados.</returns>
      <param name="inherit">true para buscar la cadena de jerarquía del atributo personalizado heredado; de lo contrario, false.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.TaskAsyncActionDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Devuelve una matriz de atributos personalizados definidos para este miembro, identificados según el tipo.</summary>
      <returns>Una matriz de atributos personalizados o una matriz vacía si no existen atributos personalizados.</returns>
      <param name="attributeType">Tipo de los atributos personalizados.</param>
      <param name="inherit">true para buscar la cadena de jerarquía del atributo personalizado heredado; de lo contrario, false.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.TaskAsyncActionDescriptor.GetFilterAttributes(System.Boolean)">
      <summary>Devuelve una matriz de atributos personalizados aplicados a este miembro.</summary>
      <returns>Una matriz que contiene todos los atributos personalizados aplicados a este miembro o una matriz con cero elementos (si no hay atributos definidos).</returns>
      <param name="useCache">true para buscar la cadena de herencia de este miembro en búsqueda de atributos; de lo contrario false.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.TaskAsyncActionDescriptor.GetParameters">
      <summary>Devuelve los parámetros del método de acción asincrónica.</summary>
      <returns>Parámetros del método de acción asincrónica.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.TaskAsyncActionDescriptor.GetSelectors">
      <summary>Devuelve los selectores de método de acción asincrónicos.</summary>
      <returns>Selectores de método de acción asincrónicos.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.TaskAsyncActionDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>Devuelve un valor que indica si están definidas una o más instancias del atributo personalizado especificado para este miembro.</summary>
      <returns>Un valor que indica si están definidas una o más instancias del atributo personalizado especificado para este miembro.</returns>
      <param name="attributeType">Tipo del atributo personalizado.</param>
      <param name="inherit">true para buscar la cadena de jerarquía del atributo personalizado heredado; de lo contrario, false.</param>
    </member>
    <member name="P:System.Web.Mvc.Async.TaskAsyncActionDescriptor.TaskMethodInfo">
      <summary>Obtiene información para la tarea asincrónica.</summary>
      <returns>Información para la tarea asincrónica.</returns>
    </member>
    <member name="P:System.Web.Mvc.Async.TaskAsyncActionDescriptor.UniqueId">
      <summary>Obtiene el identificador único para la tarea.</summary>
      <returns>El identificador único para la tarea.</returns>
    </member>
    <member name="T:System.Web.Mvc.Html.ChildActionExtensions">
      <summary>Representa la compatibilidad para llamar a los métodos de acción secundaria y representar el resultado alineado en una vista primaria.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Invoca el método de acción secundaria especificado y devuelve el resultado como una cadena HTML.</summary>
      <returns>Resultado de la acción secundaria como cadena HTML.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="actionName">Nombre del método de acción que se va a invocar.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="htmlHelper" /> es null.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="actionName" /> es null o está vacío.</exception>
      <exception cref="T:System.InvalidOperationException">No se pueden encontrar los datos de la ruta de acceso virtual necesarios.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Invoca el método de acción secundaria especificado con los parámetros especificados y devuelve el resultado como una cadena HTML.</summary>
      <returns>Resultado de la acción secundaria como cadena HTML.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="actionName">Nombre del método de acción que se va a invocar.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.Puede usar <paramref name="routeValues" /> para proporcionar los parámetros enlazados a los parámetros del método de acción.El parámetro <paramref name="routeValues" /> se combina con los valores de ruta originales y los invalida.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="htmlHelper" /> es null.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="actionName" /> es null o está vacío.</exception>
      <exception cref="T:System.InvalidOperationException">No se pueden encontrar los datos de la ruta de acceso virtual necesarios.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Invoca el método de acción secundaria especificado mediante el nombre de control especificado y devuelve el resultado como una cadena HTML.</summary>
      <returns>Resultado de la acción secundaria como cadena HTML.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="actionName">Nombre del método de acción que se va a invocar.</param>
      <param name="controllerName">Nombre del controlador que contiene el método de acción.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="htmlHelper" /> es null.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="actionName" /> es null o está vacío.</exception>
      <exception cref="T:System.InvalidOperationException">No se pueden encontrar los datos de la ruta de acceso virtual necesarios.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Invoca el método de acción secundaria especificado mediante los parámetros y el nombre de controlador especificados, y devuelve el resultado como una cadena HTML.</summary>
      <returns>Resultado de la acción secundaria como cadena HTML.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="actionName">Nombre del método de acción que se va a invocar.</param>
      <param name="controllerName">Nombre del controlador que contiene el método de acción.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.Puede usar <paramref name="routeValues" /> para proporcionar los parámetros enlazados a los parámetros del método de acción.El parámetro <paramref name="routeValues" /> se combina con los valores de ruta originales y los invalida.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="htmlHelper" /> es null.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="actionName" /> es null o está vacío.</exception>
      <exception cref="T:System.InvalidOperationException">No se pueden encontrar los datos de la ruta de acceso virtual necesarios.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Invoca el método de acción secundaria especificado mediante los parámetros y el nombre de controlador especificados, y devuelve el resultado como una cadena HTML.</summary>
      <returns>Resultado de la acción secundaria como cadena HTML.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="actionName">Nombre del método de acción que se va a invocar.</param>
      <param name="controllerName">Nombre del controlador que contiene el método de acción.</param>
      <param name="routeValues">Un diccionario que contiene los parámetros para una ruta.Puede usar <paramref name="routeValues" /> para proporcionar los parámetros enlazados a los parámetros del método de acción.El parámetro <paramref name="routeValues" /> se combina con los valores de ruta originales y los invalida.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="htmlHelper" /> es null.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="actionName" /> es null o está vacío.</exception>
      <exception cref="T:System.InvalidOperationException">No se pueden encontrar los datos de la ruta de acceso virtual necesarios.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Invoca el método de acción secundaria especificado mediante los parámetros especificados y devuelve el resultado como una cadena HTML.</summary>
      <returns>Resultado de la acción secundaria como cadena HTML.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="actionName">Nombre del método de acción que se va a invocar.</param>
      <param name="routeValues">Un diccionario que contiene los parámetros para una ruta.Puede usar <paramref name="routeValues" /> para proporcionar los parámetros enlazados a los parámetros del método de acción.El parámetro <paramref name="routeValues" /> se combina con los valores de ruta originales y los invalida.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="htmlHelper" /> es null.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="actionName" /> es null o está vacío.</exception>
      <exception cref="T:System.InvalidOperationException">No se pueden encontrar los datos de la ruta de acceso virtual necesarios.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Invoca un método de acción secundaria especificado y representa el resultado alineado en la vista primaria.</summary>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="actionName">Nombre del método de acción secundaria que se va a invocar.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="htmlHelper" /> es null.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="actionName" /> es null o está vacío.</exception>
      <exception cref="T:System.InvalidOperationException">No se pueden encontrar los datos de la ruta de acceso virtual necesarios.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Invoca el método de acción secundaria especificado mediante los parámetros especificados y representa el resultado alineado en la vista primaria.</summary>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="actionName">Nombre del método de acción secundaria que se va a invocar.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.Puede usar <paramref name="routeValues" /> para proporcionar los parámetros enlazados a los parámetros del método de acción.El parámetro <paramref name="routeValues" /> se combina con los valores de ruta originales y los invalida.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="htmlHelper" /> es null.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="actionName" /> es null o está vacío.</exception>
      <exception cref="T:System.InvalidOperationException">No se pueden encontrar los datos de la ruta de acceso virtual necesarios.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Invoca el método de acción secundaria especificado mediante el nombre de controlador especificado y representa el resultado alineado en la vista primaria.</summary>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="actionName">Nombre del método de acción secundaria que se va a invocar.</param>
      <param name="controllerName">Nombre del controlador que contiene el método de acción.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="htmlHelper" /> es null.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="actionName" /> es null o está vacío.</exception>
      <exception cref="T:System.InvalidOperationException">No se pueden encontrar los datos de la ruta de acceso virtual necesarios.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Invoca el método de acción secundaria especificado mediante los parámetros y el nombre de controlador especificados, y representa el resultado alineado en la vista primaria.</summary>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="actionName">Nombre del método de acción secundaria que se va a invocar.</param>
      <param name="controllerName">Nombre del controlador que contiene el método de acción.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.Puede usar <paramref name="routeValues" /> para proporcionar los parámetros enlazados a los parámetros del método de acción.El parámetro <paramref name="routeValues" /> se combina con los valores de ruta originales y los invalida.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="htmlHelper" /> es null.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="actionName" /> es null o está vacío.</exception>
      <exception cref="T:System.InvalidOperationException">No se pueden encontrar los datos de la ruta de acceso virtual necesarios.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Invoca el método de acción secundaria especificado mediante los parámetros y el nombre de controlador especificados, y representa el resultado alineado en la vista primaria.</summary>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="actionName">Nombre del método de acción secundaria que se va a invocar.</param>
      <param name="controllerName">Nombre del controlador que contiene el método de acción.</param>
      <param name="routeValues">Un diccionario que contiene los parámetros para una ruta.Puede usar <paramref name="routeValues" /> para proporcionar los parámetros enlazados a los parámetros del método de acción.El parámetro <paramref name="routeValues" /> se combina con los valores de ruta originales y los invalida.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="htmlHelper" /> es null.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="actionName" /> es null o está vacío.</exception>
      <exception cref="T:System.InvalidOperationException">No se pueden encontrar los datos de la ruta de acceso virtual necesarios.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Invoca el método de acción secundaria especificado mediante los parámetros especificados y representa el resultado alineado en la vista primaria.</summary>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="actionName">Nombre del método de acción secundaria que se va a invocar.</param>
      <param name="routeValues">Un diccionario que contiene los parámetros para una ruta.Puede usar <paramref name="routeValues" /> para proporcionar los parámetros enlazados a los parámetros del método de acción.El parámetro <paramref name="routeValues" /> se combina con los valores de ruta originales y los invalida.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="htmlHelper" /> es null.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="actionName" /> es null o está vacío.</exception>
      <exception cref="T:System.InvalidOperationException">No se pueden encontrar los datos de la ruta de acceso virtual necesarios.</exception>
    </member>
    <member name="T:System.Web.Mvc.Html.DisplayExtensions">
      <summary>Representa la compatibilidad para presentar los valores de objeto como HTML.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Devuelve el formato HTML para cada propiedad del objeto representado por una expresión de cadena.</summary>
      <returns>Formato HTML de cada propiedad en el objeto representado por la expresión.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Expresión que identifica el objeto que contiene las propiedades que se van a mostrar.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Devuelve el marcado HTML para cada propiedad del objeto representado por una expresión de cadena, utilizando los datos de vista adicionales.</summary>
      <returns>Formato HTML de cada propiedad en el objeto representado por la expresión.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Expresión que identifica el objeto que contiene las propiedades que se van a mostrar.</param>
      <param name="additionalViewData">Objeto anónimo que puede contener datos de vista adicionales que se combinarán en la instancia de <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> creada para la plantilla.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Devuelve el formato HTML para cada propiedad en el objeto representado por la expresión, utilizando la plantilla especificada.</summary>
      <returns>Formato HTML de cada propiedad en el objeto representado por la expresión.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Expresión que identifica el objeto que contiene las propiedades que se van a mostrar.</param>
      <param name="templateName">Nombre de la plantilla que se usa para presentar el objeto.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Devuelve el marcado HTML para cada propiedad del objeto representado por la expresión, utilizando la plantilla y los datos de vista adicionales especificados.</summary>
      <returns>Formato HTML de cada propiedad en el objeto representado por la expresión.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Expresión que identifica el objeto que contiene las propiedades que se van a mostrar.</param>
      <param name="templateName">Nombre de la plantilla que se usa para presentar el objeto.</param>
      <param name="additionalViewData">Objeto anónimo que puede contener datos de vista adicionales que se combinarán en la instancia de <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> creada para la plantilla.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String)">
      <summary>Devuelve el marcado HTML para cada propiedad del objeto representado por la expresión, utilizando la plantilla especificada y un identificador de campo HTML.</summary>
      <returns>Formato HTML de cada propiedad en el objeto representado por la expresión.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Expresión que identifica el objeto que contiene las propiedades que se van a mostrar.</param>
      <param name="templateName">Nombre de la plantilla que se usa para presentar el objeto.</param>
      <param name="htmlFieldName">Cadena que se usa para eliminar la ambigüedad de los nombres de los elementos input de HTML que se presentan para las propiedades con el mismo nombre.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.Object)">
      <summary>Devuelve el marcado HTML para cada propiedad del objeto representado por la expresión, utilizando la plantilla, el identificador de campo HTML y los datos de vista adicionales especificados.</summary>
      <returns>Formato HTML de cada propiedad en el objeto representado por la expresión.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Expresión que identifica el objeto que contiene las propiedades que se van a mostrar.</param>
      <param name="templateName">Nombre de la plantilla que se usa para presentar el objeto.</param>
      <param name="htmlFieldName">Cadena que se usa para eliminar la ambigüedad de los nombres de los elementos input de HTML que se presentan para las propiedades con el mismo nombre.</param>
      <param name="additionalViewData">Objeto anónimo que puede contener datos de vista adicionales que se combinarán en la instancia de <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> creada para la plantilla.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Devuelve el formato HTML de cada propiedad en el objeto representado por la expresión <see cref="T:System.Linq.Expressions.Expression" />.</summary>
      <returns>Formato HTML de cada propiedad en el objeto representado por la expresión.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Expresión que identifica el objeto que contiene las propiedades que se van a mostrar.</param>
      <typeparam name="TModel">Tipo del modelo.</typeparam>
      <typeparam name="TValue">Tipo del valor.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
      <summary>Devuelve una cadena que contiene cada valor de propiedad del objeto representado por la expresión especificada, utilizando los datos de vista adicionales.</summary>
      <returns>Formato HTML de cada propiedad en el objeto representado por la expresión.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Expresión que identifica el objeto que contiene las propiedades que se van a mostrar.</param>
      <param name="additionalViewData">Objeto anónimo que puede contener datos de vista adicionales que se combinarán en la instancia de <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> creada para la plantilla.</param>
      <typeparam name="TModel">Tipo del modelo.</typeparam>
      <typeparam name="TValue">Tipo del valor.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)">
      <summary>Devuelve una cadena que contiene cada valor de propiedad en el objeto representado por <see cref="T:System.Linq.Expressions.Expression" />, utilizando la plantilla especificada.</summary>
      <returns>Formato HTML de cada propiedad en el objeto representado por la expresión.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Expresión que identifica el objeto que contiene las propiedades que se van a mostrar.</param>
      <param name="templateName">Nombre de la plantilla que se usa para presentar el objeto.</param>
      <typeparam name="TModel">Tipo del modelo.</typeparam>
      <typeparam name="TValue">Tipo del valor.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object)">
      <summary>Devuelve una cadena que contiene cada valor de propiedad del objeto representado por la expresión especificada, utilizando la plantilla y los datos de vista adicionales especificados.</summary>
      <returns>Formato HTML de cada propiedad en el objeto representado por la expresión.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Expresión que identifica el objeto que contiene las propiedades que se van a mostrar.</param>
      <param name="templateName">Nombre de la plantilla que se usa para presentar el objeto.</param>
      <param name="additionalViewData">Objeto anónimo que puede contener datos de vista adicionales que se combinarán en la instancia de <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> creada para la plantilla.</param>
      <typeparam name="TModel">Tipo del modelo.</typeparam>
      <typeparam name="TValue">Tipo del valor.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.String)">
      <summary>Devuelve el marcado HTML para cada propiedad del objeto representado por <see cref="T:System.Linq.Expressions.Expression" />, utilizando la plantilla especificada y un identificador de campo HTML.</summary>
      <returns>Formato HTML de cada propiedad en el objeto representado por la expresión.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Expresión que identifica el objeto que contiene las propiedades que se van a mostrar.</param>
      <param name="templateName">Nombre de la plantilla que se usa para presentar el objeto.</param>
      <param name="htmlFieldName">Cadena que se usa para eliminar la ambigüedad de los nombres de los elementos input de HTML que se presentan para las propiedades con el mismo nombre.</param>
      <typeparam name="TModel">Tipo del modelo.</typeparam>
      <typeparam name="TValue">Tipo del valor.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.String,System.Object)">
      <summary>Devuelve el marcado HTML para cada propiedad del objeto representado por la expresión especificada, utilizando la plantilla, un identificador de campo HTML y los datos de vista adicionales.</summary>
      <returns>Formato HTML de cada propiedad en el objeto representado por la expresión.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Expresión que identifica el objeto que contiene las propiedades que se van a mostrar.</param>
      <param name="templateName">Nombre de la plantilla que se usa para presentar el objeto.</param>
      <param name="htmlFieldName">Cadena que se usa para eliminar la ambigüedad de los nombres de los elementos input de HTML que se presentan para las propiedades con el mismo nombre.</param>
      <param name="additionalViewData">Objeto anónimo que puede contener datos de vista adicionales que se combinarán en la instancia de <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> creada para la plantilla.</param>
      <typeparam name="TModel">Tipo del modelo.</typeparam>
      <typeparam name="TValue">Tipo del valor.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper)">
      <summary>Devuelve el formato HTML para cada propiedad del modelo.</summary>
      <returns>Formato HTML para cada propiedad en el modelo.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper,System.Object)">
      <summary>Devuelve el marcado HTML para cada propiedad del modelo, utilizando los datos de vista adicionales.</summary>
      <returns>Formato HTML para cada propiedad en el modelo.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="additionalViewData">Objeto anónimo que puede contener datos de vista adicionales que se combinarán en la instancia de <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> creada para la plantilla.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Devuelve el formato HTML para cada propiedad del modelo utilizando la plantilla especificada.</summary>
      <returns>Formato HTML para cada propiedad en el modelo.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="templateName">Nombre de la plantilla que se usa para presentar el objeto.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Devuelve el marcado HTML para cada propiedad del modelo, utilizando la plantilla y los datos de vista adicionales especificados.</summary>
      <returns>Formato HTML para cada propiedad en el modelo.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="templateName">Nombre de la plantilla que se usa para presentar el objeto.</param>
      <param name="additionalViewData">Objeto anónimo que puede contener datos de vista adicionales que se combinarán en la instancia de <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> creada para la plantilla.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Devuelve el formato HTML para cada propiedad del modelo utilizando la plantilla y el identificador de campo HTML especificados.</summary>
      <returns>Formato HTML para cada propiedad en el modelo.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="templateName">Nombre de la plantilla que se usa para presentar el objeto.</param>
      <param name="htmlFieldName">Cadena que se usa para eliminar la ambigüedad de los nombres de los elementos input de HTML que se presentan para las propiedades con el mismo nombre.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Devuelve el marcado HTML para cada propiedad del modelo, utilizando la plantilla especificada, un identificador de campo HTML y los datos de vista adicionales.</summary>
      <returns>Formato HTML para cada propiedad en el modelo.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="templateName">Nombre de la plantilla que se usa para presentar el objeto.</param>
      <param name="htmlFieldName">Cadena que se usa para eliminar la ambigüedad de los nombres de los elementos input de HTML que se presentan para las propiedades con el mismo nombre.</param>
      <param name="additionalViewData">Objeto anónimo que puede contener datos de vista adicionales que se combinarán en la instancia de <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> creada para la plantilla.</param>
    </member>
    <member name="T:System.Web.Mvc.Html.DisplayNameExtensions">
      <summary>Proporciona un mecanismo que permite obtener nombres para mostrar.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayNameExtensions.DisplayName(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Obtiene el nombre para mostrar.</summary>
      <returns>El nombre para mostrar.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Expresión que identifica el objeto que contiene el nombre para mostrar.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayNameExtensions.DisplayNameFor``2(System.Web.Mvc.HtmlHelper{System.Collections.Generic.IEnumerable{``0}},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Obtiene el nombre para mostrar del modelo.</summary>
      <returns>Nombre para mostrar del modelo.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Expresión que identifica el objeto que contiene el nombre para mostrar.</param>
      <typeparam name="TModel">Tipo del modelo.</typeparam>
      <typeparam name="TValue">Tipo del valor.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayNameExtensions.DisplayNameFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Obtiene el nombre para mostrar del modelo.</summary>
      <returns>Nombre para mostrar del modelo.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Expresión que identifica el objeto que contiene el nombre para mostrar.</param>
      <typeparam name="TModel">Tipo del modelo.</typeparam>
      <typeparam name="TValue">Tipo del valor.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayNameExtensions.DisplayNameForModel(System.Web.Mvc.HtmlHelper)">
      <summary>Obtiene el nombre para mostrar del modelo.</summary>
      <returns>Nombre para mostrar del modelo.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
    </member>
    <member name="T:System.Web.Mvc.Html.DisplayTextExtensions">
      <summary>Proporciona un medio para representar los valores de objeto como HTML.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayTextExtensions.DisplayText(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Devuelve el formato HTML para cada propiedad del objeto representado por la expresión especificada.</summary>
      <returns>Formato HTML de cada propiedad en el objeto representado por la expresión.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="name">Expresión que identifica el objeto que contiene las propiedades que se van a mostrar.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayTextExtensions.DisplayTextFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Devuelve el formato HTML para cada propiedad del objeto representado por la expresión especificada.</summary>
      <returns>El formato HTML de cada propiedad.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Expresión que identifica el objeto que contiene las propiedades que se van a mostrar.</param>
      <typeparam name="TModel">Tipo del modelo.</typeparam>
      <typeparam name="TResult">Tipo de resultado.</typeparam>
    </member>
    <member name="T:System.Web.Mvc.Html.EditorExtensions">
      <summary>Representa la compatibilidad para el elemento input HTML en una aplicación.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Devuelve un elemento input HTML para cada propiedad en el objeto representado por la expresión.</summary>
      <returns>Un elemento input HTML para cada propiedad en el objeto representado por la expresión.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Expresión que identifica el objeto que contiene las propiedades que se van a mostrar.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Devuelve un elemento input HTML para cada propiedad del objeto representado por la expresión, mediante los datos de vista adicionales.</summary>
      <returns>Un elemento input HTML para cada propiedad en el objeto representado por la expresión.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Expresión que identifica el objeto que contiene las propiedades que se van a mostrar.</param>
      <param name="additionalViewData">Objeto anónimo que puede contener datos de vista adicionales que se combinarán en la instancia de <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> creada para la plantilla.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Devuelve un elemento input HTML para cada propiedad en el objeto representado por la expresión, mediante la plantilla especificada.</summary>
      <returns>Un elemento input HTML para cada propiedad en el objeto representado por la expresión.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Expresión que identifica el objeto que contiene las propiedades que se van a mostrar.</param>
      <param name="templateName">Nombre de la plantilla que se va a usar para representar el objeto.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Devuelve un elemento input HTML para cada propiedad del objeto representado por la expresión, mediante la plantilla y los datos de vista adicionales especificados.</summary>
      <returns>Un elemento input HTML para cada propiedad en el objeto representado por la expresión.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Expresión que identifica el objeto que contiene las propiedades que se van a mostrar.</param>
      <param name="templateName">Nombre de la plantilla que se va a usar para representar el objeto.</param>
      <param name="additionalViewData">Objeto anónimo que puede contener datos de vista adicionales que se combinarán en la instancia de <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> creada para la plantilla.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String)">
      <summary>Devuelve un elemento input HTML para cada propiedad en el objeto representado por la expresión, mediante la plantilla y el nombre de campo HTML especificados.</summary>
      <returns>Un elemento input HTML para cada propiedad en el objeto representado por la expresión.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Expresión que identifica el objeto que contiene las propiedades que se van a mostrar.</param>
      <param name="templateName">Nombre de la plantilla que se va a usar para representar el objeto.</param>
      <param name="htmlFieldName">Cadena que se usa para eliminar la ambigüedad de los nombres de los elementos input de HTML que se presentan para las propiedades con el mismo nombre.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.Object)">
      <summary>Devuelve un elemento input HTML para cada propiedad del objeto representado por la expresión, mediante la plantilla, el nombre de campo HTML y los datos de vista adicionales especificados.</summary>
      <returns>Un elemento input HTML para cada propiedad en el objeto representado por la expresión.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Expresión que identifica el objeto que contiene las propiedades que se van a mostrar.</param>
      <param name="templateName">Nombre de la plantilla que se va a usar para representar el objeto.</param>
      <param name="htmlFieldName">Cadena que se usa para eliminar la ambigüedad de los nombres de los elementos input de HTML que se presentan para las propiedades con el mismo nombre.</param>
      <param name="additionalViewData">Objeto anónimo que puede contener datos de vista adicionales que se combinarán en la instancia de <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> creada para la plantilla.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Devuelve un elemento input HTML para cada propiedad en el objeto representado por la expresión <see cref="T:System.Linq.Expressions.Expression" />.</summary>
      <returns>Un elemento input HTML para cada propiedad en el objeto representado por la expresión.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Expresión que identifica el objeto que contiene las propiedades que se van a mostrar.</param>
      <typeparam name="TModel">Tipo del modelo.</typeparam>
      <typeparam name="TValue">Tipo del valor.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
      <summary>Devuelve un elemento input HTML para cada propiedad del objeto representado por la expresión, mediante los datos de vista adicionales.</summary>
      <returns>Un elemento input HTML para cada propiedad en el objeto representado por la expresión.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Expresión que identifica el objeto que contiene las propiedades que se van a mostrar.</param>
      <param name="additionalViewData">Objeto anónimo que puede contener datos de vista adicionales que se combinarán en la instancia de <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> creada para la plantilla.</param>
      <typeparam name="TModel">Tipo del modelo.</typeparam>
      <typeparam name="TValue">Tipo del valor.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)">
      <summary>Devuelve un elemento input HTML para cada propiedad en el objeto representado por la expresión <see cref="T:System.Linq.Expressions.Expression" />, mediante la plantilla especificada.</summary>
      <returns>Un elemento input HTML para cada propiedad en el objeto representado por la expresión.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Expresión que identifica el objeto que contiene las propiedades que se van a mostrar.</param>
      <param name="templateName">Nombre de la plantilla que se va a usar para representar el objeto.</param>
      <typeparam name="TModel">Tipo del modelo.</typeparam>
      <typeparam name="TValue">Tipo del valor.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object)">
      <summary>Devuelve un elemento input HTML para cada propiedad del objeto representado por la expresión, mediante la plantilla y los datos de vista adicionales especificados.</summary>
      <returns>Un elemento input HTML para cada propiedad en el objeto representado por la expresión.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Expresión que identifica el objeto que contiene las propiedades que se van a mostrar.</param>
      <param name="templateName">Nombre de la plantilla que se va a usar para representar el objeto.</param>
      <param name="additionalViewData">Objeto anónimo que puede contener datos de vista adicionales que se combinarán en la instancia de <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> creada para la plantilla.</param>
      <typeparam name="TModel">Tipo del modelo.</typeparam>
      <typeparam name="TValue">Tipo del valor.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.String)">
      <summary>Devuelve un elemento input HTML para cada propiedad en el objeto representado por la expresión <see cref="T:System.Linq.Expressions.Expression" />, mediante la plantilla y el nombre de campo HTML especificados.</summary>
      <returns>Un elemento input HTML para cada propiedad en el objeto representado por la expresión.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Expresión que identifica el objeto que contiene las propiedades que se van a mostrar.</param>
      <param name="templateName">Nombre de la plantilla que se va a usar para representar el objeto.</param>
      <param name="htmlFieldName">Cadena que se usa para eliminar la ambigüedad de los nombres de los elementos input de HTML que se presentan para las propiedades con el mismo nombre.</param>
      <typeparam name="TModel">Tipo del modelo.</typeparam>
      <typeparam name="TValue">Tipo del valor.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.String,System.Object)">
      <summary>Devuelve un elemento input HTML para cada propiedad del objeto representado por la expresión, mediante la plantilla, el nombre de campo HTML y los datos de vista adicionales especificados.</summary>
      <returns>Un elemento input HTML para cada propiedad en el objeto representado por la expresión.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Expresión que identifica el objeto que contiene las propiedades que se van a mostrar.</param>
      <param name="templateName">Nombre de la plantilla que se va a usar para representar el objeto.</param>
      <param name="htmlFieldName">Cadena que se usa para eliminar la ambigüedad de los nombres de los elementos input de HTML que se presentan para las propiedades con el mismo nombre.</param>
      <param name="additionalViewData">Objeto anónimo que puede contener datos de vista adicionales que se combinarán en la instancia de <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> creada para la plantilla.</param>
      <typeparam name="TModel">Tipo del modelo.</typeparam>
      <typeparam name="TValue">Tipo del valor.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper)">
      <summary>Devuelve un elemento input HTML para cada propiedad en el modelo.</summary>
      <returns>Un elemento input HTML para cada propiedad en el modelo.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper,System.Object)">
      <summary>Devuelve un elemento input HTML para cada propiedad del modelo, mediante los datos de vista adicionales.</summary>
      <returns>Un elemento input HTML para cada propiedad en el modelo.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="additionalViewData">Objeto anónimo que puede contener datos de vista adicionales que se combinarán en la instancia de <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> creada para la plantilla.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Devuelve un elemento input HTML para cada propiedad del modelo, mediante la plantilla especificada.</summary>
      <returns>Un elemento input HTML para cada propiedad en el modelo y en la plantilla especificada.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="templateName">Nombre de la plantilla que se va a usar para representar el objeto.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Devuelve un elemento input HTML para cada propiedad del modelo, mediante la plantilla y los datos de vista adicionales especificados.</summary>
      <returns>Un elemento input HTML para cada propiedad en el modelo.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="templateName">Nombre de la plantilla que se va a usar para representar el objeto.</param>
      <param name="additionalViewData">Objeto anónimo que puede contener datos de vista adicionales que se combinarán en la instancia de <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> creada para la plantilla.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Devuelve un elemento input HTML para cada propiedad del modelo, mediante el nombre de plantilla y el nombre de campo HTML especificados.</summary>
      <returns>Un elemento input HTML para cada propiedad en el modelo y en la plantilla con nombre.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="templateName">Nombre de la plantilla que se va a usar para representar el objeto.</param>
      <param name="htmlFieldName">Cadena que se usa para eliminar la ambigüedad de los nombres de los elementos input de HTML que se presentan para las propiedades con el mismo nombre.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Devuelve un elemento input HTML para cada propiedad del modelo, mediante el nombre de plantilla, el nombre de campo HTML y los datos de vista adicionales.</summary>
      <returns>Un elemento input HTML para cada propiedad en el modelo.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="templateName">Nombre de la plantilla que se va a usar para representar el objeto.</param>
      <param name="htmlFieldName">Cadena que se usa para eliminar la ambigüedad de los nombres de los elementos input de HTML que se presentan para las propiedades con el mismo nombre.</param>
      <param name="additionalViewData">Objeto anónimo que puede contener datos de vista adicionales que se combinarán en la instancia de <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> creada para la plantilla.</param>
    </member>
    <member name="T:System.Web.Mvc.Html.FormExtensions">
      <summary>Representa la compatibilidad para HTML en una aplicación.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper)">
      <summary>Escribe una etiqueta de apertura &lt;form&gt; para la respuesta.Cuando el usuario envíe el formulario, un método de acción procesará la solicitud.</summary>
      <returns>Etiqueta de apertura &lt;form&gt;. </returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.Object)">
      <summary>Escribe una etiqueta de apertura &lt;form&gt; para la respuesta.Cuando el usuario envíe el formulario, un método de acción procesará la solicitud.</summary>
      <returns>Etiqueta de apertura &lt;form&gt;.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.Los parámetros se recuperan mediante reflexión examinando las propiedades del objeto.Este objeto suele crearse utilizando la sintaxis del inicializador de objeto.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Escribe una etiqueta de apertura &lt;form&gt; para la respuesta.Cuando el usuario envíe el formulario, un método de acción procesará la solicitud.</summary>
      <returns>Etiqueta de apertura &lt;form&gt;.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="actionName">Nombre del método de la acción.</param>
      <param name="controllerName">Nombre del controlador.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Escribe una etiqueta de apertura &lt;form&gt; para la respuesta.Cuando el usuario envíe el formulario, un método de acción procesará la solicitud.</summary>
      <returns>Etiqueta de apertura &lt;form&gt;.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="actionName">Nombre del método de la acción.</param>
      <param name="controllerName">Nombre del controlador.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.Los parámetros se recuperan mediante reflexión examinando las propiedades del objeto.Este objeto suele crearse utilizando la sintaxis del inicializador de objeto.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object,System.Web.Mvc.FormMethod)">
      <summary>Escribe una etiqueta de apertura &lt;form&gt; para la respuesta.Cuando el usuario envíe el formulario, un método de acción procesará la solicitud.</summary>
      <returns>Etiqueta de apertura &lt;form&gt;.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="actionName">Nombre del método de la acción.</param>
      <param name="controllerName">Nombre del controlador.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.Los parámetros se recuperan mediante reflexión examinando las propiedades del objeto.Este objeto suele crearse utilizando la sintaxis del inicializador de objeto.</param>
      <param name="method">Método HTTP, ya sea GET o POST, que se va a usar para procesar el formulario.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object,System.Web.Mvc.FormMethod,System.Object)">
      <summary>Escribe una etiqueta de apertura &lt;form&gt; para la respuesta.Cuando el usuario envíe el formulario, un método de acción procesará la solicitud.</summary>
      <returns>Etiqueta de apertura &lt;form&gt;.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="actionName">Nombre del método de la acción.</param>
      <param name="controllerName">Nombre del controlador.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.Los parámetros se recuperan mediante reflexión examinando las propiedades del objeto.Este objeto suele crearse utilizando la sintaxis del inicializador de objeto.</param>
      <param name="method">Método HTTP, ya sea GET o POST, que se va a usar para procesar el formulario.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Mvc.FormMethod)">
      <summary>Escribe una etiqueta de apertura &lt;form&gt; para la respuesta.Cuando el usuario envíe el formulario, un método de acción procesará la solicitud.</summary>
      <returns>Etiqueta de apertura &lt;form&gt;.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="actionName">Nombre del método de la acción.</param>
      <param name="controllerName">Nombre del controlador.</param>
      <param name="method">Método HTTP, ya sea GET o POST, que se va a usar para procesar el formulario.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Mvc.FormMethod,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Escribe una etiqueta de apertura &lt;form&gt; para la respuesta.Cuando el usuario envíe el formulario, un método de acción procesará la solicitud.</summary>
      <returns>Etiqueta de apertura &lt;form&gt;.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="actionName">Nombre del método de la acción.</param>
      <param name="controllerName">Nombre del controlador.</param>
      <param name="method">Método HTTP, ya sea GET o POST, que se va a usar para procesar el formulario.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Mvc.FormMethod,System.Object)">
      <summary>Escribe una etiqueta de apertura &lt;form&gt; para la respuesta.Cuando el usuario envíe el formulario, un método de acción procesará la solicitud.</summary>
      <returns>Etiqueta de apertura &lt;form&gt;.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="actionName">Nombre del método de la acción.</param>
      <param name="controllerName">Nombre del controlador.</param>
      <param name="method">Método HTTP, ya sea GET o POST, que se va a usar para procesar el formulario.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Escribe una etiqueta de apertura &lt;form&gt; para la respuesta.Cuando el usuario envíe el formulario, un método de acción procesará la solicitud.</summary>
      <returns>Etiqueta de apertura &lt;form&gt;.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="actionName">Nombre del método de la acción.</param>
      <param name="controllerName">Nombre del controlador.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.FormMethod)">
      <summary>Escribe una etiqueta de apertura &lt;form&gt; para la respuesta.Cuando el usuario envíe el formulario, un método de acción procesará la solicitud.</summary>
      <returns>Etiqueta de apertura &lt;form&gt;.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="actionName">Nombre del método de la acción.</param>
      <param name="controllerName">Nombre del controlador.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.</param>
      <param name="method">Método HTTP, ya sea GET o POST, que se va a usar para procesar el formulario.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.FormMethod,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Escribe una etiqueta de apertura &lt;form&gt; para la respuesta.Cuando el usuario envíe el formulario, un método de acción procesará la solicitud.</summary>
      <returns>Etiqueta de apertura &lt;form&gt;.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="actionName">Nombre del método de la acción.</param>
      <param name="controllerName">Nombre del controlador.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.</param>
      <param name="method">Método HTTP, ya sea GET o POST, que se va a usar para procesar el formulario.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.Web.Routing.RouteValueDictionary)">
      <summary>Escribe una etiqueta de apertura &lt;form&gt; para la respuesta.Cuando el usuario envíe el formulario, un método de acción procesará la solicitud.</summary>
      <returns>Etiqueta de apertura &lt;form&gt;.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.Object)">
      <summary>Escribe una etiqueta de apertura &lt;form&gt; para la respuesta.Cuando el usuario envíe el formulario, el destino de ruta procesará la solicitud.</summary>
      <returns>Etiqueta de apertura &lt;form&gt;.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.Los parámetros se recuperan mediante reflexión examinando las propiedades del objeto.Este objeto suele crearse utilizando la sintaxis del inicializador de objeto.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Escribe una etiqueta de apertura &lt;form&gt; para la respuesta.Cuando el usuario envíe el formulario, el destino de ruta procesará la solicitud.</summary>
      <returns>Etiqueta de apertura &lt;form&gt;.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="routeName">Nombre de la ruta que se usa para obtener la dirección URL de envío del formulario.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Escribe una etiqueta de apertura &lt;form&gt; para la respuesta.Cuando el usuario envíe el formulario, el destino de ruta procesará la solicitud.</summary>
      <returns>Etiqueta de apertura &lt;form&gt;.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="routeName">Nombre de la ruta que se usa para obtener la dirección URL de envío del formulario.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.Los parámetros se recuperan mediante reflexión examinando las propiedades del objeto.Este objeto suele crearse utilizando la sintaxis del inicializador de objeto.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Web.Mvc.FormMethod)">
      <summary>Escribe una etiqueta de apertura &lt;form&gt; para la respuesta.Cuando el usuario envíe el formulario, el destino de ruta procesará la solicitud.</summary>
      <returns>Etiqueta de apertura &lt;form&gt;.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="routeName">Nombre de la ruta que se usa para obtener la dirección URL de envío del formulario.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.Los parámetros se recuperan mediante reflexión examinando las propiedades del objeto.Este objeto suele crearse utilizando la sintaxis del inicializador de objeto.</param>
      <param name="method">Método HTTP, ya sea GET o POST, que se va a usar para procesar el formulario.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Web.Mvc.FormMethod,System.Object)">
      <summary>Escribe una etiqueta de apertura &lt;form&gt; para la respuesta.Cuando el usuario envíe el formulario, el destino de ruta procesará la solicitud.</summary>
      <returns>Etiqueta de apertura &lt;form&gt;.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="routeName">Nombre de la ruta que se usa para obtener la dirección URL de envío del formulario.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.Los parámetros se recuperan mediante reflexión examinando las propiedades del objeto.Este objeto suele crearse utilizando la sintaxis del inicializador de objeto.</param>
      <param name="method">Método HTTP, ya sea GET o POST, que se va a usar para procesar el formulario.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Mvc.FormMethod)">
      <summary>Escribe una etiqueta de apertura &lt;form&gt; para la respuesta.Cuando el usuario envíe el formulario, el destino de ruta procesará la solicitud.</summary>
      <returns>Etiqueta de apertura &lt;form&gt;.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="routeName">Nombre de la ruta que se usa para obtener la dirección URL de envío del formulario.</param>
      <param name="method">Método HTTP, ya sea GET o POST, que se va a usar para procesar el formulario.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Mvc.FormMethod,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Escribe una etiqueta de apertura &lt;form&gt; para la respuesta.Cuando el usuario envíe el formulario, el destino de ruta procesará la solicitud.</summary>
      <returns>Etiqueta de apertura &lt;form&gt;.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="routeName">Nombre de la ruta que se usa para obtener la dirección URL de envío del formulario.</param>
      <param name="method">Método HTTP, ya sea GET o POST, que se va a usar para procesar el formulario.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Mvc.FormMethod,System.Object)">
      <summary>Escribe una etiqueta de apertura &lt;form&gt; para la respuesta.Cuando el usuario envíe el formulario, el destino de ruta procesará la solicitud.</summary>
      <returns>Etiqueta de apertura &lt;form&gt;.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="routeName">Nombre de la ruta que se usa para obtener la dirección URL de envío del formulario.</param>
      <param name="method">Método HTTP, ya sea GET o POST, que se va a usar para procesar el formulario.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Escribe una etiqueta de apertura &lt;form&gt; para la respuesta.Cuando el usuario envíe el formulario, el destino de ruta procesará la solicitud.</summary>
      <returns>Etiqueta de apertura &lt;form&gt;.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="routeName">Nombre de la ruta que se usa para obtener la dirección URL de envío del formulario.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.FormMethod)">
      <summary>Escribe una etiqueta de apertura &lt;form&gt; para la respuesta.Cuando el usuario envíe el formulario, el destino de ruta procesará la solicitud.</summary>
      <returns>Etiqueta de apertura &lt;form&gt;.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="routeName">Nombre de la ruta que se usa para obtener la dirección URL de envío del formulario.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.</param>
      <param name="method">Método HTTP, ya sea GET o POST, que se va a usar para procesar el formulario.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.FormMethod,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Escribe una etiqueta de apertura &lt;form&gt; para la respuesta.Cuando el usuario envíe el formulario, el destino de ruta procesará la solicitud.</summary>
      <returns>Etiqueta de apertura &lt;form&gt;.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="routeName">Nombre de la ruta que se usa para obtener la dirección URL de envío del formulario.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.</param>
      <param name="method">Método HTTP, ya sea GET o POST, que se va a usar para procesar el formulario.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.Web.Routing.RouteValueDictionary)">
      <summary>Escribe una etiqueta de apertura &lt;form&gt; para la respuesta.Cuando el usuario envíe el formulario, el destino de ruta procesará la solicitud.</summary>
      <returns>Etiqueta de apertura &lt;form&gt;.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.EndForm(System.Web.Mvc.HtmlHelper)">
      <summary>Presenta la etiqueta de cierre &lt;/form&gt; para la respuesta. </summary>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
    </member>
    <member name="T:System.Web.Mvc.Html.InputExtensions">
      <summary>Representa la compatibilidad para los controles de entrada HTML en una aplicación.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Devuelve un elemento input de casilla mediante la aplicación auxiliar HTML especificada y el nombre del campo de formulario.</summary>
      <returns>Elemento input cuyo atributo type está establecido como "checkbox".</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="name">Nombre del campo de formulario.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String,System.Boolean)">
      <summary>Devuelve un elemento input de casilla mediante la aplicación auxiliar HTML especificada, el nombre del campo de formulario y un valor que indica si la casilla está activada.</summary>
      <returns>Elemento input cuyo atributo type está establecido como "checkbox".</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="name">Nombre del campo de formulario.</param>
      <param name="isChecked">true para activar la casilla; de lo contrario, false.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve un elemento input de casilla mediante la aplicación auxiliar HTML especificada, el nombre del campo de formulario, un valor que indica si la casilla está activada y los atributos HTML.</summary>
      <returns>Elemento input cuyo atributo type está establecido como "checkbox".</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="name">Nombre del campo de formulario.</param>
      <param name="isChecked">true para activar la casilla; de lo contrario, false.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String,System.Boolean,System.Object)">
      <summary>Devuelve un elemento input de casilla mediante la aplicación auxiliar HTML especificada, el nombre del campo de formulario, un valor que indica si la casilla está activada y los atributos HTML.</summary>
      <returns>Elemento input cuyo atributo type está establecido como "checkbox".</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="name">Nombre del campo de formulario.</param>
      <param name="isChecked">true para activar la casilla; de lo contrario, false.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve un elemento input de casilla mediante la aplicación auxiliar HTML especificada, el nombre del campo de formulario y los atributos HTML.</summary>
      <returns>Elemento input cuyo atributo type está establecido como "checkbox".</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="name">Nombre del campo de formulario.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Devuelve un elemento input de casilla mediante la aplicación auxiliar HTML especificada, el nombre del campo de formulario y los atributos HTML.</summary>
      <returns>Elemento input cuyo atributo type está establecido como "checkbox".</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="name">Nombre del campo de formulario.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBoxFor``1(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <summary>Devuelve un elemento input de casilla para cada propiedad del objeto representado por la expresión especificada.</summary>
      <returns>Elemento input HTML cuyo atributo type se establece en "checkbox" para cada propiedad del objeto representado por la expresión especificada.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Una expresión que identifica el objeto que contiene las propiedades que se van a representar.</param>
      <typeparam name="TModel">Tipo del modelo.</typeparam>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="expression" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBoxFor``1(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve un elemento input de casilla para cada propiedad del objeto representado por la expresión especificada, usando los atributos HTML especificados.</summary>
      <returns>Elemento input de HTML cuyo atributo type se establece en "checkbox" para cada propiedad del objeto representado por la expresión especificada, usando los atributos HTML especificados.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Una expresión que identifica el objeto que contiene las propiedades que se van a representar.</param>
      <param name="htmlAttributes">Un diccionario que contiene los atributos HTML que se van a establecer para el elemento.</param>
      <typeparam name="TModel">Tipo del modelo.</typeparam>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="expression" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBoxFor``1(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Object)">
      <summary>Devuelve un elemento input de casilla para cada propiedad del objeto representado por la expresión especificada, usando los atributos HTML especificados.</summary>
      <returns>Elemento input de HTML cuyo atributo type se establece en "checkbox" para cada propiedad del objeto representado por la expresión especificada, usando los atributos HTML especificados.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Una expresión que identifica el objeto que contiene las propiedades que se van a representar.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
      <typeparam name="TModel">Tipo del modelo.</typeparam>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="expression" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Hidden(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Devuelve un elemento input oculto mediante la aplicación auxiliar HTML especificada y el nombre del campo de formulario.</summary>
      <returns>Elemento input cuyo atributo type está establecido como "hidden".</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="name">Nombre del campo de formulario y clave de <see cref="T:System.Web.Mvc.ViewDataDictionary" /> que se usa para buscar el valor.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Hidden(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Devuelve un elemento input oculto mediante la aplicación auxiliar HTML especificada, el nombre del campo de formulario y el valor.</summary>
      <returns>Elemento input cuyo atributo type está establecido como "hidden".</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="name">Nombre del campo de formulario y clave de <see cref="T:System.Web.Mvc.ViewDataDictionary" /> que se usa para buscar el valor.</param>
      <param name="value">Valor del elemento input oculto.El valor del elemento se recupera del objeto <see cref="T:System.Web.Mvc.ViewDataDictionary" />.Si no existe ningún valor ahí, el valor se recuperará desde el objeto <see cref="T:System.Web.Mvc.ModelStateDictionary" />.Si no se encuentra el elemento en el objeto <see cref="T:System.Web.Mvc.ViewDataDictionary" /> o <see cref="T:System.Web.Mvc.ModelStateDictionary" />, se usará el parámetro del valor.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Hidden(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve un elemento input oculto mediante la aplicación auxiliar HTML especificada, el nombre del campo de formulario, el valor y los atributos HTML.</summary>
      <returns>Elemento input cuyo atributo type está establecido como "hidden".</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="name">Nombre del campo de formulario y clave de <see cref="T:System.Web.Mvc.ViewDataDictionary" /> que se usa para buscar el valor.</param>
      <param name="value">Valor del elemento input oculto.El valor del elemento se recupera del objeto <see cref="T:System.Web.Mvc.ViewDataDictionary" />.Si no existe ningún valor ahí, el valor se recuperará desde el objeto <see cref="T:System.Web.Mvc.ModelStateDictionary" />.Si no se encuentra el elemento en el objeto <see cref="T:System.Web.Mvc.ViewDataDictionary" /> o <see cref="T:System.Web.Mvc.ModelStateDictionary" />, se usará el parámetro del valor.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Hidden(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Object)">
      <summary>Devuelve un elemento input oculto mediante la aplicación auxiliar HTML especificada, el nombre del campo de formulario, el valor y los atributos HTML.</summary>
      <returns>Elemento input cuyo atributo type está establecido como "hidden".</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="name">Nombre del campo de formulario y clave de <see cref="T:System.Web.Mvc.ViewDataDictionary" /> que se usa para buscar el valor.</param>
      <param name="value">Valor del elemento input oculto. El valor del elemento se recupera del objeto <see cref="T:System.Web.Mvc.ViewDataDictionary" />.Si no existe ningún valor ahí, el valor se recuperará desde el objeto <see cref="T:System.Web.Mvc.ModelStateDictionary" />.Si no se encuentra el elemento en el objeto <see cref="T:System.Web.Mvc.ViewDataDictionary" /> o <see cref="T:System.Web.Mvc.ModelStateDictionary" />, se usará el parámetro del valor.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.HiddenFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Devuelve un elemento input oculto de HTML para cada propiedad del objeto representada por la expresión especificada.</summary>
      <returns>Elemento input cuyo atributo type se establece en "hidden" para cada propiedad del objeto representado por la expresión.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Una expresión que identifica el objeto que contiene las propiedades que se van a representar.</param>
      <typeparam name="TModel">Tipo del modelo.</typeparam>
      <typeparam name="TProperty">Tipo de propiedad.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.HiddenFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve un elemento input oculto de HTML para cada propiedad del objeto representada por la expresión especificada, usando los atributos HTML especificados.</summary>
      <returns>Elemento input cuyo atributo type se establece en "hidden" para cada propiedad del objeto representado por la expresión.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Una expresión que identifica el objeto que contiene las propiedades que se van a representar.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
      <typeparam name="TModel">Tipo del modelo.</typeparam>
      <typeparam name="TProperty">Tipo de propiedad.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.HiddenFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
      <summary>Devuelve un elemento input oculto de HTML para cada propiedad del objeto representada por la expresión especificada, usando los atributos HTML especificados.</summary>
      <returns>Elemento input cuyo atributo type se establece en "hidden" para cada propiedad del objeto representado por la expresión.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Una expresión que identifica el objeto que contiene las propiedades que se van a representar.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
      <typeparam name="TModel">Tipo del modelo.</typeparam>
      <typeparam name="TProperty">Tipo de propiedad.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Password(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Devuelve un elemento input de contraseña mediante la aplicación auxiliar HTML especificada y el nombre del campo de formulario.</summary>
      <returns>Elemento input cuyo atributo type está establecido como "password".</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="name">Nombre del campo de formulario y clave de <see cref="T:System.Web.Mvc.ViewDataDictionary" /> que se usa para buscar el valor.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Password(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Devuelve un elemento input de contraseña mediante la aplicación auxiliar HTML especificada, el nombre del campo de formulario y el valor.</summary>
      <returns>Elemento input cuyo atributo type está establecido como "password".</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="name">Nombre del campo de formulario y clave de <see cref="T:System.Web.Mvc.ViewDataDictionary" /> que se usa para buscar el valor.</param>
      <param name="value">Valor del elemento input de contraseña.Si este valor es null, el valor del elemento se recupera del objeto <see cref="T:System.Web.Mvc.ViewDataDictionary" />.Si no existe ningún valor ahí, el valor se recuperará desde el objeto <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Password(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve un elemento input de contraseña mediante la aplicación auxiliar HTML especificada, el nombre del campo de formulario, el valor y los atributos HTML.</summary>
      <returns>Elemento input cuyo atributo type está establecido como "password".</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="name">Nombre del campo de formulario y clave de <see cref="T:System.Web.Mvc.ViewDataDictionary" /> que se usa para buscar el valor.</param>
      <param name="value">Valor del elemento input de contraseña.Si este valor es null, el valor del elemento se recupera del objeto <see cref="T:System.Web.Mvc.ViewDataDictionary" />.Si no existe ningún valor ahí, el valor se recuperará desde el objeto <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Password(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Object)">
      <summary>Devuelve un elemento input de contraseña mediante la aplicación auxiliar HTML especificada, el nombre del campo de formulario, el valor y los atributos HTML.</summary>
      <returns>Elemento input cuyo atributo type está establecido como "password".</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="name">Nombre del campo de formulario y clave de <see cref="T:System.Web.Mvc.ViewDataDictionary" /> que se usa para buscar el valor.</param>
      <param name="value">Valor del elemento input de contraseña.Si este valor es null, el valor del elemento se recupera del objeto <see cref="T:System.Web.Mvc.ViewDataDictionary" />.Si no existe ningún valor ahí, el valor se recuperará desde el objeto <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.PasswordFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Devuelve un elemento input de contraseña para cada propiedad del objeto representada por la expresión especificada.</summary>
      <returns>Elemento input HTML cuyo atributo type se establece en "password" para cada propiedad del objeto representado por la expresión especificada.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Una expresión que identifica el objeto que contiene las propiedades que se van a representar.</param>
      <typeparam name="TModel">Tipo del modelo.</typeparam>
      <typeparam name="TProperty">Tipo del valor.</typeparam>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="expression" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.PasswordFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve un elemento input de contraseña para cada propiedad del objeto representada por la expresión especificada, usando los atributos HTML especificados.</summary>
      <returns>Elemento input de HTML cuyo atributo type se establece en "password" para cada propiedad del objeto representado por la expresión especificada, usando los atributos HTML especificados.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Una expresión que identifica el objeto que contiene las propiedades que se van a representar.</param>
      <param name="htmlAttributes">Un diccionario que contiene los atributos HTML que se van a establecer para el elemento.</param>
      <typeparam name="TModel">Tipo del modelo.</typeparam>
      <typeparam name="TProperty">Tipo del valor.</typeparam>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="expression" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.PasswordFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
      <summary>Devuelve un elemento input de contraseña para cada propiedad del objeto representada por la expresión especificada, usando los atributos HTML especificados.</summary>
      <returns>Elemento input de HTML cuyo atributo type se establece en "password" para cada propiedad del objeto representado por la expresión especificada, usando los atributos HTML especificados.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Una expresión que identifica el objeto que contiene las propiedades que se van a representar.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
      <typeparam name="TModel">Tipo del modelo.</typeparam>
      <typeparam name="TProperty">Tipo del valor.</typeparam>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="expression" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Devuelve un elemento input de botón de radio que se utiliza para presentar opciones mutuamente excluyentes.</summary>
      <returns>Elemento input cuyo atributo type está establecido como "radio".</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="name">Nombre del campo de formulario y clave de <see cref="T:System.Web.Mvc.ViewDataDictionary" /> que se usa para buscar el valor.</param>
      <param name="value">Si este botón de radio está seleccionado, se devuelve el valor del botón de radio que se envía al exponer el formulario.Si el valor del botón de radio seleccionado en el objeto <see cref="T:System.Web.Mvc.ViewDataDictionary" /> o <see cref="T:System.Web.Mvc.ModelStateDictionary" /> coincide con este valor, este botón de radio estará seleccionado.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="name" /> es null o está vacío.</exception>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="value" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Boolean)">
      <summary>Devuelve un elemento input de botón de radio que se utiliza para presentar opciones mutuamente excluyentes.</summary>
      <returns>Elemento input cuyo atributo type está establecido como "radio".</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="name">Nombre del campo de formulario y clave de <see cref="T:System.Web.Mvc.ViewDataDictionary" /> que se usa para buscar el valor.</param>
      <param name="value">Si este botón de radio está seleccionado, se devuelve el valor del botón de radio que se envía al exponer el formulario.Si el valor del botón de radio seleccionado en el objeto <see cref="T:System.Web.Mvc.ViewDataDictionary" /> o <see cref="T:System.Web.Mvc.ModelStateDictionary" /> coincide con este valor, este botón de radio estará seleccionado.</param>
      <param name="isChecked">true para seleccionar el botón de radio; de lo contrario, false.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="name" /> es null o está vacío.</exception>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="value" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve un elemento input de botón de radio que se utiliza para presentar opciones mutuamente excluyentes.</summary>
      <returns>Elemento input cuyo atributo type está establecido como "radio".</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="name">Nombre del campo de formulario y clave de <see cref="T:System.Web.Mvc.ViewDataDictionary" /> que se usa para buscar el valor.</param>
      <param name="value">Si este botón de radio está seleccionado, se devuelve el valor del botón de radio que se envía al exponer el formulario.Si el valor del botón de radio seleccionado en el objeto <see cref="T:System.Web.Mvc.ViewDataDictionary" /> o <see cref="T:System.Web.Mvc.ModelStateDictionary" /> coincide con este valor, este botón de radio estará seleccionado.</param>
      <param name="isChecked">true para seleccionar el botón de radio; de lo contrario, false.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="name" /> es null o está vacío.</exception>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="value" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Boolean,System.Object)">
      <summary>Devuelve un elemento input de botón de radio que se utiliza para presentar opciones mutuamente excluyentes.</summary>
      <returns>Elemento input cuyo atributo type está establecido como "radio".</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="name">Nombre del campo de formulario y clave de <see cref="T:System.Web.Mvc.ViewDataDictionary" /> que se usa para buscar el valor.</param>
      <param name="value">Si este botón de radio está seleccionado, se devuelve el valor del botón de radio que se envía al exponer el formulario.Si el valor del botón de radio seleccionado en el objeto <see cref="T:System.Web.Mvc.ViewDataDictionary" /> o <see cref="T:System.Web.Mvc.ModelStateDictionary" /> coincide con este valor, este botón de radio estará seleccionado.</param>
      <param name="isChecked">true para seleccionar el botón de radio; de lo contrario, false.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="name" /> es null o está vacío.</exception>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="value" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve un elemento input de botón de radio que se utiliza para presentar opciones mutuamente excluyentes.</summary>
      <returns>Elemento input cuyo atributo type está establecido como "radio".</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="name">Nombre del campo de formulario y clave de <see cref="T:System.Web.Mvc.ViewDataDictionary" /> que se usa para buscar el valor.</param>
      <param name="value">Si este botón de radio está seleccionado, se devuelve el valor del botón de radio que se envía al exponer el formulario.Si el valor del botón de radio seleccionado en el objeto <see cref="T:System.Web.Mvc.ViewDataDictionary" /> o <see cref="T:System.Web.Mvc.ModelStateDictionary" /> coincide con este valor, este botón de radio estará seleccionado.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="name" /> es null o está vacío.</exception>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="value" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Object)">
      <summary>Devuelve un elemento input de botón de radio que se utiliza para presentar opciones mutuamente excluyentes.</summary>
      <returns>Elemento input cuyo atributo type está establecido como "radio".</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="name">Nombre del campo de formulario y clave de <see cref="T:System.Web.Mvc.ViewDataDictionary" /> que se usa para buscar el valor.</param>
      <param name="value">Si este botón de radio está seleccionado, se devuelve el valor del botón de radio que se envía al exponer el formulario.Si el valor del botón de radio seleccionado en el objeto <see cref="T:System.Web.Mvc.ViewDataDictionary" /> o <see cref="T:System.Web.Mvc.ModelStateDictionary" /> coincide con este valor, este botón de radio estará seleccionado.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="name" /> es null o está vacío.</exception>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="value" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButtonFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
      <summary>Devuelve un elemento input de botón de radio para cada propiedad del objeto representado por la expresión especificada.</summary>
      <returns>Elemento input HTML cuyo atributo type se establece en "radio" para cada propiedad del objeto representado por la expresión especificada.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Una expresión que identifica el objeto que contiene las propiedades que se van a representar.</param>
      <param name="value">Si este botón de radio está seleccionado, se devuelve el valor del botón de radio que se envía al exponer el formulario.Si el valor del botón de radio seleccionado en el objeto <see cref="T:System.Web.Mvc.ViewDataDictionary" /> o <see cref="T:System.Web.Mvc.ModelStateDictionary" /> coincide con este valor, este botón de radio estará seleccionado.</param>
      <typeparam name="TModel">Tipo del modelo.</typeparam>
      <typeparam name="TProperty">Tipo del valor.</typeparam>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="value" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButtonFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve un elemento input de botón de radio para cada propiedad del objeto representado por la expresión especificada, usando los atributos HTML especificados.</summary>
      <returns>Elemento input de HTML cuyo atributo type se establece en "radio" para cada propiedad del objeto representado por la expresión especificada, usando los atributos HTML especificados.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Una expresión que identifica el objeto que contiene las propiedades que se van a representar.</param>
      <param name="value">Si este botón de radio está seleccionado, se devuelve el valor del botón de radio que se envía al exponer el formulario.Si el valor del botón de radio seleccionado en el objeto <see cref="T:System.Web.Mvc.ViewDataDictionary" /> o <see cref="T:System.Web.Mvc.ModelStateDictionary" /> coincide con este valor, este botón de radio estará seleccionado.</param>
      <param name="htmlAttributes">Un diccionario que contiene los atributos HTML que se van a establecer para el elemento.</param>
      <typeparam name="TModel">Tipo del modelo.</typeparam>
      <typeparam name="TProperty">Tipo del valor.</typeparam>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="value" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButtonFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object,System.Object)">
      <summary>Devuelve un elemento input de botón de radio para cada propiedad del objeto representado por la expresión especificada, usando los atributos HTML especificados.</summary>
      <returns>Elemento input de HTML cuyo atributo type se establece en "radio" para cada propiedad del objeto representado por la expresión especificada, usando los atributos HTML especificados.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Una expresión que identifica el objeto que contiene las propiedades que se van a representar.</param>
      <param name="value">Si este botón de radio está seleccionado, se devuelve el valor del botón de radio que se envía al exponer el formulario.Si el valor del botón de radio seleccionado en el objeto <see cref="T:System.Web.Mvc.ViewDataDictionary" /> o <see cref="T:System.Web.Mvc.ModelStateDictionary" /> coincide con este valor, este botón de radio estará seleccionado.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
      <typeparam name="TModel">Tipo del modelo.</typeparam>
      <typeparam name="TProperty">Tipo del valor.</typeparam>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="value" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Devuelve un elemento input de texto mediante la aplicación auxiliar HTML especificada y el nombre del campo de formulario.</summary>
      <returns>Elemento input cuyo atributo type está establecido como "text".</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="name">Nombre del campo de formulario y clave de <see cref="T:System.Web.Mvc.ViewDataDictionary" /> que se usa para buscar el valor.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Devuelve un elemento input de texto mediante la aplicación auxiliar HTML especificada, el nombre del campo de formulario y el valor.</summary>
      <returns>Elemento input cuyo atributo type está establecido como "text".</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="name">Nombre del campo de formulario y clave de <see cref="T:System.Web.Mvc.ViewDataDictionary" /> que se usa para buscar el valor.</param>
      <param name="value">Valor del elemento input de texto.Si este valor es null, el valor del elemento se recupera del objeto <see cref="T:System.Web.Mvc.ViewDataDictionary" />.Si no existe ningún valor ahí, el valor se recuperará desde el objeto <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve un elemento input de texto mediante la aplicación auxiliar HTML especificada, el nombre del campo de formulario, el valor y los atributos HTML.</summary>
      <returns>Elemento input cuyo atributo type está establecido como "text".</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="name">Nombre del campo de formulario y clave de <see cref="T:System.Web.Mvc.ViewDataDictionary" /> que se usa para buscar el valor.</param>
      <param name="value">Valor del elemento input de texto.Si este valor es null, el valor del elemento se recupera del objeto <see cref="T:System.Web.Mvc.ViewDataDictionary" />.Si no existe ningún valor ahí, el valor se recuperará desde el objeto <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Object)">
      <summary>Devuelve un elemento input de texto mediante la aplicación auxiliar HTML especificada, el nombre del campo de formulario, el valor y los atributos HTML.</summary>
      <returns>Elemento input cuyo atributo type está establecido como "text".</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="name">Nombre del campo de formulario y clave de <see cref="T:System.Web.Mvc.ViewDataDictionary" /> que se usa para buscar el valor.</param>
      <param name="value">Valor del elemento input de texto.Si este valor es null, el valor del elemento se recupera del objeto <see cref="T:System.Web.Mvc.ViewDataDictionary" />.Si no existe ningún valor ahí, el valor se recuperará desde el objeto <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.String)">
      <summary>Devuelve un elemento input de texto.</summary>
      <returns>Elemento input cuyo atributo type está establecido como "text".</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="name">Nombre del campo de formulario.</param>
      <param name="value">Valor del elemento input de texto.Si este valor es null, el valor del elemento se recupera del objeto <see cref="T:System.Web.Mvc.ViewDataDictionary" />.Si no existe ningún valor ahí, el valor se recuperará desde el objeto <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</param>
      <param name="format">Cadena que se usa para dar formato a la entrada.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve un elemento input de texto.</summary>
      <returns>Elemento input cuyo atributo type está establecido como "text".</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="name">Nombre del campo de formulario y clave de <see cref="T:System.Web.Mvc.ViewDataDictionary" /> que se usa para buscar el valor.</param>
      <param name="value">Valor del elemento input de texto.Si este valor es null, el valor del elemento se recupera del objeto <see cref="T:System.Web.Mvc.ViewDataDictionary" />.Si no existe ningún valor ahí, el valor se recuperará desde el objeto <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</param>
      <param name="format">Cadena que se usa para dar formato a la entrada.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.String,System.Object)">
      <summary>Devuelve un elemento input de texto.</summary>
      <returns>Elemento input cuyo atributo type está establecido como "text".</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="name">Nombre del campo de formulario y clave de <see cref="T:System.Web.Mvc.ViewDataDictionary" /> que se usa para buscar el valor.</param>
      <param name="value">Valor del elemento input de texto.Si este valor es null, el valor del elemento se recupera del objeto <see cref="T:System.Web.Mvc.ViewDataDictionary" />.Si no existe ningún valor ahí, el valor se recuperará desde el objeto <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</param>
      <param name="format">Cadena que se usa para dar formato a la entrada.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Devuelve un elemento input de texto para cada propiedad del objeto representada por la expresión especificada.</summary>
      <returns>Elemento input HTML cuyo atributo type se establece en "text" para cada propiedad del objeto representado por la expresión.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Una expresión que identifica el objeto que contiene las propiedades que se van a representar.</param>
      <typeparam name="TModel">Tipo del modelo.</typeparam>
      <typeparam name="TProperty">Tipo del valor.</typeparam>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="expression" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve un elemento input de texto para cada propiedad del objeto representada por la expresión especificada, usando los atributos HTML especificados.</summary>
      <returns>Elemento input HTML cuyo atributo type se establece en "text" para cada propiedad del objeto representado por la expresión.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Una expresión que identifica el objeto que contiene las propiedades que se van a representar.</param>
      <param name="htmlAttributes">Un diccionario que contiene los atributos HTML que se van a establecer para el elemento.</param>
      <typeparam name="TModel">Tipo del modelo.</typeparam>
      <typeparam name="TProperty">Tipo del valor.</typeparam>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="expression" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
      <summary>Devuelve un elemento input de texto para cada propiedad del objeto representada por la expresión especificada, usando los atributos HTML especificados.</summary>
      <returns>Elemento input HTML cuyo atributo type se establece en "text" para cada propiedad del objeto representado por la expresión.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Una expresión que identifica el objeto que contiene las propiedades que se van a representar.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
      <typeparam name="TModel">Tipo del modelo.</typeparam>
      <typeparam name="TProperty">Tipo del valor.</typeparam>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="expression" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)">
      <summary>Devuelve un elemento input de texto.</summary>
      <returns>Elemento input cuyo atributo type está establecido como "text".</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Expresión que identifica el objeto que contiene las propiedades que se van a mostrar.</param>
      <param name="format">Cadena que se usa para dar formato a la entrada.</param>
      <typeparam name="TModel">Tipo del modelo.</typeparam>
      <typeparam name="TProperty">Tipo del valor.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve un elemento input de texto.</summary>
      <returns>Elemento input cuyo atributo type está establecido como "text".</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Expresión que identifica el objeto que contiene las propiedades que se van a mostrar.</param>
      <param name="format">Cadena que se usa para dar formato a la entrada.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
      <typeparam name="TModel">Tipo del modelo.</typeparam>
      <typeparam name="TProperty">Tipo del valor.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object)">
      <summary>Devuelve un elemento input de texto.</summary>
      <returns>Elemento input cuyo atributo type está establecido como "text".</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Expresión que identifica el objeto que contiene las propiedades que se van a mostrar.</param>
      <param name="format">Cadena que se usa para dar formato a la entrada.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
      <typeparam name="TModel">Tipo del modelo.</typeparam>
      <typeparam name="TProperty">Tipo del valor.</typeparam>
    </member>
    <member name="T:System.Web.Mvc.Html.LabelExtensions">
      <summary>Representa la compatibilidad para el elemento label de HTML en una vista de ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.Label(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Devuelve un elemento label de HTML y el nombre de la propiedad representada por la expresión especificada.</summary>
      <returns>Un elemento label de HTML y el nombre de la propiedad representada por la expresión.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Una expresión que identifica la propiedad que se va a mostrar.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.Label(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve un elemento label de HTML y el nombre de la propiedad representada por la expresión especificada.</summary>
      <returns>Devuelve <see cref="T:System.Web.Mvc.MvcHtmlString" />.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Una expresión que identifica la propiedad que se va a mostrar.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.Label(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Devuelve un elemento label de HTML y el nombre de la propiedad representada por la expresión especificada.</summary>
      <returns>Un elemento label de HTML y el nombre de la propiedad representada por la expresión.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Una expresión que identifica la propiedad que se va a mostrar.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.Label(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Devuelve un elemento label de HTML y el nombre de la propiedad representada por la expresión especificada mediante el texto de la etiqueta.</summary>
      <returns>Un elemento label de HTML y el nombre de la propiedad representada por la expresión.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Una expresión que identifica la propiedad que se va a mostrar.</param>
      <param name="labelText">El texto de etiqueta que se va a mostrar.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.Label(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve un elemento label de HTML y el nombre de la propiedad representada por la expresión especificada.</summary>
      <returns>Un elemento label de HTML y el nombre de la propiedad representada por la expresión.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Una expresión que identifica la propiedad que se va a mostrar.</param>
      <param name="labelText">Texto de la etiqueta.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.Label(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Devuelve un elemento label de HTML y el nombre de la propiedad representada por la expresión especificada.</summary>
      <returns>Un elemento label de HTML y el nombre de la propiedad representada por la expresión.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Una expresión que identifica la propiedad que se va a mostrar.</param>
      <param name="labelText">Texto de la etiqueta.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Devuelve un elemento label de HTML y el nombre de la propiedad representada por la expresión especificada.</summary>
      <returns>Un elemento label de HTML y el nombre de la propiedad representada por la expresión.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Una expresión que identifica la propiedad que se va a mostrar.</param>
      <typeparam name="TModel">Tipo del modelo.</typeparam>
      <typeparam name="TValue">Tipo del valor.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve un elemento label de HTML y el nombre de la propiedad representada por la expresión especificada.</summary>
      <returns>Un elemento label de HTML y el nombre de la propiedad representada por la expresión.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Una expresión que identifica la propiedad que se va a mostrar.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
      <typeparam name="TModel">Tipo del modelo.</typeparam>
      <typeparam name="TValue"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
      <summary>Devuelve un elemento label de HTML y el nombre de la propiedad representada por la expresión especificada.</summary>
      <returns>Un elemento label de HTML y el nombre de la propiedad representada por la expresión.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Una expresión que identifica la propiedad que se va a mostrar.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
      <typeparam name="TModel">Tipo del modelo.</typeparam>
      <typeparam name="TValue">Valor.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)">
      <summary>Devuelve un elemento label de HTML y el nombre de la propiedad representada por la expresión especificada mediante el texto de la etiqueta.</summary>
      <returns>Un elemento label de HTML y el nombre de la propiedad representada por la expresión.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Una expresión que identifica la propiedad que se va a mostrar.</param>
      <param name="labelText">El texto de etiqueta que se va a mostrar.</param>
      <typeparam name="TModel">Tipo del modelo.</typeparam>
      <typeparam name="TValue">Tipo del valor.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve un elemento label de HTML y el nombre de la propiedad representada por la expresión especificada.</summary>
      <returns>Un elemento label de HTML y el nombre de la propiedad representada por la expresión.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Una expresión que identifica la propiedad que se va a mostrar.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
      <typeparam name="TModel">Tipo del modelo.</typeparam>
      <typeparam name="TValue"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object)">
      <summary>Devuelve un elemento label de HTML y el nombre de la propiedad representada por la expresión especificada.</summary>
      <returns>Un elemento label de HTML y el nombre de la propiedad representada por la expresión.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Una expresión que identifica la propiedad que se va a mostrar.</param>
      <param name="labelText">Texto de la etiqueta.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
      <typeparam name="TModel">Tipo del modelo.</typeparam>
      <typeparam name="TValue">Valor.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelForModel(System.Web.Mvc.HtmlHelper)">
      <summary>Devuelve un elemento label de HTML y el nombre de la propiedad representada por el modelo.</summary>
      <returns>Un elemento label de HTML y el nombre de la propiedad representada por el modelo.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelForModel(System.Web.Mvc.HtmlHelper,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve un elemento label de HTML y el nombre de la propiedad representada por la expresión especificada.</summary>
      <returns>Un elemento label de HTML y el nombre de la propiedad representada por la expresión.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelForModel(System.Web.Mvc.HtmlHelper,System.Object)">
      <summary>Devuelve un elemento label de HTML y el nombre de la propiedad representada por la expresión especificada.</summary>
      <returns>Un elemento label de HTML y el nombre de la propiedad representada por la expresión.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelForModel(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Devuelve un elemento label de HTML y el nombre de la propiedad representada por la expresión especificada mediante el texto de la etiqueta.</summary>
      <returns>Un elemento label de HTML y el nombre de la propiedad representada por la expresión.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="labelText">El texto de etiqueta que se va a mostrar.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelForModel(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve un elemento label de HTML y el nombre de la propiedad representada por la expresión especificada.</summary>
      <returns>Un elemento label de HTML y el nombre de la propiedad representada por la expresión.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="labelText">Texto de la etiqueta.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelForModel(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Devuelve un elemento label de HTML y el nombre de la propiedad representada por la expresión especificada.</summary>
      <returns>Un elemento label de HTML y el nombre de la propiedad representada por la expresión.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="labelText">Texto de la etiqueta.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
    </member>
    <member name="T:System.Web.Mvc.Html.LinkExtensions">
      <summary>Representa la compatibilidad para los vínculos HTML en una aplicación.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Devuelve un elemento delimitador (elemento a) que contiene la ruta de acceso virtual de la acción especificada.</summary>
      <returns>Elemento delimitador (elemento a).</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="linkText">Texto interno del elemento delimitador.</param>
      <param name="actionName">Nombre de la acción.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="linkText" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Devuelve un elemento delimitador (elemento a) que contiene la ruta de acceso virtual de la acción especificada.</summary>
      <returns>Elemento delimitador (elemento a).</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="linkText">Texto interno del elemento delimitador.</param>
      <param name="actionName">Nombre de la acción.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.Los parámetros se recuperan mediante reflexión examinando las propiedades del objeto.El objeto suele crearse utilizando la sintaxis del inicializador de objeto.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="linkText" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object,System.Object)">
      <summary>Devuelve un elemento delimitador (elemento a) que contiene la ruta de acceso virtual de la acción especificada.</summary>
      <returns>Elemento delimitador (elemento a).</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="linkText">Texto interno del elemento delimitador.</param>
      <param name="actionName">Nombre de la acción.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.Los parámetros se recuperan mediante reflexión examinando las propiedades del objeto.El objeto suele crearse utilizando la sintaxis del inicializador de objeto.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML del elemento.Los atributos se recuperan mediante reflexión examinando las propiedades del objeto.El objeto suele crearse utilizando la sintaxis del inicializador de objeto.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="linkText" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String)">
      <summary>Devuelve un elemento delimitador (elemento a) que contiene la ruta de acceso virtual de la acción especificada.</summary>
      <returns>Elemento delimitador (elemento a).</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="linkText">Texto interno del elemento delimitador.</param>
      <param name="actionName">Nombre de la acción.</param>
      <param name="controllerName">Nombre del controlador.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="linkText" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.Object,System.Object)">
      <summary>Devuelve un elemento delimitador (elemento a) que contiene la ruta de acceso virtual de la acción especificada.</summary>
      <returns>Elemento delimitador (elemento a).</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="linkText">Texto interno del elemento delimitador.</param>
      <param name="actionName">Nombre de la acción.</param>
      <param name="controllerName">Nombre del controlador.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.Los parámetros se recuperan mediante reflexión examinando las propiedades del objeto.El objeto suele crearse utilizando la sintaxis del inicializador de objeto.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="linkText" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.String,System.String,System.String,System.Object,System.Object)">
      <summary>Devuelve un elemento delimitador (elemento a) que contiene la ruta de acceso virtual de la acción especificada.</summary>
      <returns>Elemento delimitador (elemento a).</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="linkText">Texto interno del elemento delimitador.</param>
      <param name="actionName">Nombre de la acción.</param>
      <param name="controllerName">Nombre del controlador.</param>
      <param name="protocol">Protocolo de la dirección URL, como "http" o "https".</param>
      <param name="hostName">Nombre de host para la dirección URL.</param>
      <param name="fragment">Nombre del fragmento de la dirección URL (nombre del delimitador).</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.Los parámetros se recuperan mediante reflexión examinando las propiedades del objeto.El objeto suele crearse utilizando la sintaxis del inicializador de objeto.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="linkText" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve un elemento delimitador (elemento a) que contiene la ruta de acceso virtual de la acción especificada.</summary>
      <returns>Elemento delimitador (elemento a).</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="linkText">Texto interno del elemento delimitador.</param>
      <param name="actionName">Nombre de la acción.</param>
      <param name="controllerName">Nombre del controlador.</param>
      <param name="protocol">Protocolo de la dirección URL, como "http" o "https".</param>
      <param name="hostName">Nombre de host para la dirección URL.</param>
      <param name="fragment">Nombre del fragmento de la dirección URL (nombre del delimitador).</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="linkText" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve un elemento delimitador (elemento a) que contiene la ruta de acceso virtual de la acción especificada.</summary>
      <returns>Elemento delimitador (elemento a).</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="linkText">Texto interno del elemento delimitador.</param>
      <param name="actionName">Nombre de la acción.</param>
      <param name="controllerName">Nombre del controlador.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="linkText" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Devuelve un elemento delimitador (elemento a) que contiene la ruta de acceso virtual de la acción especificada.</summary>
      <returns>Elemento delimitador (elemento a).</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="linkText">Texto interno del elemento delimitador.</param>
      <param name="actionName">Nombre de la acción.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="linkText" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve un elemento delimitador (elemento a) que contiene la ruta de acceso virtual de la acción especificada.</summary>
      <returns>Elemento delimitador (elemento a).</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="linkText">Texto interno del elemento delimitador.</param>
      <param name="actionName">Nombre de la acción.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="linkText" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Devuelve un elemento delimitador (elemento a) que contiene la ruta de acceso virtual de la acción especificada.</summary>
      <returns>Elemento delimitador (elemento a).</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="linkText">Texto interno del elemento delimitador.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.Los parámetros se recuperan mediante reflexión examinando las propiedades del objeto.El objeto suele crearse utilizando la sintaxis del inicializador de objeto.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="linkText" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Object)">
      <summary>Devuelve un elemento delimitador (elemento a) que contiene la ruta de acceso virtual de la acción especificada.</summary>
      <returns>Elemento delimitador (elemento a).</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="linkText">Texto interno del elemento delimitador.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.Los parámetros se recuperan mediante reflexión examinando las propiedades del objeto.El objeto suele crearse utilizando la sintaxis del inicializador de objeto.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="linkText" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Devuelve un elemento delimitador (elemento a) que contiene la ruta de acceso virtual de la acción especificada.</summary>
      <returns>Elemento delimitador (elemento a).</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="linkText">Texto interno del elemento delimitador.</param>
      <param name="routeName">Nombre de la ruta que se utiliza para devolver una ruta de acceso virtual.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="linkText" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Devuelve un elemento delimitador (elemento a) que contiene la ruta de acceso virtual de la acción especificada.</summary>
      <returns>Elemento delimitador (elemento a).</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="linkText">Texto interno del elemento delimitador.</param>
      <param name="routeName">Nombre de la ruta que se utiliza para devolver una ruta de acceso virtual.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.Los parámetros se recuperan mediante reflexión examinando las propiedades del objeto.El objeto suele crearse utilizando la sintaxis del inicializador de objeto.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="linkText" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object,System.Object)">
      <summary>Devuelve un elemento delimitador (elemento a) que contiene la ruta de acceso virtual de la acción especificada.</summary>
      <returns>Elemento delimitador (elemento a).</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="linkText">Texto interno del elemento delimitador.</param>
      <param name="routeName">Nombre de la ruta que se utiliza para devolver una ruta de acceso virtual.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.Los parámetros se recuperan mediante reflexión examinando las propiedades del objeto.El objeto suele crearse utilizando la sintaxis del inicializador de objeto.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="linkText" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.String,System.String,System.Object,System.Object)">
      <summary>Devuelve un elemento delimitador (elemento a) que contiene la ruta de acceso virtual de la acción especificada.</summary>
      <returns>Elemento delimitador (elemento a).</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="linkText">Texto interno del elemento delimitador.</param>
      <param name="routeName">Nombre de la ruta que se utiliza para devolver una ruta de acceso virtual.</param>
      <param name="protocol">Protocolo de la dirección URL, como "http" o "https".</param>
      <param name="hostName">Nombre de host para la dirección URL.</param>
      <param name="fragment">Nombre del fragmento de la dirección URL (nombre del delimitador).</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.Los parámetros se recuperan mediante reflexión examinando las propiedades del objeto.El objeto suele crearse utilizando la sintaxis del inicializador de objeto.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="linkText" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve un elemento delimitador (elemento a) que contiene la ruta de acceso virtual de la acción especificada.</summary>
      <returns>Elemento delimitador (elemento a).</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="linkText">Texto interno del elemento delimitador.</param>
      <param name="routeName">Nombre de la ruta que se utiliza para devolver una ruta de acceso virtual.</param>
      <param name="protocol">Protocolo de la dirección URL, como "http" o "https".</param>
      <param name="hostName">Nombre de host para la dirección URL.</param>
      <param name="fragment">Nombre del fragmento de la dirección URL (nombre del delimitador).</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="linkText" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Devuelve un elemento delimitador (elemento a) que contiene la ruta de acceso virtual de la acción especificada.</summary>
      <returns>Elemento delimitador (elemento a).</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="linkText">Texto interno del elemento delimitador.</param>
      <param name="routeName">Nombre de la ruta que se utiliza para devolver una ruta de acceso virtual.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="linkText" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve un elemento delimitador (elemento a) que contiene la ruta de acceso virtual de la acción especificada.</summary>
      <returns>Elemento delimitador (elemento a).</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="linkText">Texto interno del elemento delimitador.</param>
      <param name="routeName">Nombre de la ruta que se utiliza para devolver una ruta de acceso virtual.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta. </param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="linkText" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Devuelve un elemento delimitador (elemento a) que contiene la ruta de acceso virtual de la acción especificada.</summary>
      <returns>Elemento delimitador (elemento a).</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="linkText">Texto interno del elemento delimitador.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="linkText" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve un elemento delimitador (elemento a) que contiene la ruta de acceso virtual de la acción especificada.</summary>
      <returns>Elemento delimitador (elemento a).</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="linkText">Texto interno del elemento delimitador.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="linkText" /> es null o está vacío.</exception>
    </member>
    <member name="T:System.Web.Mvc.Html.MvcForm">
      <summary>Representa un elemento form HTML en una vista de MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.MvcForm.#ctor(System.Web.HttpResponseBase)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.Html.MvcForm" /> usando el objeto de respuesta HTTP especificado.</summary>
      <param name="httpResponse">Objeto de respuesta HTTP.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="httpResponse " /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.MvcForm.#ctor(System.Web.Mvc.ViewContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Mvc.Html.MvcForm" /> usando el contexto de vista especificado.</summary>
      <param name="viewContext">Un objeto que encapsula la información necesaria para presentar una vista.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="viewContext" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.MvcForm.Dispose">
      <summary>Libera todos los recursos utilizados por la instancia actual de la clase <see cref="T:System.Web.Mvc.Html.MvcForm" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.MvcForm.Dispose(System.Boolean)">
      <summary>Libera los recursos no administrados, y opcionalmente los administrados, utilizados por la instancia actual de la clase <see cref="T:System.Web.Mvc.Html.MvcForm" />.</summary>
      <param name="disposing">true para liberar tanto los recursos administrados como los no administrados; false para liberar únicamente los recursos no administrados.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.MvcForm.EndForm">
      <summary>Finaliza el formulario y elimina todos los recursos de formulario.</summary>
    </member>
    <member name="T:System.Web.Mvc.Html.NameExtensions">
      <summary>Obtiene el identificador HTML y los atributos de nombre de la cadena <see cref="T:System.Web.Mvc.HtmlHelper" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.NameExtensions.Id(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Obtiene el identificador de la cadena <see cref="T:System.Web.Mvc.HtmlHelper" />.</summary>
      <returns>El valor de atributo de identificador HTML del objeto representado por la expresión.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="name">Expresión que identifica el objeto que contiene el identificador.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.NameExtensions.IdFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary> Obtiene el identificador de la cadena <see cref="T:System.Web.Mvc.HtmlHelper`1" />.</summary>
      <returns>El valor de atributo de identificador HTML del objeto representado por la expresión.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Expresión que identifica el objeto que contiene el identificador.</param>
      <typeparam name="TModel">Tipo del modelo.</typeparam>
      <typeparam name="TProperty">Tipo de propiedad.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.NameExtensions.IdForModel(System.Web.Mvc.HtmlHelper)">
      <summary>Obtiene el identificador de la cadena <see cref="T:System.Web.Mvc.HtmlHelper" />.</summary>
      <returns>El valor de atributo de identificador HTML del objeto representado por la expresión.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.NameExtensions.Name(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Obtiene el nombre completo del campo HTML del objeto representado por la expresión.</summary>
      <returns>El nombre completo del campo HTML del objeto representado por la expresión.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="name">Expresión que identifica el objeto que contiene el nombre.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.NameExtensions.NameFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Obtiene el nombre completo del campo HTML del objeto representado por la expresión.</summary>
      <returns>El nombre completo del campo HTML del objeto representado por la expresión.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Expresión que identifica el objeto que contiene el nombre.</param>
      <typeparam name="TModel">Tipo del modelo.</typeparam>
      <typeparam name="TProperty">Tipo de propiedad.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.NameExtensions.NameForModel(System.Web.Mvc.HtmlHelper)">
      <summary>Obtiene el nombre completo del campo HTML del objeto representado por la expresión.</summary>
      <returns>El nombre completo del campo HTML del objeto representado por la expresión.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
    </member>
    <member name="T:System.Web.Mvc.Html.PartialExtensions">
      <summary>Representa la funcionalidad para representar una vista parcial como una cadena codificada en HTML.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.PartialExtensions.Partial(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Representa la vista parcial especificada como una cadena codificada en HTML.</summary>
      <returns>Vista parcial representada como una cadena codificada en HTML.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="partialViewName">Nombre de la vista parcial que se va a representar.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.PartialExtensions.Partial(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Representa la vista parcial especificada como una cadena codificada en HTML.</summary>
      <returns>Vista parcial representada como una cadena codificada en HTML.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="partialViewName">Nombre de la vista parcial que se va a representar.</param>
      <param name="model">Modelo para la vista parcial.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.PartialExtensions.Partial(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Web.Mvc.ViewDataDictionary)">
      <summary>Representa la vista parcial especificada como una cadena codificada en HTML.</summary>
      <returns>Vista parcial representada como una cadena codificada en HTML.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="partialViewName">Nombre de la vista parcial.</param>
      <param name="model">Modelo para la vista parcial.</param>
      <param name="viewData">Diccionario de datos de vista para la vista parcial.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.PartialExtensions.Partial(System.Web.Mvc.HtmlHelper,System.String,System.Web.Mvc.ViewDataDictionary)">
      <summary>Representa la vista parcial especificada como una cadena codificada en HTML.</summary>
      <returns>Vista parcial representada como una cadena codificada en HTML.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="partialViewName">Nombre de la vista parcial que se va a representar.</param>
      <param name="viewData">Diccionario de datos de vista para la vista parcial.</param>
    </member>
    <member name="T:System.Web.Mvc.Html.RenderPartialExtensions">
      <summary>Proporciona la compatibilidad para representar una vista parcial.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.RenderPartialExtensions.RenderPartial(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Representa la vista parcial especificada mediante la aplicación auxiliar HMTL especificada.</summary>
      <param name="htmlHelper">Objeto auxiliar HTML.</param>
      <param name="partialViewName">Nombre de la vista parcial.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.RenderPartialExtensions.RenderPartial(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Representa la vista parcial especificada al pasarle una copia del objeto <see cref="T:System.Web.Mvc.ViewDataDictionary" /> actual, pero con la propiedad Model establecida en el modelo especificado.</summary>
      <param name="htmlHelper">Objeto auxiliar HTML.</param>
      <param name="partialViewName">Nombre de la vista parcial.</param>
      <param name="model">El modelo.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.RenderPartialExtensions.RenderPartial(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Web.Mvc.ViewDataDictionary)">
      <summary>Representa la vista parcial especificada al reemplazar la propiedad ViewData de la vista parcial con el objeto <see cref="T:System.Web.Mvc.ViewDataDictionary" /> especificado y al establecer la propiedad Model de los datos de la vista en el modelo especificado.</summary>
      <param name="htmlHelper">Objeto auxiliar HTML.</param>
      <param name="partialViewName">Nombre de la vista parcial.</param>
      <param name="model">Modelo para la vista parcial.</param>
      <param name="viewData">Datos de vista para la vista parcial.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.RenderPartialExtensions.RenderPartial(System.Web.Mvc.HtmlHelper,System.String,System.Web.Mvc.ViewDataDictionary)">
      <summary>Representa la vista parcial especificada, al reemplazar su propiedad ViewData con el objeto <see cref="T:System.Web.Mvc.ViewDataDictionary" /> especificado.</summary>
      <param name="htmlHelper">Objeto auxiliar HTML.</param>
      <param name="partialViewName">Nombre de la vista parcial.</param>
      <param name="viewData">Datos de la vista.</param>
    </member>
    <member name="T:System.Web.Mvc.Html.SelectExtensions">
      <summary>Representa la compatibilidad para realizar selecciones en una lista.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Devuelve un elemento select de una sola selección mediante la aplicación auxiliar HTML especificada y el nombre del campo de formulario.</summary>
      <returns>Un elemento select HTML.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="name">Nombre del campo de formulario que se va a devolver.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem})">
      <summary>Devuelve un elemento select de una sola mediante la aplicación auxiliar HTML especificada, el nombre del campo de formulario y los elementos de lista especificados.</summary>
      <returns>Elemento select HTML con un subelemento option para cada elemento de la lista.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="name">Nombre del campo de formulario que se va a devolver.</param>
      <param name="selectList">Una colección de objetos <see cref="T:System.Web.Mvc.SelectListItem" /> que se usan para rellenar la lista desplegable.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve un elemento select de una sola selección mediante la aplicación auxiliar HTML especificada, el nombre del campo de formulario, los elementos de lista especificados y los atributos HTML especificados.</summary>
      <returns>Elemento select HTML con un subelemento option para cada elemento de la lista.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="name">Nombre del campo de formulario que se va a devolver.</param>
      <param name="selectList">Una colección de objetos <see cref="T:System.Web.Mvc.SelectListItem" /> que se usan para rellenar la lista desplegable.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Object)">
      <summary>Devuelve un elemento select de una sola selección mediante la aplicación auxiliar HTML especificada, el nombre del campo de formulario, los elementos de lista especificados y los atributos HTML especificados.</summary>
      <returns>Elemento select HTML con un subelemento option para cada elemento de la lista.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="name">Nombre del campo de formulario que se va a devolver.</param>
      <param name="selectList">Una colección de objetos <see cref="T:System.Web.Mvc.SelectListItem" /> que se usan para rellenar la lista desplegable.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.String)">
      <summary>Devuelve un elemento select de una sola mediante la aplicación auxiliar HTML especificada, el nombre del campo de formulario, los elementos de lista especificados y una etiqueta de opción.</summary>
      <returns>Elemento select HTML con un subelemento option para cada elemento de la lista.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="name">Nombre del campo de formulario que se va a devolver.</param>
      <param name="selectList">Una colección de objetos <see cref="T:System.Web.Mvc.SelectListItem" /> que se usan para rellenar la lista desplegable.</param>
      <param name="optionLabel">Texto para un elemento vacío predeterminado.Este parámetro puede ser null.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve un elemento select de una sola selección mediante la aplicación auxiliar HTML especificada, el nombre del campo de formulario, los elementos de lista especificados, una etiqueta de opción y los atributos HTML especificados.</summary>
      <returns>Elemento select HTML con un subelemento option para cada elemento de la lista.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="name">Nombre del campo de formulario que se va a devolver.</param>
      <param name="selectList">Una colección de objetos <see cref="T:System.Web.Mvc.SelectListItem" /> que se usan para rellenar la lista desplegable.</param>
      <param name="optionLabel">Texto para un elemento vacío predeterminado.Este parámetro puede ser null.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.String,System.Object)">
      <summary>Devuelve un elemento select de una sola selección mediante la aplicación auxiliar HTML especificada, el nombre del campo de formulario, los elementos de lista especificados, una etiqueta de opción y los atributos HTML especificados.</summary>
      <returns>Elemento select HTML con un subelemento option para cada elemento de la lista.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="name">Nombre del campo de formulario que se va a devolver.</param>
      <param name="selectList">Una colección de objetos <see cref="T:System.Web.Mvc.SelectListItem" /> que se usan para rellenar la lista desplegable.</param>
      <param name="optionLabel">Texto para un elemento vacío predeterminado.Este parámetro puede ser null.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Devuelve un elemento select de una sola selección mediante la aplicación auxiliar HTML especificada, el nombre del campo de formulario y una etiqueta de opción.</summary>
      <returns>Elemento select HTML con un subelemento option para cada elemento de la lista.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="name">Nombre del campo de formulario que se va a devolver.</param>
      <param name="optionLabel">Texto para un elemento vacío predeterminado.Este parámetro puede ser null.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem})">
      <summary>Devuelve un elemento select HTML para cada propiedad en el objeto representado por la expresión especificada, mediante los elementos de la lista especificados.</summary>
      <returns>Un elemento select HTML para cada propiedad en el objeto representado por la expresión.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Expresión que identifica el objeto que contiene las propiedades que se van a mostrar.</param>
      <param name="selectList">Una colección de objetos <see cref="T:System.Web.Mvc.SelectListItem" /> que se usan para rellenar la lista desplegable.</param>
      <typeparam name="TModel">Tipo del modelo.</typeparam>
      <typeparam name="TProperty">Tipo del valor.</typeparam>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="expression" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve un elemento select HTML para cada propiedad del objeto representada por la expresión especificada, mediante los elementos de la lista y los atributos HTML especificados.</summary>
      <returns>Un elemento select HTML para cada propiedad en el objeto representado por la expresión.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Expresión que identifica el objeto que contiene las propiedades que se van a mostrar.</param>
      <param name="selectList">Una colección de objetos <see cref="T:System.Web.Mvc.SelectListItem" /> que se usan para rellenar la lista desplegable.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
      <typeparam name="TModel">Tipo del modelo.</typeparam>
      <typeparam name="TProperty">Tipo del valor.</typeparam>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="expression" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Object)">
      <summary>Devuelve un elemento select HTML para cada propiedad del objeto representada por la expresión especificada, mediante los elementos de la lista y los atributos HTML especificados.</summary>
      <returns>Un elemento select HTML para cada propiedad en el objeto representado por la expresión.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Expresión que identifica el objeto que contiene las propiedades que se van a mostrar.</param>
      <param name="selectList">Una colección de objetos <see cref="T:System.Web.Mvc.SelectListItem" /> que se usan para rellenar la lista desplegable.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
      <typeparam name="TModel">Tipo del modelo.</typeparam>
      <typeparam name="TProperty">Tipo del valor.</typeparam>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="expression" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.String)">
      <summary>Devuelve un elemento select HTML para cada propiedad del objeto representada por la expresión especificada, mediante los elementos de la lista y la etiqueta de opciones especificados.</summary>
      <returns>Un elemento select HTML para cada propiedad en el objeto representado por la expresión.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Expresión que identifica el objeto que contiene las propiedades que se van a mostrar.</param>
      <param name="selectList">Una colección de objetos <see cref="T:System.Web.Mvc.SelectListItem" /> que se usan para rellenar la lista desplegable.</param>
      <param name="optionLabel">Texto para un elemento vacío predeterminado.Este parámetro puede ser null.</param>
      <typeparam name="TModel">Tipo del modelo.</typeparam>
      <typeparam name="TProperty">Tipo del valor.</typeparam>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="expression" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve un elemento select HTML para cada propiedad del objeto representada por la expresión especificada, mediante los elementos de la lista, la etiqueta de opción y los atributos HTML especificados.</summary>
      <returns>Un elemento select HTML para cada propiedad en el objeto representado por la expresión.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Expresión que identifica el objeto que contiene las propiedades que se van a mostrar.</param>
      <param name="selectList">Una colección de objetos <see cref="T:System.Web.Mvc.SelectListItem" /> que se usan para rellenar la lista desplegable.</param>
      <param name="optionLabel">Texto para un elemento vacío predeterminado.Este parámetro puede ser null.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
      <typeparam name="TModel">Tipo del modelo.</typeparam>
      <typeparam name="TProperty">Tipo del valor.</typeparam>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="expression" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.String,System.Object)">
      <summary>Devuelve un elemento select HTML para cada propiedad del objeto representada por la expresión especificada, mediante los elementos de la lista, la etiqueta de opción y los atributos HTML especificados.</summary>
      <returns>Un elemento select HTML para cada propiedad en el objeto representado por la expresión.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Expresión que identifica el objeto que contiene las propiedades que se van a mostrar.</param>
      <param name="selectList">Una colección de objetos <see cref="T:System.Web.Mvc.SelectListItem" /> que se usan para rellenar la lista desplegable.</param>
      <param name="optionLabel">Texto para un elemento vacío predeterminado.Este parámetro puede ser null.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
      <typeparam name="TModel">Tipo del modelo.</typeparam>
      <typeparam name="TProperty">Tipo del valor.</typeparam>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="expression" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBox(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Devuelve un elemento select de varias selecciones mediante la aplicación auxiliar HTML especificada y el nombre del campo de formulario.</summary>
      <returns>Un elemento select HTML.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="name">Nombre del campo de formulario que se va a devolver.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBox(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem})">
      <summary>Devuelve un elemento select de varias selecciones mediante la aplicación auxiliar HTML especificada, el nombre del campo de formulario y los elementos de lista especificados.</summary>
      <returns>Elemento select HTML con un subelemento option para cada elemento de la lista.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="name">Nombre del campo de formulario que se va a devolver.</param>
      <param name="selectList">Una colección de objetos <see cref="T:System.Web.Mvc.SelectListItem" /> que se usan para rellenar la lista desplegable.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBox(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve un elemento select de varias selecciones mediante la aplicación auxiliar HTML especificada, el nombre del campo de formulario, los elementos de lista especificados y los atributos HTML especificados.</summary>
      <returns>Elemento select HTML con un subelemento option para cada elemento de la lista.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="name">Nombre del campo de formulario que se va a devolver.</param>
      <param name="selectList">Una colección de objetos <see cref="T:System.Web.Mvc.SelectListItem" /> que se usan para rellenar la lista desplegable.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBox(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Object)">
      <summary>Devuelve un elemento select de varias selecciones mediante la aplicación auxiliar HTML especificada, el nombre del campo de formulario y los elementos de lista especificados.</summary>
      <returns>Elemento select HTML con un subelemento option para cada elemento de la lista.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="name">Nombre del campo de formulario que se va a devolver.</param>
      <param name="selectList">Una colección de objetos <see cref="T:System.Web.Mvc.SelectListItem" /> que se usan para rellenar la lista desplegable.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem})">
      <summary>Devuelve un elemento select HTML para cada propiedad en el objeto representado por la expresión especificada, mediante los elementos de la lista especificados.</summary>
      <returns>Un elemento select HTML para cada propiedad en el objeto representado por la expresión.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Expresión que identifica el objeto que contiene las propiedades que se van a mostrar.</param>
      <param name="selectList">Una colección de objetos <see cref="T:System.Web.Mvc.SelectListItem" /> que se usan para rellenar la lista desplegable.</param>
      <typeparam name="TModel">Tipo del modelo.</typeparam>
      <typeparam name="TProperty">Tipo de propiedad.</typeparam>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="expression" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve un elemento select HTML para cada propiedad del objeto representada por la expresión especificada, mediante los elementos de la lista y los atributos HTML especificados.</summary>
      <returns>Un elemento select HTML para cada propiedad en el objeto representado por la expresión.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Expresión que identifica el objeto que contiene las propiedades que se van a mostrar.</param>
      <param name="selectList">Una colección de objetos <see cref="T:System.Web.Mvc.SelectListItem" /> que se usan para rellenar la lista desplegable.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
      <typeparam name="TModel">Tipo del modelo.</typeparam>
      <typeparam name="TProperty">Tipo de propiedad.</typeparam>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="expression" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Object)">
      <summary>Devuelve un elemento select HTML para cada propiedad del objeto representada por la expresión especificada, mediante los elementos de la lista y los atributos HTML especificados.</summary>
      <returns>Un elemento select HTML para cada propiedad en el objeto representado por la expresión.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Expresión que identifica el objeto que contiene las propiedades que se van a mostrar.</param>
      <param name="selectList">Una colección de objetos <see cref="T:System.Web.Mvc.SelectListItem" /> que se usan para rellenar la lista desplegable.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
      <typeparam name="TModel">Tipo del modelo.</typeparam>
      <typeparam name="TProperty">Tipo de propiedad.</typeparam>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="expression" /> es null.</exception>
    </member>
    <member name="T:System.Web.Mvc.Html.TextAreaExtensions">
      <summary>Representa la compatibilidad para controles textarea HTML.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Devuelve el elemento textarea especificado mediante la aplicación auxiliar HTML especificada y el nombre del campo de formulario.</summary>
      <returns>Elemento textarea.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="name">Nombre del campo de formulario que se va a devolver.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve el elemento textarea especificado mediante la aplicación auxiliar HTML especificada, el nombre del campo de formulario y los atributos HTML especificados.</summary>
      <returns>Elemento textarea.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="name">Nombre del campo de formulario que se va a devolver.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Devuelve el elemento textarea especificado mediante la aplicación auxiliar HTML especificada y los atributos HTML.</summary>
      <returns>Elemento textarea.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="name">Nombre del campo de formulario que se va a devolver.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Devuelve el elemento textarea especificado mediante la aplicación auxiliar HTML especificada, el nombre del campo de formulario y el contenido del texto.</summary>
      <returns>Elemento textarea.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="name">Nombre del campo de formulario que se va a devolver.</param>
      <param name="value">Contenido del texto.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve el elemento textarea especificado mediante la aplicación auxiliar HTML especificada, el nombre del campo de formulario, el contenido del texto y los atributos HTML especificados.</summary>
      <returns>Elemento textarea.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="name">Nombre del campo de formulario que se va a devolver.</param>
      <param name="value">Contenido del texto.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve el elemento textarea especificado mediante la aplicación auxiliar HTML especificada, el nombre del campo de formulario, el contenido del texto, el número de filas y columnas y los atributos HTML especificados.</summary>
      <returns>Elemento textarea.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="name">Nombre del campo de formulario que se va a devolver.</param>
      <param name="value">Contenido del texto.</param>
      <param name="rows">Número de filas.</param>
      <param name="columns">Número de columnas.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Int32,System.Int32,System.Object)">
      <summary>Devuelve el elemento textarea especificado mediante la aplicación auxiliar HTML especificada, el nombre del campo de formulario, el contenido del texto, el número de filas y columnas y los atributos HTML especificados.</summary>
      <returns>Elemento textarea.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="name">Nombre del campo de formulario que se va a devolver.</param>
      <param name="value">Contenido del texto.</param>
      <param name="rows">Número de filas.</param>
      <param name="columns">Número de columnas.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Devuelve el elemento textarea especificado mediante la aplicación auxiliar HTML especificada, el nombre del campo de formulario, el contenido del texto y los atributos HTML especificados.</summary>
      <returns>Elemento textarea.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="name">Nombre del campo de formulario que se va a devolver.</param>
      <param name="value">Contenido del texto.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML que se van a establecer para el elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextAreaFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Devuelve un elemento textarea HTML para cada propiedad del objeto representado por la expresión especificada.</summary>
      <returns>Un elemento textarea HTML para cada propiedad en el objeto representado por la expresión.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Una expresión que identifica el objeto que contiene las propiedades que se van a representar.</param>
      <typeparam name="TModel">Tipo del modelo.</typeparam>
      <typeparam name="TProperty">Tipo de propiedad.</typeparam>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="expression" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextAreaFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve un elemento textarea HTML para cada propiedad del objeto representada por la expresión especificada, mediante los atributos HTML especificados.</summary>
      <returns>Un elemento textarea HTML para cada propiedad en el objeto representado por la expresión.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Una expresión que identifica el objeto que contiene las propiedades que se van a representar.</param>
      <param name="htmlAttributes">Un diccionario que contiene los atributos HTML que se van a establecer para el elemento.</param>
      <typeparam name="TModel">Tipo del modelo.</typeparam>
      <typeparam name="TProperty">Tipo de propiedad.</typeparam>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="expression" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextAreaFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve un elemento textarea HTML para cada propiedad del objeto representada por la expresión especificada, mediante los atributos HTML y el número de filas y columnas especificados.</summary>
      <returns>Un elemento textarea HTML para cada propiedad en el objeto representado por la expresión.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Una expresión que identifica el objeto que contiene las propiedades que se van a representar.</param>
      <param name="rows">Número de filas.</param>
      <param name="columns">Número de columnas.</param>
      <param name="htmlAttributes">Un diccionario que contiene los atributos HTML que se van a establecer para el elemento.</param>
      <typeparam name="TModel">Tipo del modelo.</typeparam>
      <typeparam name="TProperty">Tipo de propiedad.</typeparam>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="expression" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextAreaFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Int32,System.Object)">
      <summary>Devuelve un elemento textarea HTML para cada propiedad del objeto representada por la expresión especificada, mediante los atributos HTML y el número de filas y columnas especificados.</summary>
      <returns>Un elemento textarea HTML para cada propiedad en el objeto representado por la expresión.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Una expresión que identifica el objeto que contiene las propiedades que se van a representar.</param>
      <param name="rows">Número de filas.</param>
      <param name="columns">Número de columnas.</param>
      <param name="htmlAttributes">Un diccionario que contiene los atributos HTML que se van a establecer para el elemento.</param>
      <typeparam name="TModel">Tipo del modelo.</typeparam>
      <typeparam name="TProperty">Tipo de propiedad.</typeparam>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="expression" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextAreaFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
      <summary>Devuelve un elemento textarea HTML para cada propiedad del objeto representada por la expresión especificada, mediante los atributos HTML especificados.</summary>
      <returns>Un elemento textarea HTML para cada propiedad en el objeto representado por la expresión.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Una expresión que identifica el objeto que contiene las propiedades que se van a representar.</param>
      <param name="htmlAttributes">Un diccionario que contiene los atributos HTML que se van a establecer para el elemento.</param>
      <typeparam name="TModel">Tipo del modelo.</typeparam>
      <typeparam name="TProperty">Tipo de propiedad.</typeparam>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="expression" /> es null.</exception>
    </member>
    <member name="T:System.Web.Mvc.Html.ValidationExtensions">
      <summary>Proporciona la compatibilidad para validar la entrada de un formulario HTML.</summary>
    </member>
    <member name="P:System.Web.Mvc.Html.ValidationExtensions.ResourceClassKey">
      <summary>Obtiene o establece el nombre del archivo de recursos (clave de clase) que contiene los valores de cadena adaptados.</summary>
      <returns>Nombre del archivo de recursos (clave de clase).</returns>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.Validate(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Recupera los metadatos de validación para el modelo especificado y aplica cada regla al campo de datos.</summary>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="modelName">Nombre de la propiedad o del objeto de modelo que se valida.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="modelName" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidateFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Recupera los metadatos de validación para el modelo especificado y aplica cada regla al campo de datos.</summary>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Una expresión que identifica el objeto que contiene las propiedades que se van a representar.</param>
      <typeparam name="TModel">Tipo del modelo.</typeparam>
      <typeparam name="TProperty">Tipo de propiedad.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Muestra un mensaje de validación si existe un error para el campo especificado en el objeto <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</summary>
      <returns>Si la propiedad o el objeto son válidos, se devuelve una cadena vacía; de lo contrario, se devuelve un elemento span que contiene un mensaje de error.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="modelName">Nombre de la propiedad o del objeto de modelo que se valida.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Muestra un mensaje de validación si existe un error para el campo especificado en el objeto <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</summary>
      <returns>Si la propiedad o el objeto son válidos, se devuelve una cadena vacía; de lo contrario, se devuelve un elemento span que contiene un mensaje de error.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="modelName">Nombre de la propiedad o del objeto de modelo que se valida.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML del elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Muestra un mensaje de validación si existe un error para el campo especificado en el objeto <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</summary>
      <returns>Si la propiedad o el objeto son válidos, se devuelve una cadena vacía; de lo contrario, se devuelve un elemento span que contiene un mensaje de error.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="modelName">Nombre de la propiedad o del objeto de modelo que se valida.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML del elemento. </param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Muestra un mensaje de validación si existe un error para el campo especificado en el objeto <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</summary>
      <returns>Si la propiedad o el objeto son válidos, se devuelve una cadena vacía; de lo contrario, se devuelve un elemento span que contiene un mensaje de error.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="modelName">Nombre de la propiedad o del objeto de modelo que se valida.</param>
      <param name="validationMessage">Mensaje que se va a mostrar si el campo especificado contiene un error.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Muestra un mensaje de validación si existe un error para el campo especificado en el objeto <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</summary>
      <returns>Si la propiedad o el objeto son válidos, se devuelve una cadena vacía; de lo contrario, se devuelve un elemento span que contiene un mensaje de error.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="modelName">Nombre de la propiedad o del objeto de modelo que se valida.</param>
      <param name="validationMessage">Mensaje que se va a mostrar si el campo especificado contiene un error.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML del elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Muestra un mensaje de validación si existe un error para el campo especificado en el objeto <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</summary>
      <returns>Si la propiedad o el objeto son válidos, se devuelve una cadena vacía; de lo contrario, se devuelve un elemento span que contiene un mensaje de error.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="modelName">Nombre de la propiedad o del objeto de modelo que se valida.</param>
      <param name="validationMessage">Mensaje que se va a mostrar si el campo especificado contiene un error.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML del elemento. </param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Devuelve el formato HTML para un mensaje de error de validación para cada campo de datos representado por la expresión especificada.</summary>
      <returns>Si la propiedad o el objeto son válidos, se devuelve una cadena vacía; de lo contrario, se devuelve un elemento span que contiene un mensaje de error.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Una expresión que identifica el objeto que contiene las propiedades que se van a representar.</param>
      <typeparam name="TModel">Tipo del modelo.</typeparam>
      <typeparam name="TProperty">Tipo de propiedad.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)">
      <summary>Devuelve el formato HTML para un mensaje de error de validación para cada campo de datos representado por la expresión especificada, mediante el mensaje especificado.</summary>
      <returns>Si la propiedad o el objeto son válidos, se devuelve una cadena vacía; de lo contrario, se devuelve un elemento span que contiene un mensaje de error.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Una expresión que identifica el objeto que contiene las propiedades que se van a representar.</param>
      <param name="validationMessage">Mensaje que se va a mostrar si el campo especificado contiene un error.</param>
      <typeparam name="TModel">Tipo del modelo.</typeparam>
      <typeparam name="TProperty">Tipo de propiedad.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve el formato HTML para un mensaje de error de validación para cada campo de datos representado por la expresión especificada, mediante el mensaje y los atributos HTML especificados.</summary>
      <returns>Si la propiedad o el objeto son válidos, se devuelve una cadena vacía; de lo contrario, se devuelve un elemento span que contiene un mensaje de error.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Una expresión que identifica el objeto que contiene las propiedades que se van a representar.</param>
      <param name="validationMessage">Mensaje que se va a mostrar si el campo especificado contiene un error.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML del elemento.</param>
      <typeparam name="TModel">Tipo del modelo.</typeparam>
      <typeparam name="TProperty">Tipo de propiedad.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object)">
      <summary>Devuelve el formato HTML para un mensaje de error de validación para cada campo de datos representado por la expresión especificada, mediante el mensaje y los atributos HTML especificados.</summary>
      <returns>Si la propiedad o el objeto son válidos, se devuelve una cadena vacía; de lo contrario, se devuelve un elemento span que contiene un mensaje de error.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Una expresión que identifica el objeto que contiene las propiedades que se van a representar.</param>
      <param name="validationMessage">Mensaje que se va a mostrar si el campo especificado contiene un error.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML del elemento.</param>
      <typeparam name="TModel">Tipo del modelo.</typeparam>
      <typeparam name="TProperty">Tipo de propiedad.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper)">
      <summary>Devuelve una lista desordenada (elemento ul) de los mensajes de validación que están en el objeto <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</summary>
      <returns>Una cadena que contiene una lista desordenada (elemento ul) de los mensajes de validación.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.Boolean)">
      <summary>Devuelve una lista desordenada (elemento ul) de los mensajes de validación que hay en el objeto <see cref="T:System.Web.Mvc.ModelStateDictionary" /> y, opcionalmente, muestra únicamente los errores de nivel de modelo.</summary>
      <returns>Una cadena que contiene una lista desordenada (elemento ul) de los mensajes de validación.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="excludePropertyErrors">Es true para que el resumen muestre únicamente los errores de nivel de modelo o es false para que el resumen muestre todos los errores.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.Boolean,System.String)">
      <summary>Devuelve una lista desordenada (elemento ul) de los mensajes de validación que hay en el objeto <see cref="T:System.Web.Mvc.ModelStateDictionary" /> y, opcionalmente, muestra únicamente los errores de nivel de modelo.</summary>
      <returns>Una cadena que contiene una lista desordenada (elemento ul) de los mensajes de validación.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="excludePropertyErrors">Es true para que el resumen muestre únicamente los errores de nivel de modelo o es false para que el resumen muestre todos los errores.</param>
      <param name="message">Mensaje que se va a mostrar con el resumen de validación.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.Boolean,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve una lista desordenada (elemento ul) de los mensajes de validación que hay en el objeto <see cref="T:System.Web.Mvc.ModelStateDictionary" /> y, opcionalmente, muestra únicamente los errores de nivel de modelo.</summary>
      <returns>Una cadena que contiene una lista desordenada (elemento ul) de los mensajes de validación.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="excludePropertyErrors">Es true para que el resumen muestre únicamente los errores de nivel de modelo o es false para que el resumen muestre todos los errores.</param>
      <param name="message">Mensaje que se va a mostrar con el resumen de validación.</param>
      <param name="htmlAttributes">Un diccionario que contiene los atributos HTML que se van a establecer para el elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.Boolean,System.String,System.Object)">
      <summary>Devuelve una lista desordenada (elemento ul) de los mensajes de validación que hay en el objeto <see cref="T:System.Web.Mvc.ModelStateDictionary" /> y, opcionalmente, muestra únicamente los errores de nivel de modelo.</summary>
      <returns>Una cadena que contiene una lista desordenada (elemento ul) de los mensajes de validación.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="excludePropertyErrors">Es true para que el resumen muestre únicamente los errores de nivel de modelo o es false para que el resumen muestre todos los errores.</param>
      <param name="message">Mensaje que se va a mostrar con el resumen de validación.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML del elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Devuelve una lista desordenada (elemento ul) de los mensajes de validación que están en el objeto <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</summary>
      <returns>Una cadena que contiene una lista desordenada (elemento ul) de los mensajes de validación.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HMTL que extiende este método.</param>
      <param name="message">Mensaje que se va a mostrar si el campo especificado contiene un error.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve una lista desordenada (elemento ul) de los mensajes de validación que están en el objeto <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</summary>
      <returns>Una cadena que contiene una lista desordenada (elemento ul) de los mensajes de validación.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="message">Mensaje que se va a mostrar si el campo especificado contiene un error.</param>
      <param name="htmlAttributes">Un diccionario que contiene los atributos HTML que se van a establecer para el elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Devuelve una lista desordenada (elemento ul) de los mensajes de validación en el objeto <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</summary>
      <returns>Una cadena que contiene una lista desordenada (elemento ul) de los mensajes de validación.</returns>
      <param name="htmlHelper">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="message">Mensaje que se va a mostrar si el campo especificado contiene un error.</param>
      <param name="htmlAttributes">Un objeto que contiene los atributos HTML del elemento. </param>
    </member>
    <member name="T:System.Web.Mvc.Html.ValueExtensions">
      <summary>Proporciona un mecanismo para crear marcado HTML personalizado compatible con enlazadores y plantillas de modelo de ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.ValueExtensions.Value(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Proporciona un mecanismo para crear marcado HTML personalizado compatible con enlazadores y plantillas de modelo de ASP.NET MVC.</summary>
      <returns>El marcado HTML para el valor.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="name">Nombre del modelo.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValueExtensions.Value(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Proporciona un mecanismo para crear marcado HTML personalizado compatible con enlazadores y plantillas de modelo de ASP.NET MVC.</summary>
      <returns>El marcado HTML para el valor.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="name">Nombre del modelo.</param>
      <param name="format">La cadena de formato.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValueExtensions.ValueFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Proporciona un mecanismo para crear marcado HTML personalizado compatible con enlazadores y plantillas de modelo de ASP.NET MVC.</summary>
      <returns>El marcado HTML para el valor.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Una expresión que identifica el objeto que contiene las propiedades que se van a exponer.</param>
      <typeparam name="TModel">El modelo.</typeparam>
      <typeparam name="TProperty">Propiedad.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValueExtensions.ValueFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)">
      <summary>Proporciona un mecanismo para crear marcado HTML personalizado compatible con enlazadores y plantillas de modelo de ASP.NET MVC.</summary>
      <returns>El marcado HTML para el valor.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="expression">Una expresión que identifica el objeto que contiene las propiedades que se van a exponer.</param>
      <param name="format">La cadena de formato.</param>
      <typeparam name="TModel">El modelo.</typeparam>
      <typeparam name="TProperty">Propiedad.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValueExtensions.ValueForModel(System.Web.Mvc.HtmlHelper)">
      <summary>Proporciona un mecanismo para crear marcado HTML personalizado compatible con enlazadores y plantillas de modelo de ASP.NET MVC.</summary>
      <returns>El marcado HTML para el valor.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValueExtensions.ValueForModel(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Proporciona un mecanismo para crear marcado HTML personalizado compatible con enlazadores y plantillas de modelo de ASP.NET MVC.</summary>
      <returns>El marcado HTML para el valor.</returns>
      <param name="html">Instancia de la aplicación auxiliar HTML que extiende este método.</param>
      <param name="format">La cadena de formato.</param>
    </member>
    <member name="T:System.Web.Mvc.Razor.MvcCSharpRazorCodeParser">
      <summary>Compila las vistas de ASP.NET Razor en clases.</summary>
    </member>
    <member name="M:System.Web.Mvc.Razor.MvcCSharpRazorCodeParser.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="M:System.Web.Mvc.Razor.MvcCSharpRazorCodeParser.#ctor" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Razor.MvcCSharpRazorCodeParser.InheritsDirective">
      <summary>Directiva de herencia.</summary>
    </member>
    <member name="M:System.Web.Mvc.Razor.MvcCSharpRazorCodeParser.ModelDirective">
      <summary>Directiva de modelo.</summary>
    </member>
    <member name="T:System.Web.Mvc.Razor.MvcVBRazorCodeParser">
      <summary>Extiende la clase VBCodeParser al agregar compatibilidad con la palabra clave @model.</summary>
    </member>
    <member name="M:System.Web.Mvc.Razor.MvcVBRazorCodeParser.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.Razor.MvcVBRazorCodeParser" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Razor.MvcVBRazorCodeParser.InheritsStatement">
      <summary>Establece un valor que indica si el bloque de código y modelo actuales deben heredarse.</summary>
      <returns>true si el bloque de código y modelo se heredan; de lo contrario, false.</returns>
    </member>
    <member name="M:System.Web.Mvc.Razor.MvcVBRazorCodeParser.ModelTypeDirective">
      <summary>Directiva del tipo de modelo.</summary>
      <returns>Devuelve void.</returns>
    </member>
    <member name="T:System.Web.Mvc.Razor.MvcWebPageRazorHost">
      <summary>Configura el analizador de ASP.NET Razor y el generador de código para un archivo especificado.</summary>
    </member>
    <member name="M:System.Web.Mvc.Razor.MvcWebPageRazorHost.#ctor(System.String,System.String)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Mvc.Razor.MvcWebPageRazorHost" />. </summary>
      <param name="virtualPath">Ruta de acceso virtual del archivo ASP.NET Razor.</param>
      <param name="physicalPath">Ruta de acceso física del archivo ASP.NET Razor.</param>
    </member>
    <member name="M:System.Web.Mvc.Razor.MvcWebPageRazorHost.DecorateCodeGenerator(System.Web.Razor.Generator.RazorCodeGenerator)">
      <summary>Devuelve el generador de código Razor específico del lenguaje ASP.NET MVC.</summary>
      <returns>Generador de código Razor específico del lenguaje ASP.NET MVC.</returns>
      <param name="incomingCodeGenerator">Generador de código de C# o Visual Basic.</param>
    </member>
    <member name="M:System.Web.Mvc.Razor.MvcWebPageRazorHost.DecorateCodeParser(System.Web.Razor.Parser.ParserBase)">
      <summary>Devuelve el analizador de código específico Razor del lenguaje ASP.NET MVC mediante el analizador de lenguaje especificado.</summary>
      <returns>Analizador de código Razor específico del lenguaje ASP.NET MVC.</returns>
      <param name="incomingCodeParser">Analizador de código de C# o Visual Basic.</param>
    </member>
  </members>
</doc>