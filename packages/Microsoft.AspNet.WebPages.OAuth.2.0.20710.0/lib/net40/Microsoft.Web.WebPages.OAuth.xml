<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.Web.WebPages.OAuth</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Web.WebPages.OAuth.AuthenticationClientData"></member>
    <member name="M:Microsoft.Web.WebPages.OAuth.AuthenticationClientData.#ctor(DotNetOpenAuth.AspNet.IAuthenticationClient,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})"></member>
    <member name="P:Microsoft.Web.WebPages.OAuth.AuthenticationClientData.AuthenticationClient"></member>
    <member name="P:Microsoft.Web.WebPages.OAuth.AuthenticationClientData.DisplayName"></member>
    <member name="P:Microsoft.Web.WebPages.OAuth.AuthenticationClientData.ExtraData"></member>
    <member name="T:Microsoft.Web.WebPages.OAuth.OAuthAccount">
      <summary>Represents an OAuth or OpenID account.</summary>
    </member>
    <member name="M:Microsoft.Web.WebPages.OAuth.OAuthAccount.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Web.WebPages.OAuth.OAuthAccount" /> class.</summary>
      <param name="provider">The name of the provider.</param>
      <param name="providerUserId">The provider user ID.</param>
    </member>
    <member name="P:Microsoft.Web.WebPages.OAuth.OAuthAccount.Provider">
      <summary>Gets the provider name.</summary>
      <returns>The provider name.</returns>
    </member>
    <member name="P:Microsoft.Web.WebPages.OAuth.OAuthAccount.ProviderUserId">
      <summary>Gets the provider user ID.</summary>
      <returns>The provider user ID.</returns>
    </member>
    <member name="T:Microsoft.Web.WebPages.OAuth.OAuthWebSecurity">
      <summary>Manages security that uses OAuth authentication providers like Facebook, Twitter, LinkedIn, Windows Live and OpenID authentication providers like Google and Yahoo.</summary>
    </member>
    <member name="M:Microsoft.Web.WebPages.OAuth.OAuthWebSecurity.CreateOrUpdateAccount(System.String,System.String,System.String)">
      <summary>Creates or updates the account using the specified provider and user ID for the provider ID and associate the new account with the specified user name.</summary>
      <param name="providerName">The provider name.</param>
      <param name="providerUserId">The user ID for the specified provider.</param>
      <param name="userName">The name of the user.</param>
    </member>
    <member name="M:Microsoft.Web.WebPages.OAuth.OAuthWebSecurity.DeleteAccount(System.String,System.String)">
      <summary>Deletes the specified membership account.</summary>
      <returns>true if the account was deleted, or false if it was not.</returns>
      <param name="providerName">The provider name.</param>
      <param name="providerUserId">The user ID for the specified provider.</param>
    </member>
    <member name="M:Microsoft.Web.WebPages.OAuth.OAuthWebSecurity.GetAccountsFromUserName(System.String)">
      <summary>Gets the account or accounts that are associated using the specified user name.</summary>
      <returns>The collection of accounts.</returns>
      <param name="userName">The user name.</param>
    </member>
    <member name="M:Microsoft.Web.WebPages.OAuth.OAuthWebSecurity.GetOAuthClientData(System.String)"></member>
    <member name="M:Microsoft.Web.WebPages.OAuth.OAuthWebSecurity.GetUserName(System.String,System.String)">
      <summary>Returns the user ID for the specified OAuth or OpenID provider and provider user ID.</summary>
      <returns>The user ID, or null if there is no user ID associated with the OAuth or Open ID provider user ID.</returns>
      <param name="providerName">The provider name.</param>
      <param name="providerUserId">The user ID for the specified provider.</param>
    </member>
    <member name="M:Microsoft.Web.WebPages.OAuth.OAuthWebSecurity.HasLocalAccount(System.Int32)"></member>
    <member name="P:Microsoft.Web.WebPages.OAuth.OAuthWebSecurity.IsAuthenticatedWithOAuth">
      <summary>Gets a value that indicates whether the user has been authenticated using OAuth.</summary>
      <returns>true if the user has been authenticated using OAuth; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.Web.WebPages.OAuth.OAuthWebSecurity.Login(System.String,System.String,System.Boolean)">
      <summary>Logs the user in.</summary>
      <returns>true if login was successful; otherwise, false.</returns>
      <param name="providerName">The provider name.</param>
      <param name="providerUserId">The user ID for the specified provider.</param>
      <param name="createPersistentCookie">true to create a persistent cookie so that the login information is saved across browser sessions; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.Web.WebPages.OAuth.OAuthWebSecurity.RegisterClient(DotNetOpenAuth.AspNet.IAuthenticationClient)">
      <summary>Registers an OAuth authentication client.</summary>
      <param name="client">One of the supported OAuth clients.</param>
    </member>
    <member name="M:Microsoft.Web.WebPages.OAuth.OAuthWebSecurity.RegisterClient(DotNetOpenAuth.AspNet.IAuthenticationClient,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})"></member>
    <member name="P:Microsoft.Web.WebPages.OAuth.OAuthWebSecurity.RegisteredClientData"></member>
    <member name="M:Microsoft.Web.WebPages.OAuth.OAuthWebSecurity.RegisterFacebookClient(System.String,System.String)"></member>
    <member name="M:Microsoft.Web.WebPages.OAuth.OAuthWebSecurity.RegisterFacebookClient(System.String,System.String,System.String)"></member>
    <member name="M:Microsoft.Web.WebPages.OAuth.OAuthWebSecurity.RegisterFacebookClient(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})"></member>
    <member name="M:Microsoft.Web.WebPages.OAuth.OAuthWebSecurity.RegisterGoogleClient"></member>
    <member name="M:Microsoft.Web.WebPages.OAuth.OAuthWebSecurity.RegisterGoogleClient(System.String)"></member>
    <member name="M:Microsoft.Web.WebPages.OAuth.OAuthWebSecurity.RegisterGoogleClient(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})"></member>
    <member name="M:Microsoft.Web.WebPages.OAuth.OAuthWebSecurity.RegisterLinkedInClient(System.String,System.String)"></member>
    <member name="M:Microsoft.Web.WebPages.OAuth.OAuthWebSecurity.RegisterLinkedInClient(System.String,System.String,System.String)"></member>
    <member name="M:Microsoft.Web.WebPages.OAuth.OAuthWebSecurity.RegisterLinkedInClient(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})"></member>
    <member name="M:Microsoft.Web.WebPages.OAuth.OAuthWebSecurity.RegisterMicrosoftClient(System.String,System.String)"></member>
    <member name="M:Microsoft.Web.WebPages.OAuth.OAuthWebSecurity.RegisterMicrosoftClient(System.String,System.String,System.String)"></member>
    <member name="M:Microsoft.Web.WebPages.OAuth.OAuthWebSecurity.RegisterMicrosoftClient(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})"></member>
    <member name="M:Microsoft.Web.WebPages.OAuth.OAuthWebSecurity.RegisterTwitterClient(System.String,System.String)"></member>
    <member name="M:Microsoft.Web.WebPages.OAuth.OAuthWebSecurity.RegisterTwitterClient(System.String,System.String,System.String)"></member>
    <member name="M:Microsoft.Web.WebPages.OAuth.OAuthWebSecurity.RegisterTwitterClient(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})"></member>
    <member name="M:Microsoft.Web.WebPages.OAuth.OAuthWebSecurity.RegisterYahooClient"></member>
    <member name="M:Microsoft.Web.WebPages.OAuth.OAuthWebSecurity.RegisterYahooClient(System.String)"></member>
    <member name="M:Microsoft.Web.WebPages.OAuth.OAuthWebSecurity.RegisterYahooClient(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})"></member>
    <member name="M:Microsoft.Web.WebPages.OAuth.OAuthWebSecurity.RequestAuthentication(System.String)">
      <summary>Requests the specified provider to start the authentication by directing users to an external website.</summary>
      <param name="provider">The OAuth provider.</param>
    </member>
    <member name="M:Microsoft.Web.WebPages.OAuth.OAuthWebSecurity.RequestAuthentication(System.String,System.String)">
      <summary>Requests the specified provider to start the authentication by directing users to an external website, and directs the provider to redirect the user to the specified URL when authentication is successful.</summary>
      <param name="provider">The OAuth provider.</param>
      <param name="returnUrl">The URL to return to when authentication is successful.</param>
    </member>
    <member name="M:Microsoft.Web.WebPages.OAuth.OAuthWebSecurity.SerializeProviderUserId(System.String,System.String)"></member>
    <member name="M:Microsoft.Web.WebPages.OAuth.OAuthWebSecurity.TryDeserializeProviderUserId(System.String,System.String@,System.String@)"></member>
    <member name="M:Microsoft.Web.WebPages.OAuth.OAuthWebSecurity.TryGetOAuthClientData(System.String,Microsoft.Web.WebPages.OAuth.AuthenticationClientData@)"></member>
    <member name="M:Microsoft.Web.WebPages.OAuth.OAuthWebSecurity.VerifyAuthentication">
      <summary>Returns a value that indicates whether the user account has been confirmed by the provider.</summary>
      <returns>A <see cref="T:DotNetOpenAuth.AspNet.AuthenticationResult" /> instance that you can query to determine whether verification was successful.</returns>
    </member>
    <member name="M:Microsoft.Web.WebPages.OAuth.OAuthWebSecurity.VerifyAuthentication(System.String)"></member>
    <member name="T:Microsoft.Web.WebPages.OAuth.PreApplicationStartCode">
      <summary>Provides a registration point for pre-application start code for OAuth-based security.</summary>
    </member>
    <member name="M:Microsoft.Web.WebPages.OAuth.PreApplicationStartCode.Start">
      <summary>Registers the OAuth pre-application start code.</summary>
    </member>
  </members>
</doc>