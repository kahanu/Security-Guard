<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Web.Http</name>
  </assembly>
  <members>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,System.Exception)">
      <summary>Crea un <see cref="T:System.Net.Http.HttpResponseMessage" /> que representa una excepción.</summary>
      <returns>La solicitud debe estar asociada con una instancia de <see cref="T:System.Web.Http.HttpConfiguration" />.<see cref="T:System.Net.Http.HttpResponseMessage" /> cuyo contenido es una representación serializada de una instancia de <see cref="T:System.Web.Http.HttpError" />.</returns>
      <param name="request">Solicitud HTTP.</param>
      <param name="statusCode">Código de estado de la respuesta.</param>
      <param name="exception">Excepción.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,System.String)">
      <summary>Crea un <see cref="T:System.Net.Http.HttpResponseMessage" /> que representa un mensaje de error.</summary>
      <returns>La solicitud debe estar asociada con una instancia de <see cref="T:System.Web.Http.HttpConfiguration" />.<see cref="T:System.Net.Http.HttpResponseMessage" /> cuyo contenido es una representación serializada de una instancia de <see cref="T:System.Web.Http.HttpError" />.</returns>
      <param name="request">Solicitud HTTP.</param>
      <param name="statusCode">Código de estado de la respuesta.</param>
      <param name="message">Mensaje de error.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,System.String,System.Exception)">
      <summary>Crea un <see cref="T:System.Net.Http.HttpResponseMessage" /> que representa una excepción con un mensaje de error.</summary>
      <returns>La solicitud debe estar asociada con una instancia de <see cref="T:System.Web.Http.HttpConfiguration" />.<see cref="T:System.Net.Http.HttpResponseMessage" /> cuyo contenido es una representación serializada de una instancia de <see cref="T:System.Web.Http.HttpError" />.</returns>
      <param name="request">Solicitud HTTP.</param>
      <param name="statusCode">Código de estado de la respuesta.</param>
      <param name="message">Mensaje de error.</param>
      <param name="exception">Excepción.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,System.Web.Http.HttpError)">
      <summary>Crea un <see cref="T:System.Net.Http.HttpResponseMessage" /> que representa un error.</summary>
      <returns>La solicitud debe estar asociada con una instancia de <see cref="T:System.Web.Http.HttpConfiguration" />.<see cref="T:System.Net.Http.HttpResponseMessage" /> cuyo contenido es una representación serializada de una instancia de <see cref="T:System.Web.Http.HttpError" />.</returns>
      <param name="request">Solicitud HTTP.</param>
      <param name="statusCode">Código de estado de la respuesta.</param>
      <param name="error">Error HTTP.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,System.Web.Http.ModelBinding.ModelStateDictionary)">
      <summary>Crea un <see cref="T:System.Net.Http.HttpResponseMessage" /> que representa un error en el estado del modelo.</summary>
      <returns>La solicitud debe estar asociada con una instancia de <see cref="T:System.Web.Http.HttpConfiguration" />.<see cref="T:System.Net.Http.HttpResponseMessage" /> cuyo contenido es una representación serializada de una instancia de <see cref="T:System.Web.Http.HttpError" />.</returns>
      <param name="request">Solicitud HTTP.</param>
      <param name="statusCode">Código de estado de la respuesta.</param>
      <param name="modelState">Estado del modelo.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0)">
      <summary>Crea un <see cref="T:System.Net.Http.HttpResponseMessage" /> conectado al <see cref="T:System.Net.Http.HttpRequestMessage" /> asociado.</summary>
      <returns>Un <see cref="T:System.Net.Http.HttpResponseMessage" /> inicializado conectado al <see cref="T:System.Net.Http.HttpRequestMessage" /> asociado.</returns>
      <param name="request">El mensaje de respuesta HTTP que llevó a este mensaje de respuesta.</param>
      <param name="statusCode">Código de estado de respuesta HTTP.</param>
      <param name="value">Contenido de mensaje de respuesta HTTP.</param>
      <typeparam name="T">Tipo de mensaje de respuesta HTTP.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)">
      <summary>Crea un <see cref="T:System.Net.Http.HttpResponseMessage" /> conectado al <see cref="T:System.Net.Http.HttpRequestMessage" /> asociado.</summary>
      <returns>Un <see cref="T:System.Net.Http.HttpResponseMessage" /> inicializado conectado al <see cref="T:System.Net.Http.HttpRequestMessage" /> asociado.</returns>
      <param name="request">El mensaje de respuesta HTTP que llevó a este mensaje de respuesta.</param>
      <param name="statusCode">Código de estado de respuesta HTTP.</param>
      <param name="value">Contenido de mensaje de respuesta HTTP.</param>
      <param name="formatter">Formateador de tipo de archivo multimedia.</param>
      <typeparam name="T">Tipo de mensaje de respuesta HTTP.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)">
      <summary>Crea un <see cref="T:System.Net.Http.HttpResponseMessage" /> conectado al <see cref="T:System.Net.Http.HttpRequestMessage" /> asociado.</summary>
      <returns>Un <see cref="T:System.Net.Http.HttpResponseMessage" /> inicializado conectado al <see cref="T:System.Net.Http.HttpRequestMessage" /> asociado.</returns>
      <param name="request">El mensaje de respuesta HTTP que llevó a este mensaje de respuesta.</param>
      <param name="statusCode">Código de estado de respuesta HTTP.</param>
      <param name="value">Contenido de mensaje de respuesta HTTP.</param>
      <param name="formatter">Formateador de tipo de archivo multimedia.</param>
      <param name="mediaType">Valor del encabezado del tipo de archivo multimedia.</param>
      <typeparam name="T">Tipo de mensaje de respuesta HTTP.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)">
      <summary>Crea un <see cref="T:System.Net.Http.HttpResponseMessage" /> conectado al <see cref="T:System.Net.Http.HttpRequestMessage" /> asociado.</summary>
      <returns>Un <see cref="T:System.Net.Http.HttpResponseMessage" /> inicializado conectado al <see cref="T:System.Net.Http.HttpRequestMessage" /> asociado.</returns>
      <param name="request">El mensaje de respuesta HTTP que llevó a este mensaje de respuesta.</param>
      <param name="statusCode">Código de estado de respuesta HTTP.</param>
      <param name="value">Contenido de mensaje de respuesta HTTP.</param>
      <param name="formatter">Formateador de tipo de archivo multimedia.</param>
      <param name="mediaType">Tipo de archivo multimedia.</param>
      <typeparam name="T">Tipo de mensaje de respuesta HTTP.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.Net.Http.Headers.MediaTypeHeaderValue)">
      <summary>Crea un <see cref="T:System.Net.Http.HttpResponseMessage" /> conectado al <see cref="T:System.Net.Http.HttpRequestMessage" /> asociado.</summary>
      <returns>Un <see cref="T:System.Net.Http.HttpResponseMessage" /> inicializado conectado al <see cref="T:System.Net.Http.HttpRequestMessage" /> asociado.</returns>
      <param name="request">El mensaje de respuesta HTTP que llevó a este mensaje de respuesta.</param>
      <param name="statusCode">Código de estado de respuesta HTTP.</param>
      <param name="value">Contenido de mensaje de respuesta HTTP.</param>
      <param name="mediaType">Valor del encabezado del tipo de archivo multimedia.</param>
      <typeparam name="T">Tipo de mensaje de respuesta HTTP.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.String)">
      <summary>Crea un <see cref="T:System.Net.Http.HttpResponseMessage" /> conectado al <see cref="T:System.Net.Http.HttpRequestMessage" /> asociado.</summary>
      <returns>Un <see cref="T:System.Net.Http.HttpResponseMessage" /> inicializado conectado al <see cref="T:System.Net.Http.HttpRequestMessage" /> asociado.</returns>
      <param name="request">El mensaje de respuesta HTTP que llevó a este mensaje de respuesta.</param>
      <param name="statusCode">Código de estado de respuesta HTTP.</param>
      <param name="value">Contenido de mensaje de respuesta HTTP.</param>
      <param name="mediaType">Tipo de archivo multimedia.</param>
      <typeparam name="T">Tipo de mensaje de respuesta HTTP.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.Web.Http.HttpConfiguration)">
      <summary>Crea un <see cref="T:System.Net.Http.HttpResponseMessage" /> conectado al <see cref="T:System.Net.Http.HttpRequestMessage" /> asociado.</summary>
      <returns>Un <see cref="T:System.Net.Http.HttpResponseMessage" /> inicializado conectado al <see cref="T:System.Net.Http.HttpRequestMessage" /> asociado.</returns>
      <param name="request">El mensaje de respuesta HTTP que llevó a este mensaje de respuesta.</param>
      <param name="statusCode">Código de estado de respuesta HTTP.</param>
      <param name="value">Contenido de mensaje de respuesta HTTP.</param>
      <param name="configuration">La configuración HTTP que contiene la resolución de dependencia que se usa para resolver los servicios.</param>
      <typeparam name="T">Tipo de mensaje de respuesta HTTP.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.DisposeRequestResources(System.Net.Http.HttpRequestMessage)">
      <summary>Elimina todos los recursos supervisados asociados con la <paramref name="request" /> que se agregan mediante el método <see cref="M:System.Net.Http.HttpRequestMessageExtensions.RegisterForDispose(System.Net.Http.HttpRequestMessage,System.IDisposable)" />.</summary>
      <param name="request">Solicitud HTTP.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.GetClientCertificate(System.Net.Http.HttpRequestMessage)">
      <summary>Obtiene el certificado X.509 actual a partir de la solicitud HTTP dada.</summary>
      <returns>El <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> actual, o bien null si no está disponible ningún certificado.</returns>
      <param name="request">Solicitud HTTP.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.GetConfiguration(System.Net.Http.HttpRequestMessage)">
      <summary>Recupera la <see cref="T:System.Web.Http.HttpConfiguration" /> para la solicitud determinada.</summary>
      <returns>La <see cref="T:System.Web.Http.HttpConfiguration" /> para la solicitud determinada.</returns>
      <param name="request">Solicitud HTTP.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.GetCorrelationId(System.Net.Http.HttpRequestMessage)">
      <summary>Recupera la <see cref="T:System.Guid" /> que ha sido asignada como el Id. de correlación asociado con la <paramref name="request" /> determinada. El valor se creará y se establecerá la primera vez que se llama este método.</summary>
      <returns>El objeto <see cref="T:System.Guid" /> que representa el Id. de correlación asociado con la solicitud.</returns>
      <param name="request">Solicitud HTTP.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.GetDependencyScope(System.Net.Http.HttpRequestMessage)">
      <summary>Recupera los <see cref="T:System.Web.Http.Dependencies.IDependencyScope" /> para la solicitud determinada o null si no está disponible.</summary>
      <returns>Los <see cref="T:System.Web.Http.Dependencies.IDependencyScope" /> para la solicitud determinada o null si no está disponible.</returns>
      <param name="request">Solicitud HTTP.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.GetQueryNameValuePairs(System.Net.Http.HttpRequestMessage)">
      <summary>Obtiene la cadena de consulta analizada como una colección de pares clave-valor.</summary>
      <returns>Cadena de consulta analizada como una colección de pares clave-valor.</returns>
      <param name="request">Solicitud HTTP.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.GetRouteData(System.Net.Http.HttpRequestMessage)">
      <summary>Recupera los <see cref="T:System.Web.Http.Routing.IHttpRouteData" /> para la solicitud determinada o null si no está disponible.</summary>
      <returns>Los <see cref="T:System.Web.Http.Routing.IHttpRouteData" /> para la solicitud determinada o null si no está disponible.</returns>
      <param name="request">Solicitud HTTP.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.GetSynchronizationContext(System.Net.Http.HttpRequestMessage)">
      <summary>Recupera los <see cref="T:System.Threading.SynchronizationContext" /> para la solicitud determinada o null si no está disponible.</summary>
      <returns>Los <see cref="T:System.Threading.SynchronizationContext" /> para la solicitud determinada o null si no está disponible.</returns>
      <param name="request">Solicitud HTTP.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.GetUrlHelper(System.Net.Http.HttpRequestMessage)">
      <summary>Obtiene una instancia de <see cref="T:System.Web.Http.Routing.UrlHelper" /> para una solicitud HTTP.</summary>
      <returns>Instancia <see cref="T:System.Web.Http.Routing.UrlHelper" /> que se inicializa para la solicitud HTTP especificada.</returns>
      <param name="request">Solicitud HTTP.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.RegisterForDispose(System.Net.Http.HttpRequestMessage,System.IDisposable)">
      <summary>Agrega el <paramref name="resource" /> determinado a una lista de recursos que eliminará un host una vez que se haya eliminado la <paramref name="request" />.</summary>
      <param name="request">La solicitud HTTP que controla el ciclo de vida del <paramref name="resource" />.</param>
      <param name="resource">El recurso que se eliminará cuando la <paramref name="request" /> se esté eliminando.</param>
    </member>
    <member name="T:System.Net.Http.HttpResponseMessageExtensions">
      <summary>Representa las extensiones del mensaje para la respuesta HTTP desde una operación ASP.NET.</summary>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessageExtensions.TryGetContentValue``1(System.Net.Http.HttpResponseMessage,``0@)">
      <summary>Intenta recuperar el valor del contenido del <see cref="T:System.Net.Http.HttpResponseMessageExtensions" />.</summary>
      <returns>Resultado de la recuperación del valor del contenido.</returns>
      <param name="response">Respuesta de la operación.</param>
      <param name="value">Valor del contenido.</param>
      <typeparam name="T">Tipo de valor que va a recuperarse.</typeparam>
    </member>
    <member name="T:System.Net.Http.Formatting.MediaTypeFormatterExtensions">
      <summary>Representa las extensiones para agregar elementos de <see cref="T:System.Net.Http.Formatting.MediaTypeMapping" /> a un <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" />. </summary>
    </member>
    <member name="M:System.Net.Http.Formatting.MediaTypeFormatterExtensions.AddUriPathExtensionMapping(System.Net.Http.Formatting.MediaTypeFormatter,System.String,System.Net.Http.Headers.MediaTypeHeaderValue)">
      <summary> Actualiza el conjunto de elementos de <see cref="T:System.Net.Http.Formatting.MediaTypeMapping" /> del formateador dado de modo tal que asocie el mediaType con <see cref="T:System.Uri" /> que terminen con la uriPathExtension dada. </summary>
      <param name="formatter">El <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> que recibirá el nuevo elemento de <see cref="T:System.Net.Http.Formatting.UriPathExtensionMapping" />.</param>
      <param name="uriPathExtension">La cadena de la extensión de ruta de <see cref="T:System.Uri" />.</param>
      <param name="mediaType">El <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> que se asociará con <see cref="T:System.Uri" /> que termine con uriPathExtension.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.MediaTypeFormatterExtensions.AddUriPathExtensionMapping(System.Net.Http.Formatting.MediaTypeFormatter,System.String,System.String)">
      <summary> Actualiza el conjunto de elementos de <see cref="T:System.Net.Http.Formatting.MediaTypeMapping" /> del formateador dado de modo tal que asocie el mediaType con <see cref="T:System.Uri" /> que terminen con la uriPathExtension dada. </summary>
      <param name="formatter">El <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> que recibirá el nuevo elemento de <see cref="T:System.Net.Http.Formatting.UriPathExtensionMapping" />.</param>
      <param name="uriPathExtension">La cadena de la extensión de ruta de <see cref="T:System.Uri" />.</param>
      <param name="mediaType">El tipo de archivo multimedia de cadena que se asociará con <see cref="T:System.Uri" /> que termine con uriPathExtension.</param>
    </member>
    <member name="T:System.Net.Http.Formatting.UriPathExtensionMapping">
      <summary>Proporciona elementos <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> desde extensiones de rutas que aparecen en un elemento <see cref="T:System.Uri" />. </summary>
    </member>
    <member name="M:System.Net.Http.Formatting.UriPathExtensionMapping.#ctor(System.String,System.Net.Http.Headers.MediaTypeHeaderValue)">
      <summary> Inicia una nueva instancia de la clase <see cref="T:System.Net.Http.Formatting.UriPathExtensionMapping" />. </summary>
      <param name="uriPathExtension">Extensión que corresponde a mediaType. Este valor no debería incluir un punto ni comodines.</param>
      <param name="mediaType">El <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> que se devolverá si uriPathExtension coincide.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.UriPathExtensionMapping.#ctor(System.String,System.String)">
      <summary> Inicia una nueva instancia de la clase <see cref="T:System.Net.Http.Formatting.UriPathExtensionMapping" />. </summary>
      <param name="uriPathExtension">Extensión que corresponde a mediaType. Este valor no debería incluir un punto ni comodines.</param>
      <param name="mediaType">El tipo de archivo multimedia que se devolverá si uriPathExtension coincide.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.UriPathExtensionMapping.TryMatchMediaType(System.Net.Http.HttpRequestMessage)">
      <summary> Devuelve un valor que indica si esta instancia de <see cref="T:System.Net.Http.Formatting.UriPathExtensionMapping" /> puede proporcionar un <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> para el <see cref="T:System.Uri" /> de solicitud. </summary>
      <returns>Si esta instancia puede hacer coincidir una extensión de archivo en solicitud, devuelve 1,0; de lo contrario, 0,0.</returns>
      <param name="request">El <see cref="T:System.Net.Http.HttpRequestMessage" /> que se verificará.</param>
    </member>
    <member name="P:System.Net.Http.Formatting.UriPathExtensionMapping.UriPathExtension">
      <summary> Obtiene la extensión de ruta <see cref="T:System.Uri" />. </summary>
      <returns>La extensión de ruta <see cref="T:System.Uri" />.</returns>
    </member>
    <member name="F:System.Net.Http.Formatting.UriPathExtensionMapping.UriPathExtensionKey">
      <summary>La clave de extensión de ruta <see cref="T:System.Uri" />.</summary>
    </member>
    <member name="T:System.Web.Http.AcceptVerbsAttribute">
      <summary>Representa un atributo que especifica a qué métodos HTTP responderá un método de acción.</summary>
    </member>
    <member name="M:System.Web.Http.AcceptVerbsAttribute.#ctor(System.String[])">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Http.AcceptVerbsAttribute" /> utilizando una lista de métodos HTTP a los que responderá el método de la acción.</summary>
      <param name="methods">Los métodos HTTP a los que responderá el método de la acción.</param>
    </member>
    <member name="P:System.Web.Http.AcceptVerbsAttribute.HttpMethods">
      <summary>Obtiene o establece la lista de métodos HTTP a los que responderá el método de la acción.</summary>
      <returns>Obtiene o establece la lista de métodos HTTP a los que responderá el método de la acción.</returns>
    </member>
    <member name="T:System.Web.Http.ActionNameAttribute">
      <summary>Representa un atributo que se utiliza para el nombre de una acción.</summary>
    </member>
    <member name="M:System.Web.Http.ActionNameAttribute.#ctor(System.String)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.ActionNameAttribute" />.</summary>
      <param name="name">Nombre de la acción.</param>
    </member>
    <member name="P:System.Web.Http.ActionNameAttribute.Name">
      <summary>Obtiene o establece el nombre de la acción.</summary>
      <returns>Nombre de la acción.</returns>
    </member>
    <member name="T:System.Web.Http.AllowAnonymousAttribute">
      <summary>Especifica que el <see cref="T:System.Web.Http.AuthorizeAttribute" /> saltea acciones y controladores durante la autorización.</summary>
    </member>
    <member name="M:System.Web.Http.AllowAnonymousAttribute.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.AllowAnonymousAttribute" />.</summary>
    </member>
    <member name="T:System.Web.Http.ApiController">
      <summary>Define las propiedades y los métodos del controlador API.</summary>
    </member>
    <member name="M:System.Web.Http.ApiController.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.ApiController" />.</summary>
    </member>
    <member name="P:System.Web.Http.ApiController.Configuration">
      <summary>Obtiene o establece el elemento <see cref="T:System.Web.Http.HttpConfiguration" /> del elemento <see cref="T:System.Web.Http.ApiController" /> actual.</summary>
      <returns>El elemento <see cref="T:System.Web.Http.HttpConfiguration" /> del elemento <see cref="T:System.Web.Http.ApiController" /> actual.</returns>
    </member>
    <member name="P:System.Web.Http.ApiController.ControllerContext">
      <summary>Obtiene el elemento <see cref="T:System.Web.Http.Controllers.HttpControllerContext" /> del elemento <see cref="T:System.Web.Http.ApiController" /> actual.</summary>
      <returns>El elemento <see cref="T:System.Web.Http.Controllers.HttpControllerContext" /> del elemento <see cref="T:System.Web.Http.ApiController" /> actual.</returns>
    </member>
    <member name="M:System.Web.Http.ApiController.Dispose">
      <summary>Realiza tareas definidas por aplicación asociadas con liberar o restablecer recursos no administrados.</summary>
    </member>
    <member name="M:System.Web.Http.ApiController.Dispose(System.Boolean)">
      <summary>Libera los recursos no administrados que utiliza el objeto y, opcionalmente, libera los recursos administrados.</summary>
      <param name="disposing">true para liberar tanto los recursos administrados como los no administrados; false para liberar únicamente los recursos no administrados.</param>
    </member>
    <member name="M:System.Web.Http.ApiController.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Threading.CancellationToken)">
      <summary>Ejecuta una única operación HTTP de manera asincrónica.</summary>
      <returns>La tarea recién iniciada.</returns>
      <param name="controllerContext">El contexto de controladora para una única operación HTTP.</param>
      <param name="cancellationToken">El token de cancelación asignado para la operación HTTP.</param>
    </member>
    <member name="M:System.Web.Http.ApiController.Initialize(System.Web.Http.Controllers.HttpControllerContext)">
      <summary>Inicializa la clase <see cref="T:System.Web.Http.ApiController" /> con el elemento <paramref name="controllerContext" /> especificado.</summary>
      <param name="controllerContext">Objeto <see cref="T:System.Web.Http.Controllers.HttpControllerContext" /> que se usa para la inicialización.</param>
    </member>
    <member name="P:System.Web.Http.ApiController.ModelState">
      <summary>Obtiene el estado del modelo después del proceso de enlazado de modelos.</summary>
      <returns>El estado del modelo después del proceso de enlazado de modelos.</returns>
    </member>
    <member name="P:System.Web.Http.ApiController.Request">
      <summary>Obtiene o establece el elemento <see cref="T:System.Net.Http.HttpRequestMessage" /> del elemento <see cref="T:System.Web.Http.ApiController" /> actual.</summary>
      <returns>El elemento <see cref="T:System.Net.Http.HttpRequestMessage" /> del elemento <see cref="T:System.Web.Http.ApiController" /> actual.</returns>
    </member>
    <member name="P:System.Web.Http.ApiController.Url">
      <summary>Devuelve una instancia de un elemento <see cref="T:System.Web.Http.Routing.UrlHelper" />, que se usa para generar direcciones URL a otras API.</summary>
      <returns>Un objeto <see cref="T:System.Web.Http.Routing.UrlHelper" /> que se usa para generar direcciones URL a otras API.</returns>
    </member>
    <member name="P:System.Web.Http.ApiController.User">
      <summary> Devuelve el principal actual asociado con esta solicitud. </summary>
      <returns>El principal actual asociado con esta solicitud.</returns>
    </member>
    <member name="T:System.Web.Http.AuthorizeAttribute">
      <summary>Especifica el filtro de autorización que verifica el <see cref="T:System.Security.Principal.IPrincipal" /> de solicitud.</summary>
    </member>
    <member name="M:System.Web.Http.AuthorizeAttribute.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.AuthorizeAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Http.AuthorizeAttribute.HandleUnauthorizedRequest(System.Web.Http.Controllers.HttpActionContext)">
      <summary>Procesa las solicitudes que producen un error en la autorización.</summary>
      <param name="actionContext">Contexto.</param>
    </member>
    <member name="M:System.Web.Http.AuthorizeAttribute.IsAuthorized(System.Web.Http.Controllers.HttpActionContext)">
      <summary>Indica si el control especificado está autorizado.</summary>
      <returns>true si el control está autorizado; en caso contrario, false.</returns>
      <param name="actionContext">Contexto.</param>
    </member>
    <member name="M:System.Web.Http.AuthorizeAttribute.OnAuthorization(System.Web.Http.Controllers.HttpActionContext)">
      <summary>Llama cuando se autoriza una acción.</summary>
      <param name="actionContext">Contexto.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro contexto es null.</exception>
    </member>
    <member name="P:System.Web.Http.AuthorizeAttribute.Roles">
      <summary>Obtiene o establece los roles autorizados. </summary>
      <returns>La cadena de roles. </returns>
    </member>
    <member name="P:System.Web.Http.AuthorizeAttribute.TypeId">
      <summary>Obtiene un identificador único para este atributo.</summary>
      <returns>Identificador único para este atributo.</returns>
    </member>
    <member name="P:System.Web.Http.AuthorizeAttribute.Users">
      <summary>Obtiene o establece los usuarios autorizados. </summary>
      <returns>La cadena de usuarios. </returns>
    </member>
    <member name="T:System.Web.Http.FromBodyAttribute">
      <summary> Atributo que especifica que un parámetro de acción proviene solamente del cuerpo de entidad del <see cref="T:System.Net.Http.HttpRequestMessage" /> entrante. </summary>
    </member>
    <member name="M:System.Web.Http.FromBodyAttribute.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.FromBodyAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Http.FromBodyAttribute.GetBinding(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>Obtiene un enlazado de parámetros.</summary>
      <returns>El enlazado de parámetros.</returns>
      <param name="parameter">La descripción del parámetro.</param>
    </member>
    <member name="T:System.Web.Http.FromUriAttribute">
      <summary>Atributo que especifica que un parámetro de acción proviene del URI del <see cref="T:System.Net.Http.HttpRequestMessage" /> entrante.</summary>
    </member>
    <member name="M:System.Web.Http.FromUriAttribute.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.FromUriAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Http.FromUriAttribute.GetValueProviderFactories(System.Web.Http.HttpConfiguration)">
      <summary>Obtiene los generador de proveedores de valores para el enlazador de modelos.</summary>
      <returns>Colección de objetos de <see cref="T:System.Web.Http.ValueProviders.ValueProviderFactory" />.</returns>
      <param name="configuration">Configuración.</param>
    </member>
    <member name="T:System.Web.Http.HttpBindNeverAttribute">
      <summary>Representa los atributos que especifican que el enlazado HTTP debe excluir una propiedad.</summary>
    </member>
    <member name="M:System.Web.Http.HttpBindNeverAttribute.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.HttpBindNeverAttribute" />.</summary>
    </member>
    <member name="T:System.Web.Http.HttpBindRequiredAttribute">
      <summary>Representa el atributo requerido para el elnazado http.</summary>
    </member>
    <member name="M:System.Web.Http.HttpBindRequiredAttribute.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.HttpBindRequiredAttribute" />.</summary>
    </member>
    <member name="T:System.Web.Http.HttpConfiguration">
      <summary> Configuración de instancias de <see cref="T:System.Web.Http.HttpServer" />. </summary>
    </member>
    <member name="M:System.Web.Http.HttpConfiguration.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.HttpConfiguration" />.</summary>
    </member>
    <member name="M:System.Web.Http.HttpConfiguration.#ctor(System.Web.Http.HttpRouteCollection)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Http.HttpConfiguration" /> con una colección de rutas HTTP.</summary>
      <param name="routes">Colección de rutas HTTP que se va a asociar a esta instancia.</param>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.DependencyResolver">
      <summary>Obtiene o establece la solución de dependencia asociada con esta instancia.</summary>
      <returns>Resolución de dependencia.</returns>
    </member>
    <member name="M:System.Web.Http.HttpConfiguration.Dispose">
      <summary>Realiza tareas definidas por aplicación asociadas con liberar o restablecer recursos no administrados.</summary>
    </member>
    <member name="M:System.Web.Http.HttpConfiguration.Dispose(System.Boolean)">
      <summary>Libera los recursos no administrados que utiliza el objeto y, opcionalmente, libera los recursos administrados.</summary>
      <param name="disposing">true para liberar tanto los recursos administrados como los no administrados; false para liberar únicamente los recursos no administrados.</param>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.Filters">
      <summary>Obtiene la lista de filtros que se aplican a todas las solicitudes servidas usando esta instancia de <see cref="T:System.Web.Http.HttpConfiguration" />.</summary>
      <returns>Lista de filtros.</returns>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.Formatters">
      <summary>Obtiene los formateadores de tipo de archivo multimedia para esta instancia.</summary>
      <returns>Colección de objetos de <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" />.</returns>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.IncludeErrorDetailPolicy">
      <summary>Obtiene o establece un valor que indica si los detalles de errores deberían incluirse en mensajes de error.</summary>
      <returns>Valor de <see cref="T:System.Web.Http.IncludeErrorDetailPolicy" /> que indica dicha política de detalles de errores.</returns>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.Initializer">
      <summary> Obtiene o establece la acción que realizará la inicialización final de la instancia de <see cref="T:System.Web.Http.HttpConfiguration" /> antes de que se use para procesar solicitudes. </summary>
      <returns>Acción que llevará a cabo la inicialización final de la intancia de <see cref="T:System.Web.Http.HttpConfiguration" />.</returns>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.MessageHandlers">
      <summary>Obtiene una lista ordenada de instancias de <see cref="T:System.Net.Http.DelegatingHandler" /> que se invocarán mientras un <see cref="T:System.Net.Http.HttpRequestMessage" /> asciende por la pila y un <see cref="T:System.Net.Http.HttpResponseMessage" /> desciende por la pila en regreso. </summary>
      <returns>Colección del controlador de mensaje.</returns>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.ParameterBindingRules">
      <summary>Colección de reglas sobre cómo deben enlazarse los parámetros.</summary>
      <returns>Colección de funciones que pueden producir un enlazado de parámetros para un parámetro dado.</returns>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.Properties">
      <summary>Obtiene las propiedades asociadas con esta instancia.</summary>
      <returns>
        <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> que contiene las propiedades.</returns>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.Routes">
      <summary>Obtiene la <see cref="T:System.Web.Http.HttpRouteCollection" /> asociada con esta instancia de <see cref="T:System.Web.Http.HttpConfiguration" />.</summary>
      <returns>La <see cref="T:System.Web.Http.HttpRouteCollection" />.</returns>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.Services">
      <summary>Obtiene el contenedor de los servicios predeterminados asociados con esta instancia.</summary>
      <returns>
        <see cref="T:System.Web.Http.Controllers.ServicesContainer" /> que contiene los servicios predeterminados para esta instancia.</returns>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.VirtualPathRoot">
      <summary>Obtiene la ruta virtual raíz.</summary>
      <returns>La ruta de acceso virtual raíz.</returns>
    </member>
    <member name="T:System.Web.Http.HttpConfigurationExtensions">
      <summary>Contiene métodos de extensión para la clase <see cref="T:System.Web.Http.HttpConfiguration" />.</summary>
    </member>
    <member name="M:System.Web.Http.HttpConfigurationExtensions.BindParameter(System.Web.Http.HttpConfiguration,System.Type,System.Web.Http.ModelBinding.IModelBinder)">
      <summary> Registro al que debe enlazarse el tipo de parámetro dado en una acción usando el enlazador de modelos. </summary>
      <param name="configuration">configuración que se va a actualizar.</param>
      <param name="type">tipo de parámetro al que se aplica en enlazador.</param>
      <param name="binder">enlazador de modelos</param>
    </member>
    <member name="T:System.Web.Http.HttpDeleteAttribute">
      <summary>No se actualizará ningún contenido aquí; no agregue material aquí.</summary>
    </member>
    <member name="M:System.Web.Http.HttpDeleteAttribute.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.HttpDeleteAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Http.HttpDeleteAttribute.HttpMethods">
      <summary>Obtiene una colección de métodos HTTP.</summary>
      <returns>Una colección de métodos HTTP.</returns>
    </member>
    <member name="T:System.Web.Http.HttpError">
      <summary> Define un contenedor serializable para la información de error arbitraria. </summary>
    </member>
    <member name="M:System.Web.Http.HttpError.#ctor">
      <summary> Inicializa una nueva instancia de la clase <see cref="T:System.Web.Http.HttpError" />. </summary>
    </member>
    <member name="M:System.Web.Http.HttpError.#ctor(System.Exception,System.Boolean)">
      <summary> Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.HttpError" /> para excepción. </summary>
      <param name="exception">La excepción que se va a utilizar para la información de error.</param>
      <param name="includeErrorDetail">  true para incluir la información de la excepción en el error; de lo contrario, false.</param>
    </member>
    <member name="M:System.Web.Http.HttpError.#ctor(System.String)">
      <summary> Inicializa una nueva instancia de la clase <see cref="T:System.Web.Http.HttpError" /> utilizando el mensaje de error mensaje. </summary>
      <param name="message">El mensaje de error que se va a asociar a esta instancia.</param>
    </member>
    <member name="M:System.Web.Http.HttpError.#ctor(System.Web.Http.ModelBinding.ModelStateDictionary,System.Boolean)">
      <summary> Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.HttpError" /> para modelState. </summary>
      <param name="modelState">El estado de modelo no válido que se va a utilizar para la información de error.</param>
      <param name="includeErrorDetail">  true para incluir mensajes de excepción en el error; de lo contrario, false.</param>
    </member>
    <member name="P:System.Web.Http.HttpError.Message">
      <summary> El mensaje de error asociado a esta instancia. </summary>
    </member>
    <member name="M:System.Web.Http.HttpError.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Este método está reservado y no debería usarse.</summary>
      <returns>Siempre devuelve null.</returns>
    </member>
    <member name="M:System.Web.Http.HttpError.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Genera una instancia <see cref="T:System.Web.Http.HttpError" /> a partir de su representación XML.</summary>
      <param name="reader">La secuencia <see cref="T:System.Xml.XmlReader" /> desde la cual el objeto se deserializa.</param>
    </member>
    <member name="M:System.Web.Http.HttpError.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Convierte una instancia <see cref="T:System.Web.Http.HttpError" /> en su representación XML.</summary>
      <param name="writer">La secuencia <see cref="T:System.Xml.XmlWriter" /> en la cual el objeto se deserializa.</param>
    </member>
    <member name="T:System.Web.Http.HttpGetAttribute">
      <summary>No se actualizará ningún contenido aquí; no agregue material aquí.</summary>
    </member>
    <member name="M:System.Web.Http.HttpGetAttribute.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.HttpGetAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Http.HttpGetAttribute.HttpMethods">
      <summary>Obtiene la colección de métodos HTTP.</summary>
      <returns>Una colección de métodos HTTP.</returns>
    </member>
    <member name="T:System.Web.Http.HttpHeadAttribute">
      <summary>Representa un atributo de cabecera HTTP.</summary>
    </member>
    <member name="M:System.Web.Http.HttpHeadAttribute.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.HttpHeadAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Http.HttpHeadAttribute.HttpMethods">
      <summary>Obtiene la colección de métodos HTTP.</summary>
      <returns>Una colección de métodos HTTP.</returns>
    </member>
    <member name="T:System.Web.Http.HttpOptionsAttribute">
      <summary>Representa un atributo que se usa para restringir un método HTTP de forma que el método administre solamente las solicitudes HTTP OPTIONS.</summary>
    </member>
    <member name="M:System.Web.Http.HttpOptionsAttribute.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.HttpOptionsAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Http.HttpOptionsAttribute.HttpMethods">
      <summary>Obtiene la colección de métodos que admiten las solicitudes HTTP OPTIONS.</summary>
      <returns>La colección de métodos que admiten las solicitudes HTTP OPTIONS.</returns>
    </member>
    <member name="T:System.Web.Http.HttpPatchAttribute">
      <summary>Representa un atributo de parche HTTP.</summary>
    </member>
    <member name="M:System.Web.Http.HttpPatchAttribute.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.HttpPatchAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Http.HttpPatchAttribute.HttpMethods">
      <summary>Obtiene una colección de métodos HTTP.</summary>
      <returns>Una colección de métodos HTTP.</returns>
    </member>
    <member name="T:System.Web.Http.HttpPostAttribute">
      <summary>No se actualizará ningún contenido aquí; no agregue material aquí.</summary>
    </member>
    <member name="M:System.Web.Http.HttpPostAttribute.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.HttpPostAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Http.HttpPostAttribute.HttpMethods">
      <summary>Obtiene una colección de métodos HTTP.</summary>
      <returns>Una colección de métodos HTTP.</returns>
    </member>
    <member name="T:System.Web.Http.HttpPutAttribute">
      <summary>Representa un atributo que se usa para restringir un método HTTP de forma que el método administre solamente las solicitudes HTTP PUT.</summary>
    </member>
    <member name="M:System.Web.Http.HttpPutAttribute.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.HttpPutAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Http.HttpPutAttribute.HttpMethods">
      <summary>Obtiene la colección de solo lectura de los métodos HTTP PUT.</summary>
      <returns>La colección de solo lectura de los métodos HTTP PUT.</returns>
    </member>
    <member name="T:System.Web.Http.HttpResponseException">
      <summary> Excepción que permite que un determinado <see cref="T:System.Net.Http.HttpResponseMessage" /> sea devuelto al cliente. </summary>
    </member>
    <member name="M:System.Web.Http.HttpResponseException.#ctor(System.Net.Http.HttpResponseMessage)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.HttpResponseException" />.</summary>
      <param name="response">Respuesta HTTP que para devolver al cliente.</param>
    </member>
    <member name="M:System.Web.Http.HttpResponseException.#ctor(System.Net.HttpStatusCode)">
      <summary> Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.HttpResponseException" />. </summary>
      <param name="statusCode">Código de estado de la respuesta.</param>
    </member>
    <member name="P:System.Web.Http.HttpResponseException.Response">
      <summary>Obtiene la respuesta HTTP para devolver al cliente.</summary>
      <returns>
        <see cref="T:System.Net.Http.HttpResponseMessage" /> que representa la respuesta HTTP.</returns>
    </member>
    <member name="T:System.Web.Http.HttpRouteCollection">
      <summary>Colección de instancias de <see cref="T:System.Web.Http.Routing.IHttpRoute" />.</summary>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.HttpRouteCollection" />.</summary>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.#ctor(System.String)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.HttpRouteCollection" />.</summary>
      <param name="virtualPathRoot">Raíz de ruta de acceso virtual.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.Add(System.String,System.Web.Http.Routing.IHttpRoute)">
      <summary>Agrega una instancia de <see cref="T:System.Web.Http.Routing.IHttpRoute" /> a la colección.</summary>
      <param name="name">Nombre de la ruta.</param>
      <param name="route">Instancia de <see cref="T:System.Web.Http.Routing.IHttpRoute" /> que se agrega a la colección.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.Clear">
      <summary>Quita todos los elementos de la colección.</summary>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.Contains(System.Web.Http.Routing.IHttpRoute)">
      <summary>Determina si la colección contiene un <see cref="T:System.Web.Http.Routing.IHttpRoute" /> específico.</summary>
      <returns>true si <see cref="T:System.Web.Http.Routing.IHttpRoute" /> se encuentra en la colección; en caso contrario, false.</returns>
      <param name="item">Objeto que se va a buscar en la colección.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.ContainsKey(System.String)">
      <summary>Determina si la colección contiene un elemento con la clave especificada.</summary>
      <returns>true si la colección contiene un elemento con la clave; de lo contrario, false.</returns>
      <param name="name">Clave que se va a localizar en la colección.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Web.Http.Routing.IHttpRoute}[],System.Int32)">
      <summary>Copia las instancias de <see cref="T:System.Web.Http.Routing.IHttpRoute" /> de la colección en una matriz, que empieza en un índice de matriz en particular.</summary>
      <param name="array">Matriz que constituye el destino de los elementos copiados de la colección.</param>
      <param name="arrayIndex">Índice de base cero de <paramref name="array" /> donde se comienza a copiar.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.CopyTo(System.Web.Http.Routing.IHttpRoute[],System.Int32)">
      <summary>Copia los nombres de ruta e instancias de <see cref="T:System.Web.Http.Routing.IHttpRoute" /> de la colección en una matriz, que empieza en un índice de matriz en particular.</summary>
      <param name="array">Matriz que constituye el destino de los elementos copiados de la colección.</param>
      <param name="arrayIndex">Índice de base cero de <paramref name="array" /> donde se comienza a copiar.</param>
    </member>
    <member name="P:System.Web.Http.HttpRouteCollection.Count">
      <summary>Obtiene el número de elementos de la colección.</summary>
      <returns>Número de elementos de la colección.</returns>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.CreateRoute(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Crea una instancia de <see cref="T:System.Web.Http.Routing.IHttpRoute" />.</summary>
      <returns>La nueva instancia de <see cref="T:System.Web.Http.Routing.IHttpRoute" />.</returns>
      <param name="routeTemplate">Plantilla de la ruta.</param>
      <param name="defaults">Objeto que contiene los valores de ruta predeterminados.</param>
      <param name="constraints">Objeto que contiene las restricciones de la ruta.</param>
      <param name="dataTokens">Tokens de datos de la ruta.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.CreateRoute(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},System.Net.Http.HttpMessageHandler)">
      <summary>Crea una instancia de <see cref="T:System.Web.Http.Routing.IHttpRoute" />.</summary>
      <returns>La nueva instancia de <see cref="T:System.Web.Http.Routing.IHttpRoute" />.</returns>
      <param name="routeTemplate">Plantilla de la ruta.</param>
      <param name="defaults">Objeto que contiene los valores de ruta predeterminados.</param>
      <param name="constraints">Objeto que contiene las restricciones de la ruta.</param>
      <param name="dataTokens">Tokens de datos de la ruta.</param>
      <param name="handler">Gestor de mensajes para la ruta.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.CreateRoute(System.String,System.Object,System.Object)">
      <summary>Crea una instancia de <see cref="T:System.Web.Http.Routing.IHttpRoute" />.</summary>
      <returns>La nueva instancia de <see cref="T:System.Web.Http.Routing.IHttpRoute" />.</returns>
      <param name="routeTemplate">Plantilla de la ruta.</param>
      <param name="defaults">Objeto que contiene los valores de ruta predeterminados.</param>
      <param name="constraints">Objeto que contiene las restricciones de la ruta.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.Dispose">
      <summary>Realiza tareas definidas por aplicación asociadas con liberar o restablecer recursos no administrados.</summary>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.Dispose(System.Boolean)">
      <summary>Libera los recursos no administrados que utiliza el objeto y, opcionalmente, libera los recursos administrados.</summary>
      <param name="disposing">true para liberar tanto los recursos administrados como los no administrados; false para liberar únicamente los recursos no administrados.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.GetEnumerator">
      <summary>Devuelve un enumerador que se itera por toda la colección.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerator`1" /> que se puede usar para iterar por la colección.</returns>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.GetRouteData(System.Net.Http.HttpRequestMessage)">
      <summary>Obtiene los datos de ruta de una solicitud HTTP especificada.</summary>
      <returns>Instancia de <see cref="T:System.Web.Http.Routing.IHttpRouteData" /> que representa los datos de la ruta.</returns>
      <param name="request">Solicitud HTTP.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.GetVirtualPath(System.Net.Http.HttpRequestMessage,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Obtiene una ruta de acceso virtual.</summary>
      <returns>Instancia de <see cref="T:System.Web.Http.Routing.IHttpVirtualPathData" /> que representa la ruta de acceso virtual.</returns>
      <param name="request">Solicitud HTTP.</param>
      <param name="name">Nombre de la ruta.</param>
      <param name="values">Valores de ruta.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.Insert(System.Int32,System.String,System.Web.Http.Routing.IHttpRoute)">
      <summary>Inserta una instancia de <see cref="T:System.Web.Http.Routing.IHttpRoute" /> en la colección.</summary>
      <param name="index">Índice de base cero en el que debe insertarse <paramref name="value" />.</param>
      <param name="name">Nombre de la ruta.</param>
      <param name="value">La <see cref="T:System.Web.Http.Routing.IHttpRoute" /> que se va a insertar. El valor no puede ser null.</param>
    </member>
    <member name="P:System.Web.Http.HttpRouteCollection.IsReadOnly">
      <summary>Obtiene un valor que indica si la colección es de solo lectura.</summary>
      <returns>true si la colección es de solo lectura; en caso contrario, false.</returns>
    </member>
    <member name="P:System.Web.Http.HttpRouteCollection.Item(System.Int32)">
      <summary>Obtiene o establece el elemento del índice especificado.</summary>
      <returns>
        <see cref="T:System.Web.Http.Routing.IHttpRoute" /> en el índice especificado.</returns>
      <param name="index">Índice de base cero del elemento que se va a obtener o establecer.</param>
    </member>
    <member name="P:System.Web.Http.HttpRouteCollection.Item(System.String)">
      <summary>Obtiene o establece el elemento con el nombre de ruta especificado.</summary>
      <returns>
        <see cref="T:System.Web.Http.Routing.IHttpRoute" /> en el índice especificado.</returns>
      <param name="name">Nombre de la ruta.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.OnGetEnumerator">
      <summary>Se llama internamente para obtener el enumerador para la colección.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> que se puede usar para iterar por la colección.</returns>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.Remove(System.String)">
      <summary>Quita una instancia de <see cref="T:System.Web.Http.Routing.IHttpRoute" /> de la colección.</summary>
      <returns>true si el elemento se eliminó correctamente; en caso contrario, false. Este método también devuelve false si <paramref name="name" /> no se encuentra en la colección.</returns>
      <param name="name">Nombre de la ruta que se va a quitar.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.System#Collections#Generic#ICollection{T}#Add(System.Web.Http.Routing.IHttpRoute)">
      <summary>Agrega un elemento a la colección.</summary>
      <param name="route">Objeto que se agrega a la colección.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.System#Collections#Generic#ICollection{T}#Remove(System.Web.Http.Routing.IHttpRoute)">
      <summary>Quita la primera aparición de un objeto especificado de la colección.</summary>
      <returns>Es true si <paramref name="route" /> se quitó correctamente de la colección; de lo contrario, es false. Este método también devuelve false si <paramref name="route" /> no se encontró en la colección original.</returns>
      <param name="route">Objeto que se va a quitar de la colección.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Devuelve un enumerador que se itera por toda la colección.</summary>
      <returns>Objeto <see cref="T:System.Collections.IEnumerator" /> que se puede usar para recorrer en iteración la colección.</returns>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.TryGetValue(System.String,System.Web.Http.Routing.IHttpRoute@)">
      <summary>Obtiene <see cref="T:System.Web.Http.Routing.IHttpRoute" /> con el nombre de ruta especificado.</summary>
      <returns>true si la colección contiene un elemento con el nombre especificado; de lo contrario, false.</returns>
      <param name="name">Nombre de la ruta.</param>
      <param name="route">Cuando este método devuelve un valor, contiene la instancia de <see cref="T:System.Web.Http.Routing.IHttpRoute" />, si se encuentra el nombre de ruta; en caso contrario, null. Este parámetro se pasa sin inicializar.</param>
    </member>
    <member name="P:System.Web.Http.HttpRouteCollection.VirtualPathRoot">
      <summary>Obtiene la raíz de la ruta de acceso virtual.</summary>
      <returns>Raíz de ruta de acceso virtual.</returns>
    </member>
    <member name="T:System.Web.Http.HttpRouteCollectionExtensions">
      <summary> Métodos de extensión para <see cref="T:System.Web.Http.HttpRouteCollection" /></summary>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollectionExtensions.MapHttpRoute(System.Web.Http.HttpRouteCollection,System.String,System.String)">
      <summary>Asigna la plantilla de ruta especificada.</summary>
      <returns>Una referencia a la ruta asignada.</returns>
      <param name="routes">Una colección de rutas para la aplicación.</param>
      <param name="name">Nombre de la ruta que se va a asignar.</param>
      <param name="routeTemplate">Plantilla de ruta para la ruta.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollectionExtensions.MapHttpRoute(System.Web.Http.HttpRouteCollection,System.String,System.String,System.Object)">
      <summary>Asigna la plantilla de ruta especificada y establece valores de ruta predeterminados.</summary>
      <returns>Una referencia a la ruta asignada.</returns>
      <param name="routes">Una colección de rutas para la aplicación.</param>
      <param name="name">Nombre de la ruta que se va a asignar.</param>
      <param name="routeTemplate">Plantilla de ruta para la ruta.</param>
      <param name="defaults">Objeto que contiene los valores de ruta predeterminados.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollectionExtensions.MapHttpRoute(System.Web.Http.HttpRouteCollection,System.String,System.String,System.Object,System.Object)">
      <summary>Asigna la plantilla de ruta especificada y establece los valores de ruta predeterminados y las restricciones.</summary>
      <returns>Una referencia a la ruta asignada.</returns>
      <param name="routes">Una colección de rutas para la aplicación.</param>
      <param name="name">Nombre de la ruta que se va a asignar.</param>
      <param name="routeTemplate">Plantilla de ruta para la ruta.</param>
      <param name="defaults">Objeto que contiene los valores de ruta predeterminados.</param>
      <param name="constraints">Conjunto de expresiones que restringen los valores para routeTemplate.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollectionExtensions.MapHttpRoute(System.Web.Http.HttpRouteCollection,System.String,System.String,System.Object,System.Object,System.Net.Http.HttpMessageHandler)">
      <summary> Asigna la plantilla de ruta especificada y establece los valores de ruta predeterminados, las restricciones y el gestor de mensajes de extremo. </summary>
      <returns>Una referencia a la ruta asignada.</returns>
      <param name="routes">Una colección de rutas para la aplicación.</param>
      <param name="name">Nombre de la ruta que se va a asignar.</param>
      <param name="routeTemplate">Plantilla de ruta para la ruta.</param>
      <param name="defaults">Objeto que contiene los valores de ruta predeterminados.</param>
      <param name="constraints">Conjunto de expresiones que restringen los valores para routeTemplate.</param>
      <param name="handler">Controlador al que se enviará la solicitud.</param>
    </member>
    <member name="T:System.Web.Http.HttpServer">
      <summary> Define una implementación de un <see cref="T:System.Net.Http.HttpMessageHandler" /> que envía un <see cref="T:System.Net.Http.HttpRequestMessage" /> entrante y como resultado crea un <see cref="T:System.Net.Http.HttpResponseMessage" />. </summary>
    </member>
    <member name="M:System.Web.Http.HttpServer.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.HttpServer" />, usando el despachante y la configuración predeterminados.</summary>
    </member>
    <member name="M:System.Web.Http.HttpServer.#ctor(System.Net.Http.HttpMessageHandler)">
      <summary> Inicializa una nueva instancia de la clase <see cref="T:System.Web.Http.HttpServer" /> con un despachante especificado. </summary>
      <param name="dispatcher">Despachante de HTTP que controlará las solicitudes entrantes.</param>
    </member>
    <member name="M:System.Web.Http.HttpServer.#ctor(System.Web.Http.HttpConfiguration)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Http.HttpServer" /> con una configuración especificada.</summary>
      <param name="configuration">
        <see cref="T:System.Web.Http.HttpConfiguration" /> utilizada para configurar esta instancia.</param>
    </member>
    <member name="M:System.Web.Http.HttpServer.#ctor(System.Web.Http.HttpConfiguration,System.Net.Http.HttpMessageHandler)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Http.HttpServer" /> con el despachante y la configuración especificados.</summary>
      <param name="configuration">
        <see cref="T:System.Web.Http.HttpConfiguration" /> utilizada para configurar esta instancia.</param>
      <param name="dispatcher">Despachante de HTTP que controlará las solicitudes entrantes.</param>
    </member>
    <member name="P:System.Web.Http.HttpServer.Configuration">
      <summary>Obtiene la <see cref="T:System.Web.Http.HttpConfiguration" /> que se usa para configurar esta instancia.</summary>
      <returns>
        <see cref="T:System.Web.Http.HttpConfiguration" /> utilizada para configurar esta instancia.</returns>
    </member>
    <member name="P:System.Web.Http.HttpServer.Dispatcher">
      <summary>Obtiene el despachante de HTTP que gestiona las solicitudes entrantes.</summary>
      <returns>Despachante de HTTP que controla las solicitudes entrantes.</returns>
    </member>
    <member name="M:System.Web.Http.HttpServer.Dispose(System.Boolean)">
      <summary>Libera los recursos no administrados que utiliza el objeto y, opcionalmente, libera los recursos administrados.</summary>
      <param name="disposing">true para liberar tanto los recursos administrados como los no administrados; false para liberar únicamente los recursos no administrados.</param>
    </member>
    <member name="M:System.Web.Http.HttpServer.Initialize">
      <summary>Prepara al servidor para su funcionamiento.</summary>
    </member>
    <member name="M:System.Web.Http.HttpServer.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Envía un <see cref="T:System.Net.Http.HttpRequestMessage" /> entrante.</summary>
      <returns> Tarea que representa la operación asíncrona.</returns>
      <param name="request">La solicitud que se debe enviar.</param>
      <param name="cancellationToken">Token que va a supervisar las solicitudes de cancelación.</param>
    </member>
    <member name="T:System.Web.Http.IncludeErrorDetailPolicy">
      <summary>Especifica si los detalles de error, como los mensajes de excepción y los seguimientos de pilas, deberían incluirse en los mensajes de error.</summary>
    </member>
    <member name="F:System.Web.Http.IncludeErrorDetailPolicy.Default">
      <summary>Utilizar el comportamiento predeterminado para el entorno de host. Para el hospedaje ASP.NET, utilice el valor del elemento customErrors en el archivo Web.config. Para el hospedaje propio, utilice el valor <see cref="F:System.Web.Http.IncludeErrorDetailPolicy.LocalOnly" />.</summary>
    </member>
    <member name="F:System.Web.Http.IncludeErrorDetailPolicy.LocalOnly">
      <summary>Incluir solamente detalles de errores al responder a una solicitud local. </summary>
    </member>
    <member name="F:System.Web.Http.IncludeErrorDetailPolicy.Always">
      <summary>Incluir siempre detalles de errores.</summary>
    </member>
    <member name="F:System.Web.Http.IncludeErrorDetailPolicy.Never">
      <summary>No incluir nunca detalles de errores. </summary>
    </member>
    <member name="T:System.Web.Http.NonActionAttribute">
      <summary>Representa un atributo que se utiliza para indicar que un método de controlador no es un método de acción.</summary>
    </member>
    <member name="M:System.Web.Http.NonActionAttribute.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.NonActionAttribute" />.</summary>
    </member>
    <member name="T:System.Web.Http.ParameterBindingAttribute">
      <summary> El atributo de un parámetro o tipo que produce un <see cref="T:System.Web.Http.Controllers.HttpParameterBinding" />.  Si el atributo se encuentra en una declaración de tipos, es como si el atributo estuviera presente en todos los parámetros de acción de dicho tipo. </summary>
    </member>
    <member name="M:System.Web.Http.ParameterBindingAttribute.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Http.ParameterBindingAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Http.ParameterBindingAttribute.GetBinding(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>Obtiene el enlazado de parámetros.</summary>
      <returns>El enlazado de parámetros.</returns>
      <param name="parameter">La descripción del parámetro.</param>
    </member>
    <member name="T:System.Web.Http.RouteParameter">
      <summary>La clase <see cref="T:System.Web.Http.RouteParameter" /> puede utilizarse para indicar propiedades acerca de un parámetro de ruta (los literales y los marcadores ubicados dentro de segmentos de una <see cref="M:IHttpRoute.RouteTemplate" />).  Por ejemplo, puede utilizarse para indicar que un parámetro de ruta es opcional. </summary>
    </member>
    <member name="F:System.Web.Http.RouteParameter.Optional">
      <summary>Un parámetro opcional.</summary>
    </member>
    <member name="M:System.Web.Http.RouteParameter.ToString">
      <summary>Devuelve una <see cref="T:System.String" /> que representa esta instancia.</summary>
      <returns>Una <see cref="T:System.String" /> que representa esta instancia.</returns>
    </member>
    <member name="T:System.Web.Http.ServicesExtensions">
      <summary>Proporciona accesos con seguridad de tipo para servicios obtenidos de un objeto <see cref="T:System.Web.Http.Controllers.ServicesContainer" />.</summary>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetActionInvoker(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Obtiene el servicio <see cref="T:System.Web.Http.Controllers.IHttpActionInvoker" />.</summary>
      <returns>Devuelve una instancia de <see cref="T:System.Web.Http.Controllers.IHttpActionInvoker" />.</returns>
      <param name="services">Contenedor de servicios.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetActionSelector(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Obtiene el servicio <see cref="T:System.Web.Http.Controllers.IHttpActionSelector" />.</summary>
      <returns>Devuelve una instancia de <see cref="T:System.Web.Http.Controllers.IHttpActionSelector" />.</returns>
      <param name="services">Contenedor de servicios.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetActionValueBinder(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Obtiene el servicio <see cref="T:System.Web.Http.Controllers.IActionValueBinder" />.</summary>
      <returns>Devuelve una instancia de <see cref="T:System.Web.Http.Controllers.IActionValueBinder" />.</returns>
      <param name="services">Contenedor de servicios.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetApiExplorer(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Obtiene el servicio <see cref="T:System.Web.Http.Description.IApiExplorer" />.</summary>
      <returns>Devuelve una instancia de <see cref="T:System.Web.Http.Description.IApiExplorer" />.</returns>
      <param name="services">Contenedor de servicios.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetAssembliesResolver(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Obtiene el servicio <see cref="T:System.Web.Http.Dispatcher.IAssembliesResolver" />.</summary>
      <returns>Devuelve una instancia de <see cref="T:System.Web.Http.Dispatcher.IAssembliesResolver" />.</returns>
      <param name="services">Contenedor de servicios.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetBodyModelValidator(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Obtiene el servicio <see cref="T:System.Web.Http.Validation.IBodyModelValidator" />.</summary>
      <returns>Devuelve una instancia de <see cref="T:System.Web.Http.Validation.IBodyModelValidator" />.</returns>
      <param name="services">Contenedor de servicios.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetContentNegotiator(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Obtiene el servicio <see cref="T:System.Net.Http.Formatting.IContentNegotiator" />.</summary>
      <returns>Devuelve una instancia de <see cref="T:System.Net.Http.Formatting.IContentNegotiator" />.</returns>
      <param name="services">Contenedor de servicios.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetDocumentationProvider(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Obtiene el servicio <see cref="T:System.Web.Http.Description.IDocumentationProvider" />.</summary>
      <returns>Devuelve una instancia de <see cref="T:System.Web.Http.Description.IDocumentationProvider" />.</returns>
      <param name="services">Contenedor de servicios.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetFilterProviders(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Obtiene la colección <see cref="T:System.Web.Http.Filters.IFilterProvider" />.</summary>
      <returns>Devuelve una colección de objetos <see cref="T:System.Web.Http.Filters.IFilterProvider" />.</returns>
      <param name="services">Contenedor de servicios.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetHostBufferPolicySelector(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Obtiene el servicio <see cref="T:System.Web.Http.Hosting.IHostBufferPolicySelector" />.</summary>
      <returns>Devuelve una instancia de <see cref="T:System.Web.Http.Hosting.IHostBufferPolicySelector" />.</returns>
      <param name="services">Contenedor de servicios.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetHttpControllerActivator(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Obtiene el servicio <see cref="T:System.Web.Http.Dispatcher.IHttpControllerActivator" />.</summary>
      <returns>Devuelve una instancia de <see cref="T:System.Web.Http.Dispatcher.IHttpControllerActivator" /> o null si no se ha registrado ninguna instancia.</returns>
      <param name="services">Contenedor de servicios.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetHttpControllerSelector(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Obtiene el servicio <see cref="T:System.Web.Http.Dispatcher.IHttpControllerSelector" />.</summary>
      <returns>Devuelve una instancia de <see cref="T:System.Web.Http.Dispatcher.IHttpControllerSelector" />.</returns>
      <param name="services">Contenedor de servicios.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetHttpControllerTypeResolver(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Obtiene el servicio <see cref="T:System.Web.Http.Dispatcher.IHttpControllerTypeResolver" />.</summary>
      <returns>Devuelve una instancia de <see cref="T:System.Web.Http.Dispatcher.IHttpControllerTypeResolver" />.</returns>
      <param name="services">Contenedor de servicios.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetModelBinderProviders(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Obtiene la colección <see cref="T:System.Web.Http.ModelBinding.ModelBinderProvider" />.</summary>
      <returns>Devuelve una colección de objetos <see cref="T:System.Web.Http.ModelBinding.ModelBinderProvider" />.</returns>
      <param name="services">Contenedor de servicios.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetModelMetadataProvider(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Obtiene el servicio <see cref="T:System.Web.Http.Metadata.ModelMetadataProvider" />.</summary>
      <returns>Devuelve una instancia de <see cref="T:System.Web.Http.Metadata.ModelMetadataProvider" />.</returns>
      <param name="services">Contenedor de servicios.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetModelValidatorProviders(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Obtiene la colección <see cref="T:System.Web.Http.Validation.ModelValidatorProvider" />.</summary>
      <returns>Devuelve una colección de objetos <see cref="T:System.Web.Http.Validation.ModelValidatorProvider" />.</returns>
      <param name="services">Contenedor de servicios.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetTraceManager(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Obtiene el servicio <see cref="T:System.Web.Http.Tracing.ITraceManager" />.</summary>
      <returns>Devuelve una instancia de <see cref="T:System.Web.Http.Tracing.ITraceManager" />.</returns>
      <param name="services">Contenedor de servicios.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetTraceWriter(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Obtiene el servicio <see cref="T:System.Web.Http.Tracing.ITraceWriter" />. </summary>
      <returns>Devuelve una instancia de <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</returns>
      <param name="services">Contenedor de servicios.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetValueProviderFactories(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Obtiene la colección <see cref="T:System.Web.Http.ValueProviders.ValueProviderFactory" />.</summary>
      <returns>Devuelve una colección de objetos <see cref="T:System.Web.Http.ValueProviders.ValueProviderFactory" />.</returns>
      <param name="services">Contenedor de servicios.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.ApiControllerActionInvoker">
      <summary>Invoca los métodos de acción de un controlador.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ApiControllerActionInvoker.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Controllers.ApiControllerActionInvoker" />.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ApiControllerActionInvoker.InvokeActionAsync(System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)">
      <summary>Invoca de manera asíncrona la acción especificada mediante el contexto del controlador especificado.</summary>
      <returns>La acción invocada.</returns>
      <param name="actionContext">Contexto del controlador.</param>
      <param name="cancellationToken">Token de cancelación.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.ApiControllerActionSelector">
      <summary>Representa un selector de acción basado en una reflexión.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ApiControllerActionSelector.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Controllers.ApiControllerActionSelector" />.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ApiControllerActionSelector.GetActionMapping(System.Web.Http.Controllers.HttpControllerDescriptor)">
      <summary>Obtiene las asignaciones de acción para el elemento <see cref="T:System.Web.Http.Controllers.ApiControllerActionSelector" />.</summary>
      <returns>Las asignaciones de la acción.</returns>
      <param name="controllerDescriptor">La información que describe un controlador.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ApiControllerActionSelector.SelectAction(System.Web.Http.Controllers.HttpControllerContext)">
      <summary>Selecciona una acción para el elemento <see cref="T:System.Web.Http.Controllers.ApiControllerActionSelector" />.</summary>
      <returns>La acción seleccionada.</returns>
      <param name="controllerContext">Contexto del controlador.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.ControllerServices">
      <summary> Representa un contenedor de servicios que puede ser específico de un controlador.  Sombrea los servicios de su <see cref="T:System.Web.Http.Controllers.ServicesContainer" /> primario. Un controlador puede definir un servicio aquí o pasar explícitamente a un conjunto de servicios más global.  </summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ControllerServices.#ctor(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Http.Controllers.ControllerServices" />.</summary>
      <param name="parent">El contenedor de los servicios primarios.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ControllerServices.ClearSingle(System.Type)">
      <summary>Quita un servicio de instancia única de los servicios predeterminados.</summary>
      <param name="serviceType">El tipo de servicio.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ControllerServices.GetService(System.Type)">
      <summary>Obtiene un servicio del tipo especificado.</summary>
      <returns>La primera instancia del servicio o null si no se encuentra el servicio.</returns>
      <param name="serviceType">El tipo de servicio.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ControllerServices.GetServiceInstances(System.Type)">
      <summary>Obtiene la lista de objetos de servicio de un tipo de servicio dado y valida el tipo de servicio.</summary>
      <returns>La lista de objetos de servicio del tipo especificado.</returns>
      <param name="serviceType">El tipo de servicio.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ControllerServices.GetServices(System.Type)">
      <summary>Obtiene una lista de objetos de servicio de un tipo de servicio dado.</summary>
      <returns>La lista de objetos de servicio del tipo especificado o una lista vacía si no se encuentra el servicio.</returns>
      <param name="serviceType">El tipo de servicio.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ControllerServices.IsSingleService(System.Type)">
      <summary>Consulta si el tipo de servicio es de instancia única.</summary>
      <returns>true si el tipo de servicio tiene al menos una instancia o false si el tipo de servicio admite varias instancias.</returns>
      <param name="serviceType">El tipo de servicio.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ControllerServices.ReplaceSingle(System.Type,System.Object)">
      <summary>Reemplaza un objeto de servicio de instancia única.</summary>
      <param name="serviceType">El tipo de servicio.</param>
      <param name="service">El objeto de servicio que reemplaza la instancia anterior.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.HttpActionBinding">
      <summary>Describe *cómo* el enlace se producirá y no realiza el enlazado en sí.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionBinding.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Controllers.HttpActionBinding" />.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionBinding.#ctor(System.Web.Http.Controllers.HttpActionDescriptor,System.Web.Http.Controllers.HttpParameterBinding[])">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Controllers.HttpActionBinding" />.</summary>
      <param name="actionDescriptor">El puntero trasero a la acción para la que realiza este enlazado.  </param>
      <param name="bindings">Los enlazados asíncronos para cada parámetro.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionBinding.ActionDescriptor">
      <summary>Obtiene o establece el puntero trasero a la acción para la que realiza este enlazado.  </summary>
      <returns>El puntero trasero a la acción para la que realiza este enlazado.  </returns>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionBinding.ExecuteBindingAsync(System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)">
      <summary>Ejecuta de manera asíncrona el enlazado para la solicitud determinada.</summary>
      <returns>Tarea que se señala cuando el enlazado se ha completado. </returns>
      <param name="actionContext">El contexto de acción para el enlazado. Esto contiene el diccionario de parámetros que se rellenará.</param>
      <param name="cancellationToken">El token de cancelación para cancelar la operación de enlazado. O un enlazador también puede enlazar un parámetro a esto.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionBinding.ParameterBindings">
      <summary>Obtiene o establece los enlazados asíncronos para cada parámetro. </summary>
      <returns>Los enlazados asíncronos para cada parámetro.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.HttpActionContext">
      <summary>Contiene información para la acción en ejecución.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionContext.#ctor">
      <summary> Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Controllers.HttpActionContext" />. </summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionContext.#ctor(System.Web.Http.Controllers.HttpControllerContext,System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Controllers.HttpActionContext" />.</summary>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="actionDescriptor">Descriptor de la acción.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionContext.ActionArguments">
      <summary>Obtiene una lista de argumentos de acción.</summary>
      <returns>Una lista de argumentos de acción.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionContext.ActionDescriptor">
      <summary>Obtiene o establece el descriptor de acción para el contexto de acción.</summary>
      <returns>Descriptor de la acción.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionContext.ControllerContext">
      <summary>Obtiene o establece el contexto del controlador.</summary>
      <returns>Contexto del controlador.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionContext.ModelState">
      <summary>Obtiene el diccionario de estado de modelo para el contexto.</summary>
      <returns>Diccionario de estado del modelo.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionContext.Request">
      <summary>Obtiene el mensaje de solicitud para el contexto de acción.</summary>
      <returns>El mensaje de solicitud para el contexto de acción.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionContext.Response">
      <summary>Obtiene o establece el mensaje de respuesta para el contexto de acción.</summary>
      <returns>El mensaje de respuesta para el contexto de acción.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.HttpActionContextExtensions">
      <summary>Contiene métodos de extensión para <see cref="T:System.Web.Http.Controllers.HttpActionContext" />.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionContextExtensions.Bind(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Enlaza el modelo a un valor utilizando el contexto del controlador y el contexto de enlace especificados.</summary>
      <returns>true si el enlace fue correcto; de lo contrario, false.</returns>
      <param name="actionContext">Contexto de ejecución.</param>
      <param name="bindingContext">Contexto de enlace.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionContextExtensions.Bind(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext,System.Collections.Generic.IEnumerable{System.Web.Http.ModelBinding.IModelBinder})">
      <summary>Enlaza el modelo a un valor utilizando el contexto del controlador, el contexto de enlace y los enlazadores de modelos especificados.</summary>
      <returns>true si el enlace fue correcto; de lo contrario, false.</returns>
      <param name="actionContext">Contexto de ejecución.</param>
      <param name="bindingContext">Contexto de enlace.</param>
      <param name="binders">La colección de enlazadores de modelos.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionContextExtensions.GetMetadataProvider(System.Web.Http.Controllers.HttpActionContext)">
      <summary>Recupera la instancia de <see cref="T:System.Web.Http.Metadata.ModelMetadataProvider" /> para un determinado <see cref="T:System.Web.Http.Controllers.HttpActionContext" />. </summary>
      <returns>Una instancia de <see cref="T:System.Web.Http.Metadata.ModelMetadataProvider" />.</returns>
      <param name="actionContext">Contexto.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionContextExtensions.GetValidatorProviders(System.Web.Http.Controllers.HttpActionContext)">
      <summary>Recupera la colección de instancias de <see cref="T:System.Web.Http.Validation.ModelValidatorProvider" /> registradas.</summary>
      <returns>Colección de instancias de <see cref="T:System.Web.Http.Validation.ModelValidatorProvider" />.</returns>
      <param name="actionContext">Contexto.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionContextExtensions.GetValidators(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.Metadata.ModelMetadata)">
      <summary>Recupera la colección de instancias de <see cref="T:System.Web.Http.Validation.ModelValidator" /> registradas. </summary>
      <returns>Colección de instancias de <see cref="T:System.Web.Http.Validation.ModelValidator" /> registradas.</returns>
      <param name="actionContext">Contexto.</param>
      <param name="metadata">Metadatos.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionContextExtensions.TryBindStrongModel``1(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext,System.String,System.Web.Http.Metadata.ModelMetadataProvider,``0@)">
      <summary>Enlaza el modelo a la propiedad utilizando el contexto de ejecución y el contexto de enlace especificados.</summary>
      <returns>true si el enlace fue correcto; de lo contrario, false.</returns>
      <param name="actionContext">Contexto de ejecución.</param>
      <param name="parentBindingContext">Contexto de enlace primario.</param>
      <param name="propertyName">Nombre de la propiedad que se va a enlazar con el modelo.</param>
      <param name="metadataProvider">Proveedor de metadatos para el modelo.</param>
      <param name="model">Cuando se devuelve este método, contiene el modelo enlazado.</param>
      <typeparam name="TModel">Tipo del modelo.</typeparam>
    </member>
    <member name="T:System.Web.Http.Controllers.HttpActionDescriptor">
      <summary>Proporciona información acerca de los métodos de acción.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionDescriptor.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Controllers.HttpActionDescriptor" />.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionDescriptor.#ctor(System.Web.Http.Controllers.HttpControllerDescriptor)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Http.Controllers.HttpActionDescriptor" /> con información especificada que describe el controlador de la acción.</summary>
      <param name="controllerDescriptor">Información que describe el controlador de la acción.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionDescriptor.ActionBinding">
      <summary>Obtiene o establece el enlazado que describe la acción.</summary>
      <returns>Enlazado que describe la acción.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionDescriptor.ActionName">
      <summary>Obtiene el nombre de la acción.</summary>
      <returns>Nombre de la acción.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionDescriptor.Configuration">
      <summary>Obtiene o establece la configuración de acción.</summary>
      <returns>Configuración de acción.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionDescriptor.ControllerDescriptor">
      <summary>Obtiene la información que describe el controlador de la acción.</summary>
      <returns>Información que describe el controlador de la acción.</returns>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionDescriptor.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)">
      <summary>Ejecuta la acción descrita y devuelve un <see cref="T:System.Threading.Tasks.Task`1" /> que, una vez que se ha completado, tendrá el valor de devolución de la acción.</summary>
      <returns>
        <see cref="T:System.Threading.Tasks.Task`1" /> que, una vez que se ha completado, tendrá el valor de devolución de la acción.</returns>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="arguments">Lista de argumentos.</param>
      <param name="cancellationToken">Token de cancelación.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionDescriptor.GetCustomAttributes``1">
      <summary>Devuelve los atributos personalizados asociados con el descriptor de la acción.</summary>
      <returns>Atributos personalizados asociados con el descriptor de la acción.</returns>
      <typeparam name="T">Descriptor de la acción.</typeparam>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionDescriptor.GetFilterPipeline">
      <summary>Recupera los filtros para la configuración y acción dadas.</summary>
      <returns>Filtros para la configuración y acción dadas.</returns>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionDescriptor.GetFilters">
      <summary>Recupera los filtros para el descriptor de la acción.</summary>
      <returns>Filtros para el descriptor de la acción.</returns>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionDescriptor.GetParameters">
      <summary>Recupera los parámetros para el descriptor de la acción.</summary>
      <returns>Parámetros para el descriptor de la acción.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionDescriptor.Properties">
      <summary>Obtiene las propiedades asociadas con esta instancia.</summary>
      <returns>Propiedades asociadas con esta instancia.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionDescriptor.ResultConverter">
      <summary>Obtiene el convertidor para transformar correctamente el resultado de llamar a <see cref="M:System.Web.Http.Controllers.HttpActionDescriptor.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})" />" en una instancia de <see cref="T:System.Net.Http.HttpResponseMessage" />.</summary>
      <returns>Convertidor de resultados de la acción.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionDescriptor.ReturnType">
      <summary>Obtiene el tipo de devolución del descriptor.</summary>
      <returns>Tipo de devolución del descriptor.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionDescriptor.SupportedHttpMethods">
      <summary>Obtiene la colección de métodos HTTP admitidos para el descriptor.</summary>
      <returns>Colecciones de métodos HTTP admitidos para el descriptor.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.HttpControllerContext">
      <summary>Contiene información para una única operación HTTP.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpControllerContext.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Controllers.HttpControllerContext" />.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpControllerContext.#ctor(System.Web.Http.HttpConfiguration,System.Web.Http.Routing.IHttpRouteData,System.Net.Http.HttpRequestMessage)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Controllers.HttpControllerContext" />.</summary>
      <param name="configuration">Configuración.</param>
      <param name="routeData">Datos de la ruta.</param>
      <param name="request">Solicitud.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerContext.Configuration">
      <summary>Obtiene o establece la configuración.</summary>
      <returns>Configuración.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerContext.Controller">
      <summary>Obtiene o establece el controlador HTTP.</summary>
      <returns>Controlador HTTP.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerContext.ControllerDescriptor">
      <summary>Obtiene o establece el descriptor del controlador.</summary>
      <returns>Descriptor del controlador.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerContext.Request">
      <summary>Obtiene o establece la solicitud.</summary>
      <returns>Solicitud.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerContext.RouteData">
      <summary>Obtiene o establece los datos de ruta.</summary>
      <returns>Datos de la ruta.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.HttpControllerDescriptor">
      <summary>Representa información que describe el controlador HTTP.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpControllerDescriptor.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" />.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpControllerDescriptor.#ctor(System.Web.Http.HttpConfiguration,System.String,System.Type)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" />.</summary>
      <param name="configuration">Configuración.</param>
      <param name="controllerName">Nombre del controlador.</param>
      <param name="controllerType">Tipo del controlador.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerDescriptor.Configuration">
      <summary>Obtiene o establece las configuraciones asociadas con el controlador.</summary>
      <returns>Las configuraciones asociadas con el controlador.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerDescriptor.ControllerName">
      <summary>Obtiene o establece el nombre del controlador.</summary>
      <returns>Nombre del controlador.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerDescriptor.ControllerType">
      <summary>Obtiene o establece el tipo de controlador.</summary>
      <returns>Tipo del controlador.</returns>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpControllerDescriptor.CreateController(System.Net.Http.HttpRequestMessage)">
      <summary>Crea una instancia de controlador para el elemento <see cref="T:System.Net.Http.HttpRequestMessage" /> dado</summary>
      <returns>La instancia de controlador creada.</returns>
      <param name="request">Mensaje de solicitud</param>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpControllerDescriptor.GetCustomAttributes``1">
      <summary>Recupera una colección de atributos personalizados del controlador.</summary>
      <returns>Una colección de atributos personalizados.</returns>
      <typeparam name="T">Tipo del objeto.</typeparam>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpControllerDescriptor.GetFilters">
      <summary>Devuelve una colección de filtros asociada con este controlador.</summary>
      <returns>Una colección de filtros asociada con el controlador.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerDescriptor.Properties">
      <summary>Obtiene las propiedades asociadas con esta instancia.</summary>
      <returns>Propiedades asociadas con esta instancia.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.HttpControllerSettings">
      <summary>Contiene la configuración de un controlador HTTP.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpControllerSettings.#ctor(System.Web.Http.HttpConfiguration)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Http.Controllers.HttpControllerSettings" />.</summary>
      <param name="configuration">Un objeto de configuración usado para inicializar la instancia.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerSettings.Formatters">
      <summary>Obtiene la colección de instancias de <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> para el controlador.</summary>
      <returns>La colección de instancias de <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" />.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerSettings.ParameterBindingRules">
      <summary>Obtiene la colección de instancias de funciones de enlazado del parámetro para el controlador.</summary>
      <returns>La colección de funciones de enlazado del parámetro.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerSettings.Services">
      <summary>Obtiene la colección de instancias de servicio para el controlador.</summary>
      <returns>La colección de instancias de servicio.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.HttpParameterBinding">
      <summary> Describe cómo se enlaza un parámetro. El enlazado debería ser estático (basado exclusivamente en el descriptor) y puede compartirse entre solicitudes.  </summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpParameterBinding.#ctor(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Controllers.HttpParameterBinding" />.</summary>
      <param name="descriptor">
        <see cref="T:System.Web.Http.Controllers.HttpParameterDescriptor" /> que describe los parámetros.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterBinding.Descriptor">
      <summary>Obtiene el <see cref="T:System.Web.Http.Controllers.HttpParameterDescriptor" /> que se usa para inicializar esta instancia.</summary>
      <returns>Instancia de <see cref="T:System.Web.Http.Controllers.HttpParameterDescriptor" />.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterBinding.ErrorMessage">
      <summary>Si el enlazado no es válido, obtiene un mensaje de error que describe el error de enlazado.</summary>
      <returns>Mensaje de error. Si el enlazado ha sido correcto, el valor es null.</returns>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpParameterBinding.ExecuteBindingAsync(System.Web.Http.Metadata.ModelMetadataProvider,System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)">
      <summary>Ejecuta asincrónicamente el enlazado para la solicitud dada.</summary>
      <returns>Un objeto de tarea que representa la operación asincrónica.</returns>
      <param name="metadataProvider">Proveedor de metadatos que se utilizará para la validación.</param>
      <param name="actionContext">El contexto de acción para el enlazado. El contexto de acción contiene el diccionario de parámetros que se rellenará con el parámetro.</param>
      <param name="cancellationToken">Token de cancelación para cancelar la operación de enlazado.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpParameterBinding.GetValue(System.Web.Http.Controllers.HttpActionContext)">
      <summary> Obtiene el valor de parámetros del diccionario de argumentos del contexto de acción.</summary>
      <returns>El valor para este parámetro en el contexto de acción dado, o bien null si el parámetro aún no se ha configurado.</returns>
      <param name="actionContext">Contexto de acción.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterBinding.IsValid">
      <summary>Obtiene un valor que indica si el enlazado ha sido correcto.</summary>
      <returns>true si el enlazado se realizó correctamente; de lo contrario, false.</returns>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpParameterBinding.SetValue(System.Web.Http.Controllers.HttpActionContext,System.Object)">
      <summary>Establece el resultado de este enlazado de parámetro en el diccionario de argumentos del contexto de acción.  </summary>
      <param name="actionContext">Contexto de acción.</param>
      <param name="value">Valor del parámetro.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterBinding.WillReadBody">
      <summary>Devuelve un valor que indica si esta instancia de <see cref="T:System.Web.Http.Controllers.HttpParameterBinding" /> va a leer el cuerpo de entidad del mensaje HTTP.</summary>
      <returns>true si este <see cref="T:System.Web.Http.Controllers.HttpParameterBinding" /> va a leer el cuerpo de la entidad; en caso contrario, false.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.HttpParameterDescriptor">
      <summary>No se actualizará ningún contenido aquí; no agregue material aquí.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpParameterDescriptor.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Controllers.HttpParameterDescriptor" />.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpParameterDescriptor.#ctor(System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Controllers.HttpParameterDescriptor" />.</summary>
      <param name="actionDescriptor">Descriptor de la acción.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterDescriptor.ActionDescriptor">
      <summary>Obtiene o establece el descriptor de acción de auditoría.</summary>
      <returns>Descriptor de la acción.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterDescriptor.Configuration">
      <summary>Obtiene o establece el <see cref="T:System.Web.Http.HttpConfiguration" /> para el <see cref="T:System.Web.Http.Controllers.HttpParameterDescriptor" />.</summary>
      <returns>El <see cref="T:System.Web.Http.HttpConfiguration" /> para el <see cref="T:System.Web.Http.Controllers.HttpParameterDescriptor" />.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterDescriptor.DefaultValue">
      <summary>Obtiene el valor predeterminado del parámetro.</summary>
      <returns>Valor predeterminado del parámetro.</returns>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpParameterDescriptor.GetCustomAttributes``1">
      <summary>Recupera una colección de los atributos personalizados del parámetro.</summary>
      <returns>Una colección de los atributos personalizados del parámetro.</returns>
      <typeparam name="T">Tipo de los atributos personalizados.</typeparam>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterDescriptor.IsOptional">
      <summary>Obtiene un valor que indica si el parámetro es opcional.</summary>
      <returns>true si el parámetro es opcional; en caso contrario, false.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterDescriptor.ParameterBinderAttribute">
      <summary>Obtiene o establece el atributo de enlazado de parámetros.</summary>
      <returns>El atributo de enlazado de parámetros.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterDescriptor.ParameterName">
      <summary>Obtiene el nombre del parámetro.</summary>
      <returns>Nombre del parámetro.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterDescriptor.ParameterType">
      <summary>Obtiene el tipo de parámetro.</summary>
      <returns>Tipo del parámetro.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterDescriptor.Prefix">
      <summary>Obtiene el prefijo de este parámetro.</summary>
      <returns>Prefijo de este parámetro.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterDescriptor.Properties">
      <summary>Obtiene las propiedades de este parámetro.</summary>
      <returns>Propiedades de este parámetro.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.IActionResultConverter">
      <summary> Un contrato para una rutina de conversión que puede tomar el resultado de una acción devuelto desde &lt;see cref="M:System.Web.Http.Controllers.HttpActionDescriptor.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})" /&gt; y convertirlo a una instancia de <see cref="T:System.Net.Http.HttpResponseMessage" />. </summary>
    </member>
    <member name="M:System.Web.Http.Controllers.IActionResultConverter.Convert(System.Web.Http.Controllers.HttpControllerContext,System.Object)">
      <summary>Convierte el objeto <see cref="T:System.Web.Http.Controllers.IActionResultConverter" /> especificado en otro objeto.</summary>
      <returns>El objeto convertido.</returns>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="actionResult">Resultado de la acción.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.IActionValueBinder">
      <summary>No se actualizará ningún contenido aquí; no agregue material aquí.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.IActionValueBinder.GetBinding(System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary>Obtiene la <see cref="T:System.Web.Http.Controllers.HttpActionBinding" /></summary>
      <returns>Un objeto <see cref="T:System.Web.Http.Controllers.HttpActionBinding" />.</returns>
      <param name="actionDescriptor">Descriptor de la acción.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.IControllerConfiguration">
      <summary> Si un controlador se representa con un atributo en su interfaz, se le invocará para inicializar la configuración del controlador.  </summary>
    </member>
    <member name="M:System.Web.Http.Controllers.IControllerConfiguration.Initialize(System.Web.Http.Controllers.HttpControllerSettings,System.Web.Http.Controllers.HttpControllerDescriptor)">
      <summary> La devolución de llamada que se invoca para realizar reemplazos por controlador para este controllerDescriptor. </summary>
      <param name="controllerSettings">La configuración del controlador que se va a inicializar.</param>
      <param name="controllerDescriptor">El descriptor del controlador. Tenga en cuenta que <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> se puede asociar al tipo de controlador derivado, siempre y cuando que se herede <see cref="T:System.Web.Http.Controllers.IControllerConfiguration" />.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.IHttpActionInvoker">
      <summary>Contiene el método que se usa para invocar la operación HTTP.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.IHttpActionInvoker.InvokeActionAsync(System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)">
      <summary>Ejecuta la operación HTTP de manera asíncrona.</summary>
      <returns>La tarea recién iniciada.</returns>
      <param name="actionContext">Contexto de ejecución.</param>
      <param name="cancellationToken">El token de cancelación asignado para la operación HTTP.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.IHttpActionSelector">
      <summary>Contiene la lógica para seleccionar un método de acción.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.IHttpActionSelector.GetActionMapping(System.Web.Http.Controllers.HttpControllerDescriptor)">
      <summary>Devuelve una asignación, con clave mediante cadena de acción, de todos los <see cref="T:System.Web.Http.Controllers.HttpActionDescriptor" /> que puede seleccionar el selector.  Esto se llama principalmente por <see cref="T:System.Web.Http.Description.IApiExplorer" /> para descubrir todas las acciones posibles en el controlador.</summary>
      <returns>Una asignación de <see cref="T:System.Web.Http.Controllers.HttpActionDescriptor" /> que el selector puede seleccionar o null si el selector no tiene una asignación bien definida de <see cref="T:System.Web.Http.Controllers.HttpActionDescriptor" />.</returns>
      <param name="controllerDescriptor">Descriptor del controlador.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.IHttpActionSelector.SelectAction(System.Web.Http.Controllers.HttpControllerContext)">
      <summary>Seleccione la acción para el controlador.</summary>
      <returns>La acción para el controlador.</returns>
      <param name="controllerContext">El contexto del controlador.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.IHttpController">
      <summary>No se actualizará ningún contenido aquí; no agregue material aquí.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.IHttpController.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Threading.CancellationToken)">
      <summary>Ejecuta el controlador para sincronización.</summary>
      <returns>El controlador.</returns>
      <param name="controllerContext">Contexto actual para un controlador de prueba.</param>
      <param name="cancellationToken">Notificación que cancela la operación.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.ParameterBindingExtensions">
      <summary>Define métodos de extensión para <see cref="T:System.Web.Http.Controllers.HttpParameterBinding" />.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindAsError(System.Web.Http.Controllers.HttpParameterDescriptor,System.String)">
      <summary>Enlaza parámetros que origina un error. </summary>
      <returns>Objeto de enlazado de parámetros HTTP.</returns>
      <param name="parameter">El descriptor de parámetros que describe el parámetro que hay que enlazar.</param>
      <param name="message">Mensaje de error que describe el motivo para fallar el enlace.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindWithAttribute(System.Web.Http.Controllers.HttpParameterDescriptor,System.Web.Http.ParameterBindingAttribute)">
      <summary>Enlaza el parámetro como si tuviera el atributo dado en la declaración.</summary>
      <returns>Objeto de enlazado de parámetros HTTP.</returns>
      <param name="parameter">Parámetro para el que proporcionar enlazado.</param>
      <param name="attribute">Atributo que describe el enlazado.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindWithFormatter(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>Enlaza parámetros analizando el contenido del cuerpo HTTP.</summary>
      <returns>Objeto de enlazado de parámetros HTTP.</returns>
      <param name="parameter">El descriptor de parámetros que describe el parámetro que hay que enlazar.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindWithFormatter(System.Web.Http.Controllers.HttpParameterDescriptor,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
      <summary>Enlaza parámetros analizando el contenido del cuerpo HTTP.</summary>
      <returns>Objeto de enlazado de parámetros HTTP.</returns>
      <param name="parameter">El descriptor de parámetros que describe el parámetro que hay que enlazar.</param>
      <param name="formatters">Lista de formateadores que proporciona una selección de un formateador apropiado para serializar el parámetro en el objeto.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindWithFormatter(System.Web.Http.Controllers.HttpParameterDescriptor,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter},System.Web.Http.Validation.IBodyModelValidator)">
      <summary>Enlaza parámetros analizando el contenido del cuerpo HTTP.</summary>
      <returns>Objeto de enlazado de parámetros HTTP.</returns>
      <param name="parameter">El descriptor de parámetros que describe el parámetro que hay que enlazar.</param>
      <param name="formatters">Lista de formateadores que proporciona una selección de un formateador apropiado para serializar el parámetro en el objeto.</param>
      <param name="bodyModelValidator">Validador de modelo de cuerpo usado para validar el parámetro.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindWithFormatter(System.Web.Http.Controllers.HttpParameterDescriptor,System.Net.Http.Formatting.MediaTypeFormatter[])">
      <summary>Enlaza parámetros analizando el contenido del cuerpo HTTP.</summary>
      <returns>Objeto de enlazado de parámetros HTTP.</returns>
      <param name="parameter">El descriptor de parámetros que describe el parámetro que hay que enlazar.</param>
      <param name="formatters">Lista de formateadores que proporciona una selección de un formateador apropiado para serializar el parámetro en el objeto.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindWithModelBinding(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>Enlaza parámetros analizando la cadena de consulta.</summary>
      <returns>Objeto de enlazado de parámetros HTTP.</returns>
      <param name="parameter">El descriptor de parámetros que describe el parámetro que hay que enlazar.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindWithModelBinding(System.Web.Http.Controllers.HttpParameterDescriptor,System.Collections.Generic.IEnumerable{System.Web.Http.ValueProviders.ValueProviderFactory})">
      <summary>Enlaza parámetros analizando la cadena de consulta.</summary>
      <returns>Objeto de enlazado de parámetros HTTP.</returns>
      <param name="parameter">El descriptor de parámetros que describe el parámetro que hay que enlazar.</param>
      <param name="valueProviderFactories">Generadores de proveedores de valores que proporcionan datos de parámetros de cadena de consulta.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindWithModelBinding(System.Web.Http.Controllers.HttpParameterDescriptor,System.Web.Http.ModelBinding.IModelBinder)">
      <summary>Enlaza parámetros analizando la cadena de consulta.</summary>
      <returns>Objeto de enlazado de parámetros HTTP.</returns>
      <param name="parameter">El descriptor de parámetros que describe el parámetro que hay que enlazar.</param>
      <param name="binder">Enlazador de modelos usado para ensamblar el parámetro en un objeto.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindWithModelBinding(System.Web.Http.Controllers.HttpParameterDescriptor,System.Web.Http.ModelBinding.IModelBinder,System.Collections.Generic.IEnumerable{System.Web.Http.ValueProviders.ValueProviderFactory})">
      <summary>Enlaza parámetros analizando la cadena de consulta.</summary>
      <returns>Objeto de enlazado de parámetros HTTP.</returns>
      <param name="parameter">El descriptor de parámetros que describe el parámetro que hay que enlazar.</param>
      <param name="binder">Enlazador de modelos usado para ensamblar el parámetro en un objeto.</param>
      <param name="valueProviderFactories">Generadores de proveedores de valores que proporcionan datos de parámetros de cadena de consulta.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindWithModelBinding(System.Web.Http.Controllers.HttpParameterDescriptor,System.Web.Http.ValueProviders.ValueProviderFactory[])">
      <summary>Enlaza parámetros analizando la cadena de consulta.</summary>
      <returns>Objeto de enlazado de parámetros HTTP.</returns>
      <param name="parameter">El descriptor de parámetros que describe el parámetro que hay que enlazar.</param>
      <param name="valueProviderFactories">Generadores de proveedores de valores que proporcionan datos de parámetros de cadena de consulta.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.ReflectedHttpActionDescriptor">
      <summary>Representa un método de acción sincrónico o asíncrono reflejado. </summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Controllers.ReflectedHttpActionDescriptor" />.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.#ctor(System.Web.Http.Controllers.HttpControllerDescriptor,System.Reflection.MethodInfo)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Http.Controllers.ReflectedHttpActionDescriptor" /> con el descriptor especificado y los detalles de método.</summary>
      <param name="controllerDescriptor">Descriptor del controlador.</param>
      <param name="methodInfo">Información de método de acción.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.ActionName">
      <summary>Obtiene el nombre de la acción.</summary>
      <returns>Nombre de la acción.</returns>
    </member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)">
      <summary>Ejecuta la acción descrita y devuelve un <see cref="T:System.Threading.Tasks.Task`1" /> que, una vez que se ha completado, tendrá el valor de devolución de la acción.</summary>
      <returns>Un <see cref="T:System.Threading.Tasks.Task`1&quot;" /> que, una vez que se ha completado, tendrá el valor de devolución de la acción.</returns>
      <param name="controllerContext">Contexto.</param>
      <param name="arguments">Argumentos.</param>
      <param name="cancellationToken">Token de cancelación para cancelar la acción.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.GetCustomAttributes``1">
      <summary>Devuelve una matriz de atributos personalizados definidos para este miembro, identificados según el tipo.</summary>
      <returns>Una matriz de atributos personalizados o una matriz vacía si no existen atributos personalizados.</returns>
      <typeparam name="T">Tipo de los atributos personalizados.</typeparam>
    </member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.GetFilters">
      <summary>Recupera información acerca de los filtros de acción.</summary>
      <returns>Información del filtro.</returns>
    </member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.GetParameters">
      <summary>Recupera los parámetros del método de acción.</summary>
      <returns>Parámetros del método de acción.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.MethodInfo">
      <summary>Obtiene o establece la información de método de acción.</summary>
      <returns>Información de método de acción.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.ReturnType">
      <summary>Obtiene el tipo de devolución para este método.</summary>
      <returns>El tipo de devolución para este método.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.SupportedHttpMethods">
      <summary>Obtiene o establece los métodos HTTP admitidos.</summary>
      <returns>Los métodos HTTP admitidos.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor">
      <summary>No se actualizará ningún contenido aquí; no agregue material aquí.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor" />.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor.#ctor(System.Web.Http.Controllers.HttpActionDescriptor,System.Reflection.ParameterInfo)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor" />.</summary>
      <param name="actionDescriptor">Descriptor de la acción.</param>
      <param name="parameterInfo">Información de parámetro.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor.DefaultValue">
      <summary>Obtiene el valor predeterminado del parámetro.</summary>
      <returns>Valor predeterminado del parámetro.</returns>
    </member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor.GetCustomAttributes``1">
      <summary>Recupera una colección de los atributos personalizados del parámetro.</summary>
      <returns>Una colección de los atributos personalizados del parámetro.</returns>
      <typeparam name="T">Tipo de los atributos personalizados.</typeparam>
    </member>
    <member name="P:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor.IsOptional">
      <summary>Obtiene un valor que indica si el parámetro es opcional.</summary>
      <returns>true si el parámetro es opcional; en caso contrario, false.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor.ParameterInfo">
      <summary>Obtiene o establece la información del parámetro.</summary>
      <returns>Información de parámetro.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor.ParameterName">
      <summary>Obtiene el nombre del parámetro.</summary>
      <returns>Nombre del parámetro.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor.ParameterType">
      <summary>Obtiene el tipo de parámetro.</summary>
      <returns>Tipo del parámetro.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.ResponseMessageResultConverter">
      <summary>Representa un convertidor para acciones con un tipo de devolución de <see cref="T:System.Net.Http.HttpResponseMessage" />. </summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ResponseMessageResultConverter.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Controllers.ResponseMessageResultConverter" />.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ResponseMessageResultConverter.Convert(System.Web.Http.Controllers.HttpControllerContext,System.Object)">
      <summary>Convierte un objeto <see cref="T:System.Web.Http.Controllers.ResponseMessageResultConverter" /> a otro objeto.</summary>
      <returns>El objeto convertido.</returns>
      <param name="controllerContext">Contexto del controlador.</param>
      <param name="actionResult">Resultado de la acción.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.ServicesContainer">
      <summary>Una clase abstracta que proporciona un contenedor para los servicios que usa ASP.NET Web API.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Http.Controllers.ServicesContainer" />.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.Add(System.Type,System.Object)">
      <summary> Agrega un servicio al final de la lista de servicios para el tipo de servicio determinado.  </summary>
      <param name="serviceType">El tipo de servicio.</param>
      <param name="service">La instancia del servicio.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.AddRange(System.Type,System.Collections.Generic.IEnumerable{System.Object})">
      <summary> Agrega los servicios de la colección especificada al final de la lista de servicios para el tipo de servicio determinado. </summary>
      <param name="serviceType">El tipo de servicio.</param>
      <param name="services">Los servicios que se van a agregar.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.Clear(System.Type)">
      <summary> Quita todas las instancia de servicio del tipo de servicio determinado.  </summary>
      <param name="serviceType">El tipo de servicio que se va a borrar de la lista de servicios.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.ClearMultiple(System.Type)">
      <summary>Quita todas las instancias de un tipo de servicio multi-instancia.</summary>
      <param name="serviceType">El tipo de servicio que se va a quitar.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.ClearSingle(System.Type)">
      <summary>Quita un tipo de servicio de instancia única.</summary>
      <param name="serviceType">El tipo de servicio que se va a quitar.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.Dispose">
      <summary>Realiza tareas definidas por aplicación asociadas con liberar o restablecer recursos no administrados.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.FindIndex(System.Type,System.Predicate{System.Object})">
      <summary> Busca un servicio que coincida con las condiciones definidas por el predicado especificado y devuelve el índice de base cero de la primera aparición. </summary>
      <returns>El índice de base cero de la primera aparición, si se encuentra; de lo contrario, -1.</returns>
      <param name="serviceType">El tipo de servicio.</param>
      <param name="match">El delegado que define las condiciones del elemento que se va a buscar. </param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.GetService(System.Type)">
      <summary>Obtiene una instancia de servicio de un tipo especificado.</summary>
      <param name="serviceType">El tipo de servicio.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.GetServiceInstances(System.Type)">
      <summary>Obtiene una lista mutable de instancias de servicio de un tipo especificado.</summary>
      <returns>Un lista mutable de instancias de servicio.</returns>
      <param name="serviceType">El tipo de servicio.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.GetServices(System.Type)">
      <summary>Obtiene una colección de instancias de servicio de un tipo especificado.</summary>
      <returns>Una colección de instancias de servicio.</returns>
      <param name="serviceType">El tipo de servicio.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.Insert(System.Type,System.Int32,System.Object)">
      <summary> Inserta un servicio en la colección en el índice especificado. </summary>
      <param name="serviceType">El tipo de servicio.</param>
      <param name="index">El índice de base cero en el que debe insertarse el servicio. Si se pasa <see cref="F:System.Int32.MaxValue" />, se garantiza que el elemento se agregue al final.</param>
      <param name="service">El servicio que se va a insertar.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.InsertRange(System.Type,System.Int32,System.Collections.Generic.IEnumerable{System.Object})">
      <summary> Inserta los elementos de la colección en la lista de servicios en el índice especificado. </summary>
      <param name="serviceType">El tipo de servicio.</param>
      <param name="index">El índice de base cero en el que deben insertarse los nuevos elementos. Si se pasa <see cref="F:System.Int32.MaxValue" />, se garantiza que los elementos se agreguen al final.</param>
      <param name="services">La colección de servicios que se va a insertar.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.IsSingleService(System.Type)">
      <summary> Determinar si el tipo de servicio debería recuperarse con GetService o GetServices.  </summary>
      <returns>true si el servicio es singular. </returns>
      <param name="serviceType">El tipo de servicio que se va a consultar.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.Remove(System.Type,System.Object)">
      <summary> Quita la primera aparición del servicio dado de la lista de servicios del tipo de servicio dado. </summary>
      <returns>true si el elemento se ha quitado correctamente; de lo contrario, false.</returns>
      <param name="serviceType">El tipo de servicio.</param>
      <param name="service">La instancia de servicio que se va a quitar.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.RemoveAll(System.Type,System.Predicate{System.Object})">
      <summary> Quita todos los elementos que coinciden con las condiciones definidas por el predicado especificado. </summary>
      <returns>El número de elementos quitados de la lista.</returns>
      <param name="serviceType">El tipo de servicio.</param>
      <param name="match">El delegado que define las condiciones de los elementos que se van a quitar.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.RemoveAt(System.Type,System.Int32)">
      <summary> Quita el servicio del índice especificado. </summary>
      <param name="serviceType">El tipo de servicio.</param>
      <param name="index">Índice de base cero del servicio que se va a quitar.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.Replace(System.Type,System.Object)">
      <summary> Reemplaza todos los servicios existentes para el tipo de servicio dado con la instancia de servicio dada. Esto funciona en servicios singulares y plurales.  </summary>
      <param name="serviceType">El tipo de servicio.</param>
      <param name="service">La instancia del servicio.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.ReplaceMultiple(System.Type,System.Object)">
      <summary>Reemplaza todas las instancias de un servicio multi-instancia con una nueva instancia.</summary>
      <param name="serviceType">El tipo de servicio.</param>
      <param name="service">La instancia de servicio que remplazará los servicios actuales de este tipo.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.ReplaceRange(System.Type,System.Collections.Generic.IEnumerable{System.Object})">
      <summary> Reemplaza todos los servicios existentes para el tipo de servicio dado con las instancias de servicio dadas. </summary>
      <param name="serviceType">El tipo de servicio.</param>
      <param name="services">Las instancias del servicio.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.ReplaceSingle(System.Type,System.Object)">
      <summary>Reemplaza un servicio de instancia única de un tipo especificado.</summary>
      <param name="serviceType">El tipo de servicio. </param>
      <param name="service">La instancia del servicio.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.ResetCache(System.Type)">
      <summary>Quita los valores almacenados en caché de un tipo de servicio único.</summary>
      <param name="serviceType">El tipo de servicio.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.ValueResultConverter`1">
      <summary> Un convertidor para crear respuestas a partir de acciones que devuelven un valor <paramref name="T" /> arbitrario. </summary>
      <typeparam name="T">El tipo de devolución declarado de una acción.</typeparam>
    </member>
    <member name="M:System.Web.Http.Controllers.ValueResultConverter`1.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Controllers.ValueResultConverter`1" />.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ValueResultConverter`1.Convert(System.Web.Http.Controllers.HttpControllerContext,System.Object)">
      <summary>Convierte el resultado de una acción con el tipo <paramref name="T" /> de devolución arbitraria a una instancia de <see cref="T:System.Net.Http.HttpResponseMessage" />.</summary>
      <returns>El objeto <see cref="T:System.Net.Http.HttpResponseMessage" /> recién creado.</returns>
      <param name="controllerContext">El contexto de controlador de la acción.</param>
      <param name="actionResult">El resultado de la ejecución.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.VoidResultConverter">
      <summary>Representa un convertidor para crear una respuesta a partir de acciones que no devuelven un valor.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.VoidResultConverter.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Controllers.VoidResultConverter" />.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.VoidResultConverter.Convert(System.Web.Http.Controllers.HttpControllerContext,System.Object)">
      <summary>Convierte la respuesta creada a partir de acciones que no devuelven un valor.</summary>
      <returns>La respuesta convertida.</returns>
      <param name="controllerContext">El contexto del controlador.</param>
      <param name="actionResult">El resultado de la acción.</param>
    </member>
    <member name="T:System.Web.Http.Dependencies.IDependencyResolver">
      <summary>Representa un contenedor de inserción de dependencias.</summary>
    </member>
    <member name="M:System.Web.Http.Dependencies.IDependencyResolver.BeginScope">
      <summary> Inicia un ámbito de resolución. </summary>
      <returns>El ámbito de dependencia.</returns>
    </member>
    <member name="T:System.Web.Http.Dependencies.IDependencyScope">
      <summary>Representa una interfaz para el intervalo de dependencias.</summary>
    </member>
    <member name="M:System.Web.Http.Dependencies.IDependencyScope.GetService(System.Type)">
      <summary>Recupera un servicio del ámbito.</summary>
      <returns>El servicio recuperado.</returns>
      <param name="serviceType">El servicio que se va a recuperar.</param>
    </member>
    <member name="M:System.Web.Http.Dependencies.IDependencyScope.GetServices(System.Type)">
      <summary>Recupera una colección de servicios del ámbito.</summary>
      <returns>La colección de servicios recuperada.</returns>
      <param name="serviceType">La colección de servicios que se va a recuperar.</param>
    </member>
    <member name="T:System.Web.Http.Description.ApiDescription">
      <summary> Describe una API definida por un método HTTP y una ruta de identificador URI relativos. </summary>
    </member>
    <member name="M:System.Web.Http.Description.ApiDescription.#ctor">
      <summary> Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Description.ApiDescription" />. </summary>
    </member>
    <member name="P:System.Web.Http.Description.ApiDescription.ActionDescriptor">
      <summary> Obtiene o establece el descriptor de acción que administrará la API. </summary>
      <returns> Descriptor de la acción. </returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiDescription.Documentation">
      <summary> Obtiene o establece la documentación de la API. </summary>
      <returns> Documentación. </returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiDescription.HttpMethod">
      <summary> Obtiene o establece el método HTTP. </summary>
      <returns> Método HTTP. </returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiDescription.ID">
      <summary> Obtiene el Id. El Id. es único dentro de <see cref="T:System.Web.Http.HttpServer" />. </summary>
    </member>
    <member name="P:System.Web.Http.Description.ApiDescription.ParameterDescriptions">
      <summary> Obtiene las descripciones de parámetros. </summary>
    </member>
    <member name="P:System.Web.Http.Description.ApiDescription.RelativePath">
      <summary> Obtiene o establece la ruta de acceso relativa. </summary>
      <returns> Ruta de acceso relativa. </returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiDescription.Route">
      <summary> Obtiene o establece la ruta de acceso registrada para la API. </summary>
      <returns> Ruta de acceso. </returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiDescription.SupportedRequestBodyFormatters">
      <summary> Obtiene los formateadores de cuerpo de solicitud admitidos. </summary>
    </member>
    <member name="P:System.Web.Http.Description.ApiDescription.SupportedResponseFormatters">
      <summary> Obtiene los formateadores de respuesta admitidos. </summary>
    </member>
    <member name="T:System.Web.Http.Description.ApiExplorer">
      <summary> Explora el espacio del identificador URI del servicio en función de las rutas de acceso, controladores y acciones disponibles en el sistema. </summary>
    </member>
    <member name="M:System.Web.Http.Description.ApiExplorer.#ctor(System.Web.Http.HttpConfiguration)">
      <summary> Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Description.ApiExplorer" />. </summary>
      <param name="configuration">Configuración.</param>
    </member>
    <member name="P:System.Web.Http.Description.ApiExplorer.ApiDescriptions">
      <summary> Obtiene las descripciones API. Las descripciones se inician en el primer acceso. </summary>
    </member>
    <member name="P:System.Web.Http.Description.ApiExplorer.DocumentationProvider">
      <summary> Obtiene o establece el proveedor de documentación. El proveedor será responsable de la documentación de la API. </summary>
      <returns> Proveedor de documentación. </returns>
    </member>
    <member name="M:System.Web.Http.Description.ApiExplorer.GetHttpMethodsSupportedByAction(System.Web.Http.Routing.IHttpRoute,System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary> Obtiene una colección de métodos HTTP admitidos por la acción. Llamado al iniciar las <see cref="P:System.Web.Http.Description.ApiExplorer.ApiDescriptions" />. </summary>
      <returns>Colección de métodos HTTP admitidos por la acción.</returns>
      <param name="route">Ruta de acceso.</param>
      <param name="actionDescriptor">Descriptor de la acción.</param>
    </member>
    <member name="M:System.Web.Http.Description.ApiExplorer.ShouldExploreAction(System.String,System.Web.Http.Controllers.HttpActionDescriptor,System.Web.Http.Routing.IHttpRoute)">
      <summary> Determina si la acción debería considerarse para la generación de <see cref="P:System.Web.Http.Description.ApiExplorer.ApiDescriptions" />. Llamado al iniciar las <see cref="P:System.Web.Http.Description.ApiExplorer.ApiDescriptions" />. </summary>
      <returns>true si la acción debería considerarse para la generación de <see cref="P:System.Web.Http.Description.ApiExplorer.ApiDescriptions" />, false de lo contrario.</returns>
      <param name="actionVariableValue">El valor de variable de acción desde la ruta de acceso.</param>
      <param name="actionDescriptor">Descriptor de la acción.</param>
      <param name="route">Ruta de acceso.</param>
    </member>
    <member name="M:System.Web.Http.Description.ApiExplorer.ShouldExploreController(System.String,System.Web.Http.Controllers.HttpControllerDescriptor,System.Web.Http.Routing.IHttpRoute)">
      <summary> Determina si el controlador debería considerarse para la generación de <see cref="P:System.Web.Http.Description.ApiExplorer.ApiDescriptions" />. Llamado al iniciar las <see cref="P:System.Web.Http.Description.ApiExplorer.ApiDescriptions" />. </summary>
      <returns>true si el controlador debería considerarse para la generación de <see cref="P:System.Web.Http.Description.ApiExplorer.ApiDescriptions" />, false de lo contrario.</returns>
      <param name="controllerVariableValue">El valor de variable de controlador desde la ruta de acceso.</param>
      <param name="controllerDescriptor">Descriptor del controlador.</param>
      <param name="route">Ruta de acceso.</param>
    </member>
    <member name="T:System.Web.Http.Description.ApiExplorerSettingsAttribute">
      <summary> Este atributo puede utilizarse en los controladores y las acciones para influenciar el comportamiento de <see cref="T:System.Web.Http.Description.ApiExplorer" />. </summary>
    </member>
    <member name="M:System.Web.Http.Description.ApiExplorerSettingsAttribute.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Description.ApiExplorerSettingsAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Http.Description.ApiExplorerSettingsAttribute.IgnoreApi">
      <summary> Obtiene o establece un valor que indica si se excluirá el controlador o la acción de las instancias de <see cref="T:System.Web.Http.Description.ApiDescription" /> generadas por <see cref="T:System.Web.Http.Description.ApiExplorer" />. </summary>
      <returns>true si el controlador o la acción debe excluirse; de lo contrario, false.</returns>
    </member>
    <member name="T:System.Web.Http.Description.ApiParameterDescription">
      <summary> Describe un parámetro de la API definido por un método HTTP y una ruta de identificador URI relativos. </summary>
    </member>
    <member name="M:System.Web.Http.Description.ApiParameterDescription.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Description.ApiParameterDescription" />.</summary>
    </member>
    <member name="P:System.Web.Http.Description.ApiParameterDescription.Documentation">
      <summary> Obtiene o establece la documentación. </summary>
      <returns> Documentación. </returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiParameterDescription.Name">
      <summary> Obtiene o establece el nombre. </summary>
      <returns> Nombre. </returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiParameterDescription.ParameterDescriptor">
      <summary> Obtiene o establece el descriptor del parámetro. </summary>
      <returns> Descriptor del parámetro. </returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiParameterDescription.Source">
      <summary> Obtiene o establece el origen del parámetro. Podría provenir del identificador URI de solicitud, cuerpo de solicitud u otros lugares. </summary>
      <returns> Origen. </returns>
    </member>
    <member name="T:System.Web.Http.Description.ApiParameterSource">
      <summary> Describe de dónde proviene el parámetro. </summary>
    </member>
    <member name="F:System.Web.Http.Description.ApiParameterSource.FromUri">
      <summary>El parámetro procede de Uri.</summary>
    </member>
    <member name="F:System.Web.Http.Description.ApiParameterSource.FromBody">
      <summary>El parámetro procede de Body.</summary>
    </member>
    <member name="F:System.Web.Http.Description.ApiParameterSource.Unknown">
      <summary>La ubicación es desconocida.</summary>
    </member>
    <member name="T:System.Web.Http.Description.IApiExplorer">
      <summary> Define la interfaz para obtener una colección de <see cref="T:System.Web.Http.Description.ApiDescription" />. </summary>
    </member>
    <member name="P:System.Web.Http.Description.IApiExplorer.ApiDescriptions">
      <summary> Obtiene las descripciones API. </summary>
    </member>
    <member name="T:System.Web.Http.Description.IDocumentationProvider">
      <summary> Define el proveedor responsable de la documentación del servicio. </summary>
    </member>
    <member name="M:System.Web.Http.Description.IDocumentationProvider.GetDocumentation(System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary> Obtiene la documentación en función del <see cref="T:System.Web.Http.Controllers.HttpActionDescriptor" />. </summary>
      <returns>La documentación para el controlador.</returns>
      <param name="actionDescriptor">Descriptor de la acción.</param>
    </member>
    <member name="M:System.Web.Http.Description.IDocumentationProvider.GetDocumentation(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary> Obtiene la documentación en función del <see cref="T:System.Web.Http.Controllers.HttpParameterDescriptor" />. </summary>
      <returns>La documentación para el controlador.</returns>
      <param name="parameterDescriptor">Descriptor del parámetro.</param>
    </member>
    <member name="T:System.Web.Http.Dispatcher.DefaultAssembliesResolver">
      <summary> Proporciona una implementación de <see cref="T:System.Web.Http.Dispatcher.IAssembliesResolver" /> sin dependencias externas. </summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultAssembliesResolver.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Http.Dispatcher.DefaultAssembliesResolver" />.</summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultAssembliesResolver.GetAssemblies">
      <summary> Devuelve una lista de ensamblados disponibles para la aplicación. </summary>
      <returns>Una &lt;see cref="T:System.Collections.ObjectModel.Collection`1" /&gt; de ensamblados.</returns>
    </member>
    <member name="T:System.Web.Http.Dispatcher.DefaultHttpControllerActivator">
      <summary>Representa una implementación predeterminada de un elemento <see cref="T:System.Web.Http.Dispatcher.IHttpControllerActivator" />. Se puede registrar una implementación diferente mediante la <see cref="T:System.Web.Http.Services.DependencyResolver" />. Optimizamos para el caso en que tenemos una instancia de <see cref="T:System.Web.Http.Controllers.ApiControllerActionInvoker" /> por instancia de <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" />, pero también es compatible en los casos en los que existen muchas instancias de <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> para un <see cref="T:System.Web.Http.Controllers.ApiControllerActionInvoker" />. En el último caso, la búsqueda se realiza un poco más lentamente porque se utiliza el diccionario <see cref="P:HttpControllerDescriptor.Properties" />. </summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultHttpControllerActivator.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Dispatcher.DefaultHttpControllerActivator" />.</summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultHttpControllerActivator.Create(System.Net.Http.HttpRequestMessage,System.Web.Http.Controllers.HttpControllerDescriptor,System.Type)">
      <summary> Crea el <see cref="T:System.Web.Http.Controllers.IHttpController" /> especificado por <paramref name="controllerType" /> utilizando el <paramref name="request" /> determinado.</summary>
      <returns>Instancia del tipo <paramref name="controllerType" />.</returns>
      <param name="request">Mensaje de solicitud.</param>
      <param name="controllerDescriptor">Descriptor del controlador.</param>
      <param name="controllerType">Tipo del controlador.</param>
    </member>
    <member name="T:System.Web.Http.Dispatcher.DefaultHttpControllerSelector">
      <summary>Representa una instancia de <see cref="T:System.Web.Http.Dispatcher.IHttpControllerSelector" /> predeterminada para elegir un elemento <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> dado para <see cref="T:System.Net.Http.HttpRequestMessage" />. Se puede registrar una implementación diferente mediante la <see cref="P:System.Web.Http.HttpConfiguration.Services" />. </summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultHttpControllerSelector.#ctor(System.Web.Http.HttpConfiguration)">
      <summary> Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Dispatcher.DefaultHttpControllerSelector" />.</summary>
      <param name="configuration">Configuración.</param>
    </member>
    <member name="F:System.Web.Http.Dispatcher.DefaultHttpControllerSelector.ControllerSuffix">
      <summary>Especifica la cadena de sufijo en el nombre de controlador.</summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultHttpControllerSelector.GetControllerMapping">
      <summary>Devuelve una asignación, con clave mediante cadena de controlador, de todos los <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> que puede seleccionar el selector. </summary>
      <returns>Una asignación de todos los elementos <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> que el selector puede seleccionar o null si el selector no tiene una asignación bien definida de <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" />.</returns>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultHttpControllerSelector.GetControllerName(System.Net.Http.HttpRequestMessage)">
      <summary>Obtiene el nombre del controlador para el elemento <see cref="T:System.Net.Http.HttpRequestMessage" /> especificado.</summary>
      <returns>El nombre del controlador para el elemento <see cref="T:System.Net.Http.HttpRequestMessage" /> especificado.</returns>
      <param name="request">El mensaje de solicitud HTTP.</param>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultHttpControllerSelector.SelectController(System.Net.Http.HttpRequestMessage)">
      <summary>Seleccione un elemento <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> para el elemento <see cref="T:System.Net.Http.HttpRequestMessage" /> dado.</summary>
      <returns>La instancia <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> para el elemento <see cref="T:System.Net.Http.HttpRequestMessage" /> dado.</returns>
      <param name="request">El mensaje de solicitud HTTP.</param>
    </member>
    <member name="T:System.Web.Http.Dispatcher.DefaultHttpControllerTypeResolver">
      <summary> Proporciona una implementación de <see cref="T:System.Web.Http.Dispatcher.IHttpControllerTypeResolver" /> sin dependencias externas. </summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultHttpControllerTypeResolver.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Dispatcher.DefaultHttpControllerTypeResolver" />.</summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultHttpControllerTypeResolver.#ctor(System.Predicate{System.Type})">
      <summary>Inicializa una nueva instancia de <see cref="T:System.Web.Http.Dispatcher.DefaultHttpControllerTypeResolver" /> mediante un predicado para filtrar los tipos de controlador. </summary>
      <param name="predicate">El predicado.</param>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultHttpControllerTypeResolver.GetControllerTypes(System.Web.Http.Dispatcher.IAssembliesResolver)">
      <summary> Devuelve una lista de controladores disponibles para la aplicación. </summary>
      <returns>Una &lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt; de controladores.</returns>
      <param name="assembliesResolver">Resolución de ensamblados.</param>
    </member>
    <member name="P:System.Web.Http.Dispatcher.DefaultHttpControllerTypeResolver.IsControllerTypePredicate">
      <summary>Obtiene un valor si el tipo de resolución es un predicado de tipo de controlador.</summary>
      <returns>true si el tipo de resolución es un predicado de tipo de controlador; de lo contrario, false.</returns>
    </member>
    <member name="T:System.Web.Http.Dispatcher.HttpControllerDispatcher">
      <summary>Envía un <see cref="T:System.Net.Http.HttpRequestMessage" /> entrante a una implementación de <see cref="T:System.Web.Http.Controllers.IHttpController" /> para que sea procesado.</summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.HttpControllerDispatcher.#ctor(System.Web.Http.HttpConfiguration)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Http.Dispatcher.HttpControllerDispatcher" /> con la configuración especificada.</summary>
      <param name="configuration">La configuración HTTP.</param>
    </member>
    <member name="P:System.Web.Http.Dispatcher.HttpControllerDispatcher.Configuration">
      <summary>Obtiene la configuración de HTTP.</summary>
      <returns>La configuración HTTP.</returns>
    </member>
    <member name="M:System.Web.Http.Dispatcher.HttpControllerDispatcher.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Envía un <see cref="T:System.Net.Http.HttpRequestMessage" /> entrante a un <see cref="T:System.Web.Http.Controllers.IHttpController" />.</summary>
      <returns>Un elemento <see cref="T:System.Threading.Tasks.Task`1" /> que representa la operación continua.</returns>
      <param name="request">Solicitud de envío</param>
      <param name="cancellationToken">Token de cancelación.</param>
    </member>
    <member name="T:System.Web.Http.Dispatcher.HttpRoutingDispatcher">
      <summary> Esta clase es el controlador de mensaje de extremo predeterminado que examina el <see cref="T:System.Web.Http.Routing.IHttpRoute" /> de la ruta coincidente y elije a qué controlador de mensaje se va a llamar. Si <see cref="P:System.Web.Http.Routing.IHttpRoute.Handler" /> es null, lo delega a <see cref="T:System.Web.Http.Dispatcher.HttpControllerDispatcher" />. </summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.HttpRoutingDispatcher.#ctor(System.Web.Http.HttpConfiguration)">
      <summary> Inicializa una nueva instancia de la clase <see cref="T:System.Web.Http.Dispatcher.HttpRoutingDispatcher" />, usando los <see cref="T:System.Web.Http.HttpConfiguration" /> y <see cref="T:System.Web.Http.Dispatcher.HttpControllerDispatcher" /> proporcionados como controlador predeterminado. </summary>
      <param name="configuration">La configuración del servidor.</param>
    </member>
    <member name="M:System.Web.Http.Dispatcher.HttpRoutingDispatcher.#ctor(System.Web.Http.HttpConfiguration,System.Net.Http.HttpMessageHandler)">
      <summary> Inicializa una nueva instancia de la clase <see cref="T:System.Web.Http.Dispatcher.HttpRoutingDispatcher" />, usando los <see cref="T:System.Web.Http.HttpConfiguration" /> y <see cref="T:System.Net.Http.HttpMessageHandler" /> proporcionados. </summary>
      <param name="configuration">La configuración del servidor.</param>
      <param name="defaultHandler">El controlador predeterminado que se va a utilizar cuando el <see cref="T:System.Web.Http.Routing.IHttpRoute" /> no tiene <see cref="P:System.Web.Http.Routing.IHttpRoute.Handler" />.</param>
    </member>
    <member name="M:System.Web.Http.Dispatcher.HttpRoutingDispatcher.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Envía una solicitud HTTP como operación asincrónica.</summary>
      <returns>El objeto de tarea que representa la operación asincrónica.</returns>
      <param name="request">El mensaje de la solicitud HTTP que se va a enviar.</param>
      <param name="cancellationToken">El token de cancelación para cancelar la operación.</param>
    </member>
    <member name="T:System.Web.Http.Dispatcher.IAssembliesResolver">
      <summary> Proporciona una abstracción para administrar los ensamblados de una aplicación. Se puede registrar una implementación diferente mediante la <see cref="T:System.Web.Http.Services.DependencyResolver" />. </summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.IAssembliesResolver.GetAssemblies">
      <summary> Devuelve una lista de ensamblados disponibles para la aplicación. </summary>
      <returns>Una &lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt; de ensamblados.</returns>
    </member>
    <member name="T:System.Web.Http.Dispatcher.IHttpControllerActivator">
      <summary>Define los métodos necesarios para un <see cref="T:System.Web.Http.Dispatcher.IHttpControllerActivator" />.</summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.IHttpControllerActivator.Create(System.Net.Http.HttpRequestMessage,System.Web.Http.Controllers.HttpControllerDescriptor,System.Type)">
      <summary>Crea un objeto <see cref="T:System.Web.Http.Controllers.IHttpController" />.</summary>
      <returns>Un objeto <see cref="T:System.Web.Http.Controllers.IHttpController" />.</returns>
      <param name="request">La solicitud de mensaje.</param>
      <param name="controllerDescriptor">Descriptor HTTP del controlador.</param>
      <param name="controllerType">Tipo del controlador.</param>
    </member>
    <member name="T:System.Web.Http.Dispatcher.IHttpControllerSelector">
      <summary> Define los métodos necesarios para un generador de <see cref="T:System.Web.Http.Controllers.IHttpController" />. </summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.IHttpControllerSelector.GetControllerMapping">
      <summary> Devuelve una asignación, con clave mediante cadena de controlador, de todos los <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> que puede seleccionar el selector.  Esto se llama principalmente por <see cref="T:System.Web.Http.Description.IApiExplorer" /> para descubrir todas los controladores posibles en el sistema. </summary>
      <returns>Una asignación de todos los elementos <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> que el selector puede seleccionar o null si el selector no tiene una asignación bien definida de <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" />.</returns>
    </member>
    <member name="M:System.Web.Http.Dispatcher.IHttpControllerSelector.SelectController(System.Net.Http.HttpRequestMessage)">
      <summary> Seleccione un elemento <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> para el elemento <see cref="T:System.Net.Http.HttpRequestMessage" /> dado. </summary>
      <returns>Una instancia de <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" />.</returns>
      <param name="request">Mensaje de solicitud.</param>
    </member>
    <member name="T:System.Web.Http.Dispatcher.IHttpControllerTypeResolver">
      <summary> Proporciona una abstracción para administrar los tipos de controlador de una aplicación. Se puede registrar una implementación diferente mediante DependencyResolver.</summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.IHttpControllerTypeResolver.GetControllerTypes(System.Web.Http.Dispatcher.IAssembliesResolver)">
      <summary> Devuelve una lista de controladores disponibles para la aplicación. </summary>
      <returns>Una &lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt; de controladores.</returns>
      <param name="assembliesResolver">La resolución de los ensamblados con fallo.</param>
    </member>
    <member name="T:System.Web.Http.Filters.ActionDescriptorFilterProvider">
      <summary>Proporciona información sobre un método de acción, tal como su nombre, controlador, parámetros, atributos y filtros.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.ActionDescriptorFilterProvider.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Filters.ActionDescriptorFilterProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.ActionDescriptorFilterProvider.GetFilters(System.Web.Http.HttpConfiguration,System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary>Devuelve los filtros asociados a este método de acción.</summary>
      <returns>Filtros asociados a este método de acción.</returns>
      <param name="configuration">Configuración.</param>
      <param name="actionDescriptor">Descriptor de la acción.</param>
    </member>
    <member name="T:System.Web.Http.Filters.ActionFilterAttribute">
      <summary>Representa la clase base para todos los atributos acción-filtro.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.ActionFilterAttribute.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Filters.ActionFilterAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.ActionFilterAttribute.OnActionExecuted(System.Web.Http.Filters.HttpActionExecutedContext)">
      <summary>Se produce después de invocar al método de acción.</summary>
      <param name="actionExecutedContext">Contexto de acción ejecutada.</param>
    </member>
    <member name="M:System.Web.Http.Filters.ActionFilterAttribute.OnActionExecuting(System.Web.Http.Controllers.HttpActionContext)">
      <summary>Se produce antes de invocar al método de acción.</summary>
      <param name="actionContext">Contexto de acción.</param>
    </member>
    <member name="M:System.Web.Http.Filters.ActionFilterAttribute.System#Web#Http#Filters#IActionFilter#ExecuteActionFilterAsync(System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken,System.Func{System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}})">
      <summary>Ejecuta la acción de filtro de manera asíncrona.</summary>
      <returns>La tarea recién creada para esta operación.</returns>
      <param name="actionContext">Contexto de acción.</param>
      <param name="cancellationToken">El token de cancelación asignado para esta tarea.</param>
      <param name="continuation">La función de delegado que debe continuar después de la invocación del método de acción.</param>
    </member>
    <member name="T:System.Web.Http.Filters.AuthorizationFilterAttribute">
      <summary>No se actualizará ningún contenido aquí; no agregue material aquí.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.AuthorizationFilterAttribute.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Filters.AuthorizationFilterAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.AuthorizationFilterAttribute.OnAuthorization(System.Web.Http.Controllers.HttpActionContext)">
      <summary>Se llama cuando un proceso solicita autorización.</summary>
      <param name="actionContext">Contexto de la acción, que encapsula la información para usar <see cref="T:System.Web.Http.Filters.AuthorizationFilterAttribute" />.</param>
    </member>
    <member name="M:System.Web.Http.Filters.AuthorizationFilterAttribute.System#Web#Http#Filters#IAuthorizationFilter#ExecuteAuthorizationFilterAsync(System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken,System.Func{System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}})">
      <summary>Ejecuta el filtro de autorización durante la sincronización.</summary>
      <returns>El filtro de autorización durante la sincronización.</returns>
      <param name="actionContext">Contexto de la acción, que encapsula la información para usar <see cref="T:System.Web.Http.Filters.AuthorizationFilterAttribute" />.</param>
      <param name="cancellationToken">Token de cancelación que cancela la operación.</param>
      <param name="continuation">Continuación de la operación.</param>
    </member>
    <member name="T:System.Web.Http.Filters.ConfigurationFilterProvider">
      <summary>Representa el proveedor de filtros de configuración.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.ConfigurationFilterProvider.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Filters.ConfigurationFilterProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.ConfigurationFilterProvider.GetFilters(System.Web.Http.HttpConfiguration,System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary>Devuelve los filtros asociados a este método de configuración.</summary>
      <returns>Filtros asociados a este método de configuración.</returns>
      <param name="configuration">Configuración.</param>
      <param name="actionDescriptor">Descriptor de la acción.</param>
    </member>
    <member name="T:System.Web.Http.Filters.ExceptionFilterAttribute">
      <summary>Representa los atributos para el filtro de excepción.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.ExceptionFilterAttribute.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Filters.ExceptionFilterAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.ExceptionFilterAttribute.OnException(System.Web.Http.Filters.HttpActionExecutedContext)">
      <summary>Lanza el evento de excepción.</summary>
      <param name="actionExecutedContext">El contexto para la acción.</param>
    </member>
    <member name="M:System.Web.Http.Filters.ExceptionFilterAttribute.System#Web#Http#Filters#IExceptionFilter#ExecuteExceptionFilterAsync(System.Web.Http.Filters.HttpActionExecutedContext,System.Threading.CancellationToken)">
      <summary>Ejecuta el filtro de excepción de manera asíncrona.</summary>
      <returns>El resultado de la ejecución.</returns>
      <param name="actionExecutedContext">El contexto para la acción.</param>
      <param name="cancellationToken">El contexto de cancelación.</param>
    </member>
    <member name="T:System.Web.Http.Filters.FilterAttribute">
      <summary>Representa la clase base para los atributos acción-filtro.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.FilterAttribute.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Filters.FilterAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Http.Filters.FilterAttribute.AllowMultiple">
      <summary>Obtiene un valor que indica si se permiten varios filtros.</summary>
      <returns>true si se permiten varios filtros; en caso contrario, false.</returns>
    </member>
    <member name="T:System.Web.Http.Filters.FilterInfo">
      <summary>Proporciona información sobre los filtros de acción disponibles.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.FilterInfo.#ctor(System.Web.Http.Filters.IFilter,System.Web.Http.Filters.FilterScope)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Filters.FilterInfo" />.</summary>
      <param name="instance">Instancia de esta clase.</param>
      <param name="scope">Ámbito de esta clase.</param>
    </member>
    <member name="P:System.Web.Http.Filters.FilterInfo.Instance">
      <summary>Obtiene o establece una instancia de <see cref="T:System.Web.Http.Filters.FilterInfo" />.</summary>
      <returns>Un <see cref="T:System.Web.Http.Filters.FilterInfo" />.</returns>
    </member>
    <member name="P:System.Web.Http.Filters.FilterInfo.Scope">
      <summary>Obtiene o establece el ámbito <see cref="T:System.Web.Http.Filters.FilterInfo" />.</summary>
      <returns>El ámbito del FilterInfo.</returns>
    </member>
    <member name="T:System.Web.Http.Filters.FilterScope">
      <summary>Define valores que especifican el orden en que los filtros se ejecutan dentro del mismo tipo de filtros y orden de filtros.</summary>
    </member>
    <member name="F:System.Web.Http.Filters.FilterScope.Global">
      <summary>Especifica una acción antes del elemento Controller.</summary>
    </member>
    <member name="F:System.Web.Http.Filters.FilterScope.Controller">
      <summary>Especifica un orden delante del elemento Action y detrás del elemento Global.</summary>
    </member>
    <member name="F:System.Web.Http.Filters.FilterScope.Action">
      <summary>Especifica un orden detrás del elemento Controller. </summary>
    </member>
    <member name="T:System.Web.Http.Filters.HttpActionExecutedContext">
      <summary>No se actualizará ningún contenido aquí; no agregue material aquí.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.HttpActionExecutedContext.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Filters.HttpActionExecutedContext" />.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.HttpActionExecutedContext.#ctor(System.Web.Http.Controllers.HttpActionContext,System.Exception)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Filters.HttpActionExecutedContext" />.</summary>
      <param name="actionContext">Contexto de acción.</param>
      <param name="exception">Excepción.</param>
    </member>
    <member name="P:System.Web.Http.Filters.HttpActionExecutedContext.ActionContext">
      <summary>Obtiene o establece el contexto de acción HTTP.</summary>
      <returns>El contexto de acción HTTP.</returns>
    </member>
    <member name="P:System.Web.Http.Filters.HttpActionExecutedContext.Exception">
      <summary>Obtiene o establece la excepción lanzada durante la ejecución.</summary>
      <returns>La excepción lanzada durante la ejecución.</returns>
    </member>
    <member name="P:System.Web.Http.Filters.HttpActionExecutedContext.Request">
      <summary>Obtiene el objeto <see cref="T:System.Net.Http.HttpRequestMessage" /> para el contexto.</summary>
      <returns>El objeto <see cref="T:System.Net.Http.HttpRequestMessage" /> para el contexto.</returns>
    </member>
    <member name="P:System.Web.Http.Filters.HttpActionExecutedContext.Response">
      <summary>Obtiene o establece el elemento <see cref="T:System.Net.Http.HttpResponseMessage" /> para el contexto.</summary>
      <returns>El elemento <see cref="T:System.Net.Http.HttpResponseMessage" /> para el contexto.</returns>
    </member>
    <member name="T:System.Web.Http.Filters.HttpFilterCollection">
      <summary>Representa una colección de filtros HTTP.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.HttpFilterCollection.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Filters.HttpFilterCollection" />.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.HttpFilterCollection.Add(System.Web.Http.Filters.IFilter)">
      <summary>Agrega un elemento al final de la colección.</summary>
      <param name="filter">Elemento que se agrega a la colección.</param>
    </member>
    <member name="M:System.Web.Http.Filters.HttpFilterCollection.Clear">
      <summary>Quita todos los elementos de la colección.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.HttpFilterCollection.Contains(System.Web.Http.Filters.IFilter)">
      <summary>Determina si la colección contiene el elemento especificado.</summary>
      <returns>true si la colección contiene el elemento especificado; de lo contrario, false.</returns>
      <param name="filter">El elemento que se verificará.</param>
    </member>
    <member name="P:System.Web.Http.Filters.HttpFilterCollection.Count">
      <summary>Obtiene el número de elementos de la colección.</summary>
      <returns>Número de elementos de la colección.</returns>
    </member>
    <member name="M:System.Web.Http.Filters.HttpFilterCollection.GetEnumerator">
      <summary>Obtiene un enumerador que se itera por toda la colección.</summary>
      <returns>Objeto de enumerador que se puede usar para iterar por la colección.</returns>
    </member>
    <member name="M:System.Web.Http.Filters.HttpFilterCollection.Remove(System.Web.Http.Filters.IFilter)">
      <summary>Quita el elemento especificado de la colección.</summary>
      <param name="filter">El elemento que se va a quitar de la colección.</param>
    </member>
    <member name="M:System.Web.Http.Filters.HttpFilterCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Obtiene un enumerador que se itera por toda la colección.</summary>
      <returns>Objeto de enumerador que se puede usar para iterar por la colección.</returns>
    </member>
    <member name="T:System.Web.Http.Filters.IActionFilter">
      <summary>Define los métodos que se usan en un filtro de acción.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.IActionFilter.ExecuteActionFilterAsync(System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken,System.Func{System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}})">
      <summary>Ejecuta la acción de filtro de manera asíncrona.</summary>
      <returns>La tarea recién creada para esta operación.</returns>
      <param name="actionContext">Contexto de acción.</param>
      <param name="cancellationToken">El token de cancelación asignado para esta tarea.</param>
      <param name="continuation">La función de delegado que debe continuar después de la invocación del método de acción.</param>
    </member>
    <member name="T:System.Web.Http.Filters.IAuthorizationFilter">
      <summary>No se actualizará ningún contenido aquí; no agregue material aquí.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.IAuthorizationFilter.ExecuteAuthorizationFilterAsync(System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken,System.Func{System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}})">
      <summary>Ejecuta el filtro de autorización que se debe sincronizar.</summary>
      <returns>El filtro de autorización que se debe sincronizar.</returns>
      <param name="actionContext">Contexto de acción.</param>
      <param name="cancellationToken">El token de cancelación asociado con el filtro.</param>
      <param name="continuation">La continuación.</param>
    </member>
    <member name="T:System.Web.Http.Filters.IExceptionFilter">
      <summary>Define los métodos necesarios para un filtro de excepción.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.IExceptionFilter.ExecuteExceptionFilterAsync(System.Web.Http.Filters.HttpActionExecutedContext,System.Threading.CancellationToken)">
      <summary>Ejecuta un filtro de excepción asíncrona.</summary>
      <returns>Un filtro de excepción asíncrona.</returns>
      <param name="actionExecutedContext">Contexto de acción ejecutada.</param>
      <param name="cancellationToken">Token de cancelación.</param>
    </member>
    <member name="T:System.Web.Http.Filters.IFilter">
      <summary>Especifica un componente de servidor que el sistema de indización usa para indexar documentos con el formato de archivo asociado con el IFilter.</summary>
    </member>
    <member name="P:System.Web.Http.Filters.IFilter.AllowMultiple">
      <summary>Obtiene o establece un valor que indica si para un único elemento de programa se puede especificar para más de una instancia del atributo indicado.</summary>
      <returns>true si se permite especificar más de una instancia; en caso contrario, false. El valor predeterminado es false.</returns>
    </member>
    <member name="T:System.Web.Http.Filters.IFilterProvider">
      <summary>Proporciona la información del filtro.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.IFilterProvider.GetFilters(System.Web.Http.HttpConfiguration,System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary>Devuelve una enumeración de filtros.</summary>
      <returns>Una enumeración de filtros.</returns>
      <param name="configuration">La configuración HTTP.</param>
      <param name="actionDescriptor">Descriptor de la acción.</param>
    </member>
    <member name="T:System.Web.Http.Hosting.HttpPropertyKeys">
      <summary>Brinda claves comunes para propiedades almacenadas en las <see cref="P:System.Net.Http.HttpRequestMessage.Properties" />.</summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.ClientCertificateKey">
      <summary>Proporciona una clave para el certificado de cliente para esta solicitud.</summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.DependencyScope">
      <summary> Proporciona una clave para la <see cref="T:System.Web.Http.Dependencies.IDependencyScope" /> asociada con esta solicitud.</summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.DisposableRequestResourcesKey">
      <summary> Proporciona una clave para la colección de recursos que debería eliminarse cuando se elimina una solicitud. </summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.HttpConfigurationKey">
      <summary> Proporciona una clave para la <see cref="T:System.Web.Http.HttpConfiguration" /> asociada con esta solicitud. </summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.HttpRouteDataKey">
      <summary> Proporciona una clave para la <see cref="T:System.Web.Http.Routing.IHttpRouteData" /> asociada con esta solicitud. </summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.IncludeErrorDetailKey">
      <summary>Proporciona una clave que indica si los detalles de errores se van a incluir en la respuesta de esta solicitud HTTP.</summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.IsLocalKey">
      <summary>Proporciona una clave que indica si la solicitud se origina desde una dirección local.</summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.RequestCorrelationKey">
      <summary> Proporciona una clave para el <see cref="T:System.Guid" /> almacenado en <see cref="P:System.Net.Http.HttpRequestMessage.Properties" />. Este es el Id. de correlación para esa solicitud. </summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.RequestQueryNameValuePairsKey">
      <summary>Proporciona una clave para la cadena de consulta analizada almacenada en <see cref="P:System.Net.Http.HttpRequestMessage.Properties" />.</summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.RetrieveClientCertificateDelegateKey">
      <summary>Proporciona una clave para un delegado que puede recuperar el certificado de cliente para esta solicitud.</summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.SynchronizationContextKey">
      <summary> Proporciona una clave para el <see cref="T:System.Threading.SynchronizationContext" /> actual almacenado en <see cref="M:HttpRequestMessage.Properties" />. Si <see cref="M:SynchronizationContext.Current" /> es null no se almacena ningún contexto. </summary>
    </member>
    <member name="T:System.Web.Http.Hosting.IHostBufferPolicySelector">
      <summary> Interfaz para controlar el uso de solicitudes y respuestas de almacenamiento en búfer en el host. Si un host proporciona compatibilidad para solicitudes y/o respuestas de almacenamiento en búfer, puede usar esta interfaz para determinar la directiva para cuándo se va a usar el almacenamiento en búfer.</summary>
    </member>
    <member name="M:System.Web.Http.Hosting.IHostBufferPolicySelector.UseBufferedInputStream(System.Object)">
      <summary>Determina si el host debe almacenar en búfer el cuerpo de la entidad <see cref="T:System.Net.Http.HttpRequestMessage" />.</summary>
      <returns>true si debe usarse el almacenamiento en buffer; en caso contrario, debe usarse una solicitud transmitida.</returns>
      <param name="hostContext">Contexto del host.</param>
    </member>
    <member name="M:System.Web.Http.Hosting.IHostBufferPolicySelector.UseBufferedOutputStream(System.Net.Http.HttpResponseMessage)">
      <summary>Determina si el host debe almacenar en búfer el cuerpo de la entidad <see cref="T.System.Net.Http.HttpResponseMessage" />.</summary>
      <returns>true si debe usarse el almacenamiento en buffer; en caso contrario, debe usarse una respuesta transmitida.</returns>
      <param name="response">Mensaje de respuesta HTTP.</param>
    </member>
    <member name="T:System.Web.Http.Metadata.ModelMetadata">
      <summary>No se actualizará ningún contenido aquí; no agregue material aquí.</summary>
    </member>
    <member name="M:System.Web.Http.Metadata.ModelMetadata.#ctor(System.Web.Http.Metadata.ModelMetadataProvider,System.Type,System.Func{System.Object},System.Type,System.String)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Metadata.ModelMetadata" />.</summary>
      <param name="provider">Proveedor.</param>
      <param name="containerType">Tipo del contenedor.</param>
      <param name="modelAccessor">Descriptor de acceso del modelo.</param>
      <param name="modelType">Tipo del modelo.</param>
      <param name="propertyName">Nombre de la propiedad.</param>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.AdditionalValues">
      <summary>Obtiene un diccionario que contiene metadatos adicionales acerca del modelo.</summary>
      <returns>Un diccionario que contiene metadatos adicionales acerca del modelo.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.ContainerType">
      <summary>Obtiene o establece el tipo del contenedor para el modelo.</summary>
      <returns>Tipo del contenedor para el modelo.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.ConvertEmptyStringToNull">
      <summary>Obtiene o establece un valor que indica si las cadenas vacías que se devuelven en formularios deben convertirse en null.</summary>
      <returns>true si las cadenas vacías que se devuelven en formularios deben convertirse en null; de lo contrario, false. El valor predeterminado es true.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.Description">
      <summary>Obtiene o establece la descripción del modelo.</summary>
      <returns>Descripción del modelo. El valor predeterminado es null.</returns>
    </member>
    <member name="M:System.Web.Http.Metadata.ModelMetadata.GetDisplayName">
      <summary>Obtiene el nombre para mostrar del modelo.</summary>
      <returns>Nombre para mostrar del modelo.</returns>
    </member>
    <member name="M:System.Web.Http.Metadata.ModelMetadata.GetValidators(System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider})">
      <summary>Obtiene una lista de validadores para el modelo.</summary>
      <returns>Una lista de validadores para el modelo.</returns>
      <param name="validatorProviders">Los proveedores de validador para el modelo.</param>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.IsComplexType">
      <summary>Obtiene o establece un valor que indica si el modelo es un tipo complejo.</summary>
      <returns>Un valor que indica si el modelo se considera como complejo.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.IsNullableValueType">
      <summary>Obtiene un valor que indica si el tipo acepta valores NULL.</summary>
      <returns>true si el tipo acepta valores NULL; en caso contrario, false.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.IsReadOnly">
      <summary>Obtiene o establece un valor que indica si el modelo es de solo lectura.</summary>
      <returns>true si el modelo es de solo lectura; en caso contrario, false.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.Model">
      <summary>Obtiene el valor del modelo.</summary>
      <returns>Un valor de modelo puede ser null.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.ModelType">
      <summary>Obtiene el tipo del modelo.</summary>
      <returns>Tipo del modelo.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.Properties">
      <summary>Obtiene una colección de objetos de metadatos del modelo que describen las propiedades del modelo.</summary>
      <returns>Una colección de objetos de metadatos del modelo que describen las propiedades del modelo.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.PropertyName">
      <summary>Obtiene el nombre de la propiedad.</summary>
      <returns>El nombre de la propiedad.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.Provider">
      <summary>Obtiene o establece el proveedor.</summary>
      <returns>Proveedor.</returns>
    </member>
    <member name="T:System.Web.Http.Metadata.ModelMetadataProvider">
      <summary>No se actualizará ningún contenido aquí; no agregue material aquí.</summary>
    </member>
    <member name="M:System.Web.Http.Metadata.ModelMetadataProvider.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Metadata.ModelMetadataProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.Metadata.ModelMetadataProvider.GetMetadataForProperties(System.Object,System.Type)">
      <summary>Obtiene un objeto ModelMetadata para cada propiedad de un modelo.</summary>
      <returns>Un objeto ModelMetadata para cada propiedad de un modelo.</returns>
      <param name="container">Contenedor.</param>
      <param name="containerType">Tipo del contenedor.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.ModelMetadataProvider.GetMetadataForProperty(System.Func{System.Object},System.Type,System.String)">
      <summary>Obtiene los metadatos para la propiedad especificada.</summary>
      <returns>Modelo de metadatos para la propiedad especificada.</returns>
      <param name="modelAccessor">Descriptor de acceso del modelo.</param>
      <param name="containerType">Tipo del contenedor.</param>
      <param name="propertyName">Propiedad para la que se va a obtener el modelo de metadatos.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.ModelMetadataProvider.GetMetadataForType(System.Func{System.Object},System.Type)">
      <summary>Obtiene los metadatos para el descriptor de acceso del modelo y el tipo de modelo especificados.</summary>
      <returns>Metadatos.</returns>
      <param name="modelAccessor">Descriptor de acceso del modelo.</param>
      <param name="modelType">Tipo del modo.</param>
    </member>
    <member name="T:System.Web.Http.Metadata.Providers.AssociatedMetadataProvider`1">
      <summary>Proporciona una clase abstracta para implementar un proveedor de metadatos.</summary>
      <typeparam name="TModelMetadata">Tipo de metadatos del modelo.</typeparam>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.AssociatedMetadataProvider`1.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Metadata.Providers.AssociatedMetadataProvider`1" />.</summary>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.AssociatedMetadataProvider`1.CreateMetadataFromPrototype(`0,System.Func{System.Object})">
      <summary>Cuando se invalida en una clase derivada, crea los metadatos del modelo para la propiedad mediante el prototipo especificado.</summary>
      <returns>Metadatos del modelo para la propiedad.</returns>
      <param name="prototype">Prototipo a partir del cual se crearán los metadatos del modelo.</param>
      <param name="modelAccessor">Descriptor de acceso del modelo.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.AssociatedMetadataProvider`1.CreateMetadataPrototype(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Type,System.String)">
      <summary>Cuando se invalida en una clase derivada, crea los metadatos del modelo para la propiedad.</summary>
      <returns>Metadatos del modelo para la propiedad.</returns>
      <param name="attributes">Conjunto de atributos.</param>
      <param name="containerType">Tipo del contenedor.</param>
      <param name="modelType">Tipo del modelo.</param>
      <param name="propertyName">Nombre de la propiedad.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.AssociatedMetadataProvider`1.GetMetadataForProperties(System.Object,System.Type)">
      <summary>Recupera una lista de propiedades para el modelo.</summary>
      <returns>Una lista de propiedades para el modelo.</returns>
      <param name="container">Contenedor del modelo.</param>
      <param name="containerType">Tipo del contenedor.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.AssociatedMetadataProvider`1.GetMetadataForProperty(System.Func{System.Object},System.Type,System.String)">
      <summary>Recupera los metadatos para la propiedad especificada utilizando el tipo de contenedor y el nombre de propiedad.</summary>
      <returns>Los metadatos de la propiedad especificada.</returns>
      <param name="modelAccessor">Descriptor de acceso del modelo.</param>
      <param name="containerType">Tipo del contenedor.</param>
      <param name="propertyName">Nombre de la propiedad.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.AssociatedMetadataProvider`1.GetMetadataForType(System.Func{System.Object},System.Type)">
      <summary>Devuelve los metadatos para la propiedad especificada utilizando el tipo del modelo.</summary>
      <returns>Los metadatos de la propiedad especificada.</returns>
      <param name="modelAccessor">Descriptor de acceso del modelo.</param>
      <param name="modelType">Tipo del contenedor.</param>
    </member>
    <member name="T:System.Web.Http.Metadata.Providers.CachedDataAnnotationsMetadataAttributes">
      <summary>Proporciona datos de caché de prototipo para <see cref="T:System.Web.Http.Metadata.Providers.CachedModelMetadata`1" />.</summary>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedDataAnnotationsMetadataAttributes.#ctor(System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Metadata.Providers.CachedDataAnnotationsMetadataAttributes" />.</summary>
      <param name="attributes">Los atributos que proporcionan datos para la inicialización.</param>
    </member>
    <member name="P:System.Web.Http.Metadata.Providers.CachedDataAnnotationsMetadataAttributes.Display">
      <summary>Obtiene o establece el atributo de visualización de metadatos.</summary>
      <returns>El atributo de visualización de metadatos.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.Providers.CachedDataAnnotationsMetadataAttributes.DisplayFormat">
      <summary>Obtiene o establece el atributo de formato de visualización de metadatos.</summary>
      <returns>El atributo de formato de visualización de metadatos.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.Providers.CachedDataAnnotationsMetadataAttributes.Editable">
      <summary>Obtiene o establece el atributo editable de metadatos.</summary>
      <returns>El atributo editable de metadatos.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.Providers.CachedDataAnnotationsMetadataAttributes.ReadOnly">
      <summary>Obtiene o establece el atributo de solo lectura de metadatos.</summary>
      <returns>El atributo de solo lectura de metadatos.</returns>
    </member>
    <member name="T:System.Web.Http.Metadata.Providers.CachedDataAnnotationsModelMetadata">
      <summary>Proporciona un contenedor para los metadatos comunes, para la clase <see cref="T:System.Web.Http.Metadata.Providers.DataAnnotationsModelMetadataProvider" />, de un modelo de datos.</summary>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedDataAnnotationsModelMetadata.#ctor(System.Web.Http.Metadata.Providers.CachedDataAnnotationsModelMetadata,System.Func{System.Object})">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Metadata.Providers.CachedDataAnnotationsModelMetadata" />.</summary>
      <param name="prototype">El prototipo que se usa para inicializar los metadatos del modelo.</param>
      <param name="modelAccessor">Descriptor de acceso del modelo.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedDataAnnotationsModelMetadata.#ctor(System.Web.Http.Metadata.Providers.DataAnnotationsModelMetadataProvider,System.Type,System.Type,System.String,System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Metadata.Providers.CachedDataAnnotationsModelMetadata" />.</summary>
      <param name="provider">Proveedor de metadatos.</param>
      <param name="containerType">Tipo del contenedor.</param>
      <param name="modelType">Tipo del modelo.</param>
      <param name="propertyName">Nombre de la propiedad.</param>
      <param name="attributes">Los atributos que proporcionan datos para la inicialización.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedDataAnnotationsModelMetadata.ComputeConvertEmptyStringToNull">
      <summary>Recupera un valor que indica si las cadenas vacías que se devuelven en formularios deben convertirse en null.</summary>
      <returns>true si las cadenas vacías que se devuelven en formularios deben convertirse en null; de lo contrario, false.</returns>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedDataAnnotationsModelMetadata.ComputeDescription">
      <summary>Recupera la descripción del modelo.</summary>
      <returns>Descripción del modelo.</returns>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedDataAnnotationsModelMetadata.ComputeIsReadOnly">
      <summary>Recupera un valor que indica si el modelo es de solo lectura.</summary>
      <returns>true si el modelo es de solo lectura; en caso contrario, false.</returns>
    </member>
    <member name="T:System.Web.Http.Metadata.Providers.CachedModelMetadata`1">
      <summary>No se actualizará ningún contenido aquí; no agregue material aquí.</summary>
      <typeparam name="TPrototypeCache">Tipo de caché de prototipo.</typeparam>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedModelMetadata`1.#ctor(System.Web.Http.Metadata.Providers.CachedModelMetadata{`0},System.Func{System.Object})">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Metadata.Providers.CachedModelMetadata`1" />.</summary>
      <param name="prototype">Prototipo.</param>
      <param name="modelAccessor">Descriptor de acceso del modelo.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedModelMetadata`1.#ctor(System.Web.Http.Metadata.Providers.DataAnnotationsModelMetadataProvider,System.Type,System.Type,System.String,`0)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Http.Metadata.Providers.CachedModelMetadata`1" />.</summary>
      <param name="provider">Proveedor.</param>
      <param name="containerType">Tipo de contenedor.</param>
      <param name="modelType">Tipo de modelo.</param>
      <param name="propertyName">Nombre de la propiedad.</param>
      <param name="prototypeCache">Memoria caché de prototipo.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedModelMetadata`1.ComputeConvertEmptyStringToNull">
      <summary>Indica si las cadenas vacías que se vuelven a registrar en los formularios deben calcularse y convertirse en null.</summary>
      <returns>true si las cadenas vacías que se vuelven a registrar en formularios deben calcularse y convertirse en null; de lo contrario, false.</returns>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedModelMetadata`1.ComputeDescription">
      <summary>Indica el valor de cálculo.</summary>
      <returns>Valor de cálculo.</returns>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedModelMetadata`1.ComputeIsComplexType">
      <summary>Obtiene un valor que indica si el modelo es un tipo complejo.</summary>
      <returns>Valor que indica si el modelo es considerado un tipo complejo por el marco Web API.</returns>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedModelMetadata`1.ComputeIsReadOnly">
      <summary>Obtiene un valor que indica si el modelo que debe calcularse es de solo lectura.</summary>
      <returns>true si el modelo que debe calcularse es de solo lectura; de lo contrario, false.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.Providers.CachedModelMetadata`1.ConvertEmptyStringToNull">
      <summary>Obtiene o establece un valor que indica si las cadenas vacías que se devuelven en formularios deben convertirse en null.</summary>
      <returns>true si las cadenas vacías que se devuelven en formularios deben convertirse en null; de lo contrario, false. El valor predeterminado es true.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.Providers.CachedModelMetadata`1.Description">
      <summary>Obtiene o establece la descripción del modelo.</summary>
      <returns>Descripción del modelo.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.Providers.CachedModelMetadata`1.IsComplexType">
      <summary>Obtiene un valor que indica si el modelo es un tipo complejo.</summary>
      <returns>Valor que indica si el modelo es considerado un tipo complejo por el marco Web API.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.Providers.CachedModelMetadata`1.IsReadOnly">
      <summary>Obtiene o establece un valor que indica si el modelo es de solo lectura.</summary>
      <returns>true si el modelo es de solo lectura; de lo contrario, false.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.Providers.CachedModelMetadata`1.PrototypeCache">
      <summary>Obtiene o establece un valor que indica si se está actualizando la memoria caché de prototipo.</summary>
      <returns>true si la memoria caché de prototipo se está actualizando; de lo contrario, false.</returns>
    </member>
    <member name="T:System.Web.Http.Metadata.Providers.DataAnnotationsModelMetadataProvider">
      <summary>Implementa el proveedor de metadatos del modelo predeterminado.</summary>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.DataAnnotationsModelMetadataProvider.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Metadata.Providers.DataAnnotationsModelMetadataProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.DataAnnotationsModelMetadataProvider.CreateMetadataFromPrototype(System.Web.Http.Metadata.Providers.CachedDataAnnotationsModelMetadata,System.Func{System.Object})">
      <summary>Crea los metadatos a partir del prototipo para la propiedad especificada.</summary>
      <returns>Los metadatos de la propiedad.</returns>
      <param name="prototype">Prototipo.</param>
      <param name="modelAccessor">Descriptor de acceso del modelo.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.DataAnnotationsModelMetadataProvider.CreateMetadataPrototype(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Type,System.String)">
      <summary>Crea los metadatos para la propiedad especificada.</summary>
      <returns>Los metadatos de la propiedad.</returns>
      <param name="attributes">Atributos.</param>
      <param name="containerType">Tipo del contenedor.</param>
      <param name="modelType">Tipo del modelo.</param>
      <param name="propertyName">Nombre de la propiedad.</param>
    </member>
    <member name="T:System.Web.Http.Metadata.Providers.EmptyModelMetadataProvider">
      <summary>No se actualizará ningún contenido aquí; no agregue material aquí.</summary>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.EmptyModelMetadataProvider.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Metadata.Providers.EmptyModelMetadataProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.EmptyModelMetadataProvider.CreateMetadataFromPrototype(System.Web.Http.Metadata.ModelMetadata,System.Func{System.Object})">
      <summary>Crea metadatos a partir del prototipo.</summary>
      <returns>Metadatos.</returns>
      <param name="prototype">Prototipos de metadatos del modelo.</param>
      <param name="modelAccessor">Descriptor de acceso del modelo.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.EmptyModelMetadataProvider.CreateMetadataPrototype(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Type,System.String)">
      <summary>Crea un prototipo del proveedor de metadatos del <see cref="T:System.Web.Http.Metadata.Providers.EmptyModelMetadataProvider" />.</summary>
      <returns>Prototipo del proveedor de metadatos.</returns>
      <param name="attributes">Atributos.</param>
      <param name="containerType">Tipo de contenedor.</param>
      <param name="modelType">Tipo del modelo.</param>
      <param name="propertyName">Nombre de la propiedad.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.CancellationTokenParameterBinding">
      <summary>Representa el enlazado directamente al token de cancelación.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.CancellationTokenParameterBinding.#ctor(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.ModelBinding.CancellationTokenParameterBinding" />.</summary>
      <param name="descriptor">Descriptor del enlazado.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.CancellationTokenParameterBinding.ExecuteBindingAsync(System.Web.Http.Metadata.ModelMetadataProvider,System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)">
      <summary>Ejecuta el enlazado durante la sincronización.</summary>
      <returns>Enlazado durante la sincronización.</returns>
      <param name="metadataProvider">Proveedor de metadatos.</param>
      <param name="actionContext">Contexto de acción.</param>
      <param name="cancellationToken">Notificación tras la cancelación de las operaciones.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.CustomModelBinderAttribute">
      <summary>Representa un atributo que invoca un enlazador de modelos personalizado.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.CustomModelBinderAttribute.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.ModelBinding.CustomModelBinderAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.CustomModelBinderAttribute.GetBinder">
      <summary>Recupera el enlazador de modelos asociado.</summary>
      <returns>Referencia a un objeto que implementa la interfaz <see cref="T:System.Web.Http.ModelBinding.IModelBinder" />.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.DefaultActionValueBinder">
      <summary>No se actualizará ningún contenido aquí; no agregue material aquí.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.DefaultActionValueBinder.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.ModelBinding.DefaultActionValueBinder" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.DefaultActionValueBinder.GetBinding(System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary>Implementación por defecto de la interfaz de <see cref="T:System.Web.Http.Controllers.IActionValueBinder" />. Esta interfaz es el principal punto de entrada para enlazar parámetros de acciones.</summary>
      <returns>El elemento <see cref="T:System.Web.Http.Controllers.HttpActionBinding" /> asociado con el elemento <see cref="T:System.Web.Http.ModelBinding.DefaultActionValueBinder" />.</returns>
      <param name="actionDescriptor">Descriptor de la acción.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.DefaultActionValueBinder.GetParameterBinding(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>Obtiene el elemento <see cref="T:System.Web.Http.Controllers.HttpParameterBinding" /> asociado con el elemento <see cref="T:System.Web.Http.ModelBinding.DefaultActionValueBinder" />.</summary>
      <returns>El elemento <see cref="T:System.Web.Http.Controllers.HttpParameterBinding" /> asociado con el elemento <see cref="T:System.Web.Http.ModelBinding.DefaultActionValueBinder" />.</returns>
      <param name="parameter">Descriptor del parámetro.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ErrorParameterBinding">
      <summary>Define un error de enlazado.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ErrorParameterBinding.#ctor(System.Web.Http.Controllers.HttpParameterDescriptor,System.String)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.ModelBinding.ErrorParameterBinding" />.</summary>
      <param name="descriptor">Descriptor del error.</param>
      <param name="message">Mensaje.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ErrorParameterBinding.ErrorMessage">
      <summary>Obtiene el mensaje de error.</summary>
      <returns>Mensaje de error.</returns>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ErrorParameterBinding.ExecuteBindingAsync(System.Web.Http.Metadata.ModelMetadataProvider,System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)">
      <summary>Ejecuta el método de enlazado durante la sincronización.</summary>
      <param name="metadataProvider">Proveedor de metadatos.</param>
      <param name="actionContext">Contexto de acción.</param>
      <param name="cancellationToken">Valor del token de cancelación.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.FormatterParameterBinding">
      <summary>Representa el enlazado de parámetros que leerá del cuerpo e invocará los formateadores.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.FormatterParameterBinding.#ctor(System.Web.Http.Controllers.HttpParameterDescriptor,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter},System.Web.Http.Validation.IBodyModelValidator)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.ModelBinding.FormatterParameterBinding" />.</summary>
      <param name="descriptor">El descriptor.</param>
      <param name="formatters">Formateador.</param>
      <param name="bodyModelValidator">El validador del modelo de cuerpo.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.FormatterParameterBinding.BodyModelValidator">
      <summary>Obtiene o establece una interfaz para el validador del modelo de cuerpo.</summary>
      <returns>Una interfaz para el validador del modelo de cuerpo.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.FormatterParameterBinding.ErrorMessage">
      <summary>Obtiene el mensaje de error.</summary>
      <returns>Mensaje de error.</returns>
    </member>
    <member name="M:System.Web.Http.ModelBinding.FormatterParameterBinding.ExecuteBindingAsync(System.Web.Http.Metadata.ModelMetadataProvider,System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)">
      <summary>Ejecuta de manera asíncrona el enlazado de <see cref="T:System.Web.Http.ModelBinding.FormatterParameterBinding" />.</summary>
      <returns>El resultado de la acción.</returns>
      <param name="metadataProvider">Proveedor de metadatos.</param>
      <param name="actionContext">El contexto asociado con la acción.</param>
      <param name="cancellationToken">Token de cancelación.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.FormatterParameterBinding.Formatters">
      <summary>Obtiene o establece un objeto enumerable que representa el formateador para el enlazado de parámetros.</summary>
      <returns>Un objeto enumerable que representa el formateador para el enlazado de parámetros.</returns>
    </member>
    <member name="M:System.Web.Http.ModelBinding.FormatterParameterBinding.ReadContentAsync(System.Net.Http.HttpRequestMessage,System.Type,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter},System.Net.Http.Formatting.IFormatterLogger)">
      <summary>Lee de manera asíncrona el contenido de <see cref="T:System.Web.Http.ModelBinding.FormatterParameterBinding" />.</summary>
      <returns>El resultado de la acción.</returns>
      <param name="request">Solicitud.</param>
      <param name="type">Tipo.</param>
      <param name="formatters">Formateador.</param>
      <param name="formatterLogger">El registrador de formatos.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.FormatterParameterBinding.WillReadBody">
      <summary>Obtiene si el elemento <see cref="T:System.Web.Http.ModelBinding.FormatterParameterBinding" /> leerá el cuerpo.</summary>
      <returns>True si el elemento <see cref="T:System.Web.Http.ModelBinding.FormatterParameterBinding" /> leerá el cuerpo; en caso contrario, false.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.FormDataCollectionExtensions">
      <summary>Representa las extensiones para la colección de datos de formulario.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.FormDataCollectionExtensions.ReadAs``1(System.Net.Http.Formatting.FormDataCollection)">
      <summary>Lee las extensiones de colección con el tipo especificado.</summary>
      <returns>Las extensiones de colección de lectura.</returns>
      <param name="formData">Los datos de formulario.</param>
      <typeparam name="T">El tipo genérico.</typeparam>
    </member>
    <member name="M:System.Web.Http.ModelBinding.FormDataCollectionExtensions.ReadAs``1(System.Net.Http.Formatting.FormDataCollection,System.String,System.Net.Http.Formatting.IRequiredMemberSelector,System.Net.Http.Formatting.IFormatterLogger)">
      <summary>Lee las extensiones de colección con el tipo especificado.</summary>
      <returns>Las extensiones de colección.</returns>
      <param name="formData">Los datos de formulario.</param>
      <param name="modelName">Nombre del modelo.</param>
      <param name="requiredMemberSelector">El selector de miembros necesario.</param>
      <param name="formatterLogger">El registrador del formateador.</param>
      <typeparam name="T">El tipo genérico.</typeparam>
    </member>
    <member name="M:System.Web.Http.ModelBinding.FormDataCollectionExtensions.ReadAs(System.Net.Http.Formatting.FormDataCollection,System.Type)">
      <summary>Lee las extensiones de colección con el tipo especificado.</summary>
      <returns>Las extensiones de colección con el tipo especificado.</returns>
      <param name="formData">Los datos de formulario.</param>
      <param name="type">Tipo del objeto.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.FormDataCollectionExtensions.ReadAs(System.Net.Http.Formatting.FormDataCollection,System.Type,System.String,System.Net.Http.Formatting.IRequiredMemberSelector,System.Net.Http.Formatting.IFormatterLogger)">
      <summary>Lee las extensiones de colección con el tipo y el nombre de modelo especificados.</summary>
      <returns>Las extensiones de colección.</returns>
      <param name="formData">Los datos de formulario.</param>
      <param name="type">Tipo del objeto.</param>
      <param name="modelName">Nombre del modelo.</param>
      <param name="requiredMemberSelector">El selector de miembros necesario.</param>
      <param name="formatterLogger">El registrador del formateador.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.HttpBindingBehavior">
      <summary>Enumera el comportamiento del enlazado HTTP.</summary>
    </member>
    <member name="F:System.Web.Http.ModelBinding.HttpBindingBehavior.Optional">
      <summary>El comportamiento de enlazado opcional</summary>
    </member>
    <member name="F:System.Web.Http.ModelBinding.HttpBindingBehavior.Never">
      <summary>No usar nunca el enlazado HTTP.</summary>
    </member>
    <member name="F:System.Web.Http.ModelBinding.HttpBindingBehavior.Required">
      <summary>El enlazado HTTP es obligatorio.</summary>
    </member>
    <member name="T:System.Web.Http.ModelBinding.HttpBindingBehaviorAttribute">
      <summary>Proporciona una clase base para los atributos de comportamiento de enlazado de modelos.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.HttpBindingBehaviorAttribute.#ctor(System.Web.Http.ModelBinding.HttpBindingBehavior)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.ModelBinding.HttpBindingBehaviorAttribute" />.</summary>
      <param name="behavior">Comportamiento.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.HttpBindingBehaviorAttribute.Behavior">
      <summary>Obtiene o establece la categoría de comportamiento.</summary>
      <returns>Categoría de comportamiento.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.HttpBindingBehaviorAttribute.TypeId">
      <summary>Obtiene un identificador único para este atributo.</summary>
      <returns>Id. de este atributo.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.HttpRequestParameterBinding">
      <summary>El parámetro se enlaza a la solicitud.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.HttpRequestParameterBinding.#ctor(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.ModelBinding.HttpRequestParameterBinding" />.</summary>
      <param name="descriptor">Descriptor del parámetro.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.HttpRequestParameterBinding.ExecuteBindingAsync(System.Web.Http.Metadata.ModelMetadataProvider,System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)">
      <summary>Ejecuta de manera asincrónica el enlazado de parámetros.</summary>
      <returns>Parámetro enlazado.</returns>
      <param name="metadataProvider">Proveedor de metadatos.</param>
      <param name="actionContext">Contexto de acción.</param>
      <param name="cancellationToken">Token de cancelación.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.IModelBinder">
      <summary>Define los métodos necesarios para un enlazador de modelos.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.IModelBinder.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Enlaza el modelo a un valor utilizando el contexto del controlador y el contexto de enlace especificados.</summary>
      <returns>Valor enlazado.</returns>
      <param name="actionContext">Contexto de acción.</param>
      <param name="bindingContext">Contexto de enlace.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.IValueProviderParameterBinding">
      <summary>Representa un proveedor de valores para el enlazado de parámetros.</summary>
    </member>
    <member name="P:System.Web.Http.ModelBinding.IValueProviderParameterBinding.ValueProviderFactories">
      <summary>Obtiene la instancias de <see cref="T:System.Web.Http.ValueProviders.ValueProviderFactory" /> utilizadas por este enlace de parámetros.</summary>
      <returns>Instancias de <see cref="T:System.Web.Http.ValueProviders.ValueProviderFactory" /> utilizadas por este enlazado de parámetros.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.JQueryMvcFormUrlEncodedFormatter">
      <summary>Representa la clase <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> para administrar datos finalizados en dirección URL de formulario HTML, también conocidos como application/x-www-form-urlencoded.  </summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.JQueryMvcFormUrlEncodedFormatter.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.ModelBinding.JQueryMvcFormUrlEncodedFormatter" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.JQueryMvcFormUrlEncodedFormatter.CanReadType(System.Type)">
      <summary> Determina si este elemento <see cref="T:System.Web.Http.ModelBinding.JQueryMvcFormUrlEncodedFormatter" /> puede leer objetos del elemento <paramref name="type" /> especificado. </summary>
      <returns>true si los objetos de este tipo pueden leerse; de lo contrario false.</returns>
      <param name="type">Tipo de objeto que se va a leer.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.JQueryMvcFormUrlEncodedFormatter.ReadFromStreamAsync(System.Type,System.IO.Stream,System.Net.Http.HttpContent,System.Net.Http.Formatting.IFormatterLogger)">
      <summary>Lee un objeto del elemento <paramref name="type" /> especificado de la transmisión especificada. Este método se invoca durante la deserialización.</summary>
      <returns>Una <see cref="T:System.Threading.Tasks.Task" /> cuyo resultado será la instancia del objeto que se ha leído.</returns>
      <param name="type">Tipo de objeto que se leerá.</param>
      <param name="readStream">La <see cref="T:System.IO.Stream" /> desde la que se leerá.</param>
      <param name="content">Contenido que se está leyendo.</param>
      <param name="formatterLogger">El <see cref="T:System.Net.Http.Formatting.IFormatterLogger" /> en el que se registrarán eventos.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ModelBinderAttribute">
      <summary> Especificar que este parámetro utiliza un enlazador de modelo. Esto puede especificar opcionalmente el enlazador de modelo específico y los proveedores de valor que controlan ese enlazador de modelo.  Los atributos derivados podrían proporcionar configuraciones de conveniencia para el enlazador de modelo o proveedor de valor.  </summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBinderAttribute.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.ModelBinding.ModelBinderAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBinderAttribute.#ctor(System.Type)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.ModelBinding.ModelBinderAttribute" />.</summary>
      <param name="binderType">Tipo del enlazador de modelos.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBinderAttribute.BinderType">
      <summary>Obtiene o establece el tipo de enlazador de modelos.</summary>
      <returns>Tipo del enlazador de modelos. </returns>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBinderAttribute.GetBinding(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>Obtiene el enlazado para un parámetro.</summary>
      <returns>
        <see cref="T:System.Web.Http.Controllers.HttpParameterBinding" /> que contiene el enlazado.</returns>
      <param name="parameter">Parámetro que se va a enlazar.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBinderAttribute.GetModelBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary> Obtiene el IModelBinder para este tipo. </summary>
      <returns> enlazador de modelos no nulo.</returns>
      <param name="configuration">Configuración.</param>
      <param name="modelType">tipo de modelo que se espera que enlace el enlazador.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBinderAttribute.GetModelBinderProvider(System.Web.Http.HttpConfiguration)">
      <summary>Obtiene el proveedor de enlazador de modelos.</summary>
      <returns>Instancia de <see cref="T:System.Web.Http.ModelBinding.ModelBinderProvider" />.</returns>
      <param name="configuration">Objeto de configuración <see cref="T:System.Web.Http.HttpConfiguration" />.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBinderAttribute.GetValueProviderFactories(System.Web.Http.HttpConfiguration)">
      <summary> Obtiene los proveedores de valores que se alimentarán al enlazador de modelos. </summary>
      <returns>Colección de instancias de <see cref="T:System.Web.Http.ValueProviders.ValueProviderFactory" />.</returns>
      <param name="configuration">Objeto de configuración <see cref="T:System.Web.Http.HttpConfiguration" />.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBinderAttribute.Name">
      <summary>Obtiene o establece el nombre que se considerará como nombre de parámetro durante el enlazado de modelos.</summary>
      <returns>Nombre del parámetro que se va a considerar.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBinderAttribute.SuppressPrefixCheck">
      <summary>Obtiene o establece un valor que especifica si la comprobación de prefijo debería suprimirse.</summary>
      <returns>true si la comprobación de prefijo debería suprimirse; en caso contrario, false.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ModelBinderConfig">
      <summary>Proporciona un contenedor para la configuración de enlazadores de modelos.</summary>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBinderConfig.ResourceClassKey">
      <summary>Obtiene o establece el nombre del archivo de recursos (clave de clase) que contiene los valores de cadena adaptados.</summary>
      <returns>Nombre del archivo de recursos (clave de clase).</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBinderConfig.TypeConversionErrorMessageProvider">
      <summary>Obtiene o establece el proveedor actual para mensajes de error de conversión de tipo.</summary>
      <returns>Proveedor actual para mensajes de error de conversión de tipo.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBinderConfig.ValueRequiredErrorMessageProvider">
      <summary>Obtiene o establece el proveedor actual para mensajes de error de valor requerido.</summary>
      <returns>Mensaje de error del proveedor.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ModelBinderErrorMessageProvider">
      <summary>Proporciona un contenedor para el proveedor de mensajes de error de enlazadores de modelos.</summary>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ModelBinderParameterBinding">
      <summary> Describe un parámetro que se enlaza mediante ModelBinding.   </summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBinderParameterBinding.#ctor(System.Web.Http.Controllers.HttpParameterDescriptor,System.Web.Http.ModelBinding.IModelBinder,System.Collections.Generic.IEnumerable{System.Web.Http.ValueProviders.ValueProviderFactory})">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.ModelBinding.ModelBinderParameterBinding" />.</summary>
      <param name="descriptor">Descriptor del parámetro.</param>
      <param name="modelBinder">Enlazador de modelos.</param>
      <param name="valueProviderFactories">Colección del generador de proveedores de valores.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBinderParameterBinding.Binder">
      <summary>Obtiene el enlazador de modelos.</summary>
      <returns>Enlazador de modelos.</returns>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBinderParameterBinding.ExecuteBindingAsync(System.Web.Http.Metadata.ModelMetadataProvider,System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)">
      <summary>Ejecuta de manera asincrónica el enlazado de parámetros a través del enlazador de modelos.</summary>
      <returns>Tarea que se señala cuando el enlazado se ha completado.</returns>
      <param name="metadataProvider">Proveedor de metadatos que se utilizará para la validación.</param>
      <param name="actionContext">El contexto de acción para el enlazado.</param>
      <param name="cancellationToken">Token de cancelación asignado a esta tarea para cancelar la operación de enlazado.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBinderParameterBinding.ValueProviderFactories">
      <summary>Obtiene la colección del generador de proveedores de valores.</summary>
      <returns>Colección del generador de proveedores de valores.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ModelBinderProvider">
      <summary>Proporciona una clase base abstracta para proveedores del enlazador de modelos.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBinderProvider.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.ModelBinding.ModelBinderProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary>Busca un enlazador para el tipo dado.</summary>
      <returns>Un enlazador, que puede intentar enlazar este tipo. O null si el enlazador sabe estadísticamente que nunca podrá enlazar el tipo.</returns>
      <param name="configuration">Un objeto de configuración.</param>
      <param name="modelType">Tipo de modelo según el que se debe enlazar.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ModelBindingContext">
      <summary>Proporciona el contexto en el que funciona un enlazador de modelos.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBindingContext.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.ModelBinding.ModelBindingContext" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBindingContext.#ctor(System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.ModelBinding.ModelBindingContext" />.</summary>
      <param name="bindingContext">Contexto de enlace.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBindingContext.FallbackToEmptyPrefix">
      <summary>Obtiene o establece un valor que indica si el enlazador debe utilizar un prefijo vacío.</summary>
      <returns>true si el enlazador debe utilizar un prefijo vacío; de lo contrario, false.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBindingContext.Model">
      <summary>Obtiene o establece el modelo.</summary>
      <returns>El modelo.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBindingContext.ModelMetadata">
      <summary>Obtiene o establece los metadatos del modelo.</summary>
      <returns>Metadatos del modelo.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBindingContext.ModelName">
      <summary>Obtiene o establece el nombre del modelo.</summary>
      <returns>Nombre del modelo.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBindingContext.ModelState">
      <summary>Obtiene o establece el estado del modelo.</summary>
      <returns>Estado del modelo.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBindingContext.ModelType">
      <summary>Obtiene o establece el tipo de modelo.</summary>
      <returns>Tipo del modelo.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBindingContext.PropertyMetadata">
      <summary>Obtiene los metadatos de la propiedad.</summary>
      <returns>Metadatos de la propiedad.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBindingContext.ValidationNode">
      <summary>Obtiene o establece el nodo de validación.</summary>
      <returns>El nodo de validación.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBindingContext.ValueProvider">
      <summary>Obtiene o establece el proveedor de valor.</summary>
      <returns>Proveedor de valor.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ModelError">
      <summary>Representa un error que se produce durante el enlace de modelos.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelError.#ctor(System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Http.ModelBinding.ModelError" /> utilizando la excepción especificada.</summary>
      <param name="exception">Excepción.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelError.#ctor(System.Exception,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Http.ModelBinding.ModelError" /> utilizando la excepción y el mensaje de error especificados.</summary>
      <param name="exception">Excepción.</param>
      <param name="errorMessage">Mensaje de error</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelError.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Http.ModelBinding.ModelError" /> utilizando el mensaje de error especificado.</summary>
      <param name="errorMessage">Mensaje de error</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelError.ErrorMessage">
      <summary>Obtiene o establece el mensaje de error.</summary>
      <returns>Mensaje de error.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelError.Exception">
      <summary>Obtiene o establece el objeto de excepción.</summary>
      <returns>El objeto excepción.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ModelErrorCollection">
      <summary>Representa una colección de instancias de <see cref="T:System.Web.Http.ModelBinding.ModelError" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelErrorCollection.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.ModelBinding.ModelErrorCollection" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelErrorCollection.Add(System.Exception)">
      <summary>Agrega el objeto Excepción especificado a la colección de modelo-error.</summary>
      <param name="exception">Excepción.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelErrorCollection.Add(System.String)">
      <summary>Agrega el mensaje de error especificado a la colección de modelo-error.</summary>
      <param name="errorMessage">Mensaje de error.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ModelState">
      <summary>Encapsula el estado del enlace del modelo a una propiedad de un argumento de acción-método o al propio argumento.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelState.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.ModelBinding.ModelState" />.</summary>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelState.Errors">
      <summary>Obtiene un objeto <see cref="T:System.Web.Http.ModelBinding.ModelErrorCollection" /> que contiene los errores producidos durante el enlace del modelo.</summary>
      <returns>Errores de estado del modelo.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelState.Value">
      <summary>Obtiene un objeto <see cref="T:System.Web.Http.ValueProviders.ValueProviderResult" /> que encapsula el valor que se enlazaba durante el enlace del modelo.</summary>
      <returns>Valor de estado del modelo.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ModelStateDictionary">
      <summary>Representa el estado de un intento de enlazar un formulario expuesto a un método de acción, que incluye información de validación.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.ModelBinding.ModelStateDictionary" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.#ctor(System.Web.Http.ModelBinding.ModelStateDictionary)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Http.ModelBinding.ModelStateDictionary" /> utilizando valores que se copian del diccionario de modelo-estado especificado.</summary>
      <param name="dictionary">Diccionario.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,System.Web.Http.ModelBinding.ModelState})">
      <summary>Agrega el elemento especificado al diccionario de modelo-estado.</summary>
      <param name="item">Objeto que se va a agregar al diccionario de modelo-estado.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.Add(System.String,System.Web.Http.ModelBinding.ModelState)">
      <summary>Agrega un elemento que tiene la clave y el valor especificados al diccionario de modelo-estado.</summary>
      <param name="key">Clave del elemento que se va a agregar.</param>
      <param name="value">Valor del elemento que se va a agregar.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.AddModelError(System.String,System.Exception)">
      <summary>Agrega el error de modelo especificado a la colección de errores para el diccionario de modelo-estado asociado a la clave especificada.</summary>
      <param name="key">Clave.</param>
      <param name="exception">Excepción.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.AddModelError(System.String,System.String)">
      <summary>Agrega el mensaje de error especificado a la colección de errores para el diccionario de modelo-estado asociado a la clave especificada.</summary>
      <param name="key">Clave.</param>
      <param name="errorMessage">Mensaje de error.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.Clear">
      <summary>Quita todos los elementos del diccionario de modelo-estado.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Web.Http.ModelBinding.ModelState})">
      <summary>Determina si el diccionario de modelo-estado contiene un valor específico.</summary>
      <returns>true si se encuentra el elemento en el diccionario de modelo-estado; de lo contrario, false.</returns>
      <param name="item">El objeto que se va a buscar en el diccionario de modelo-estado.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.ContainsKey(System.String)">
      <summary>Determina si el diccionario de modelo-estado contiene la clave especificada.</summary>
      <returns>true si el diccionario de modelo-estado contiene la clave especificada; de lo contrario, false.</returns>
      <param name="key">La clave que se va a buscar en el diccionario de modelo-estado.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Web.Http.ModelBinding.ModelState}[],System.Int32)">
      <summary>Copia los elementos del diccionario de modelo-estado en una matriz, empezando en un índice especificado.</summary>
      <param name="array">Matriz. La matriz debe tener una indización de base cero.</param>
      <param name="arrayIndex">Índice de base cero de la matriz donde se inicia la operación de copia.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelStateDictionary.Count">
      <summary>Obtiene el número de pares clave-valor de la colección.</summary>
      <returns>El número de pares clave-valor incluidos en la colección.</returns>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.GetEnumerator">
      <summary>Devuelve un enumerador que puede usarse para iterar por la colección.</summary>
      <returns>Enumerador que se puede usar para iterar por la colección.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelStateDictionary.IsReadOnly">
      <summary>Obtiene un valor que indica si la colección es de solo lectura.</summary>
      <returns>true si la colección es de solo lectura; en caso contrario, false.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelStateDictionary.IsValid">
      <summary>Obtiene un valor que indica si esta instancia del diccionario de modelo-estado es válida.</summary>
      <returns>true si esta instancia es válida; en caso contrario, false.</returns>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.IsValidField(System.String)">
      <summary>Determina si hay algún objeto <see cref="T:System.Web.Http.ModelBinding.ModelError" /> que esté asociado con la clave especificada o que la tenga como prefijo.</summary>
      <returns>true si el diccionario de modelo-estado contiene un valor que está asociado a la clave especificada; de lo contrario, false.</returns>
      <param name="key">Clave.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelStateDictionary.Item(System.String)">
      <summary>Obtiene o establece el valor que está asociado a la clave especificada.</summary>
      <returns>Elemento de modelo-estado.</returns>
      <param name="key">Clave.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelStateDictionary.Keys">
      <summary>Obtiene una colección que contiene las claves del diccionario.</summary>
      <returns>Colección que contiene las claves del diccionario de modelo-estado.</returns>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.Merge(System.Web.Http.ModelBinding.ModelStateDictionary)">
      <summary>Copia los valores del objeto <see cref="T:System.Web.Http.ModelBinding.ModelStateDictionary" /> especificado en este diccionario, sobrescribiendo los valores existentes si las claves son las mismas.</summary>
      <param name="dictionary">Diccionario.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Web.Http.ModelBinding.ModelState})">
      <summary>Quita la primera aparición del objeto especificado del diccionario de modelo-estado.</summary>
      <returns>true si se ha eliminado correctamente el elemento del diccionario de modelo-estado; de lo contrario, false. Este método también devuelve false si no se encuentra el elemento en el diccionario de modelo-estado.</returns>
      <param name="item">El objeto que se va a quitar del diccionario de modelo-estado.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.Remove(System.String)">
      <summary>Quita el elemento que contiene la clave especificada del diccionario de modelo-estado.</summary>
      <returns>true si el elemento se eliminó correctamente; en caso contrario, false. Este método también devuelve false si no se encontró la clave en el diccionario de modelo-estado.</returns>
      <param name="key">Clave del elemento que se va a quitar.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.SetModelValue(System.String,System.Web.Http.ValueProviders.ValueProviderResult)">
      <summary>Establece el valor para la clave especificada utilizando el diccionario de proveedores de valores especificado.</summary>
      <param name="key">Clave.</param>
      <param name="value">Valor.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>Obtiene un enumerador que se itera por toda una colección.</summary>
      <returns>Objeto IEnumerator que se puede usar para iterar por la colección.</returns>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.TryGetValue(System.String,System.Web.Http.ModelBinding.ModelState@)">
      <summary>Intenta obtener el valor que está asociado a la clave especificada.</summary>
      <returns>true si el objeto contiene un elemento que tiene la clave especificada; de lo contrario, false.</returns>
      <param name="key">Clave del valor que se va a obtener.</param>
      <param name="value">El valor asociado con la clave especificada.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelStateDictionary.Values">
      <summary>Obtiene una colección que contiene los valores del diccionario.</summary>
      <returns>Colección que contiene los valores del diccionario de modelo-estado.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ParameterBindingRulesCollection">
      <summary> La colección de funciones que puede producir un enlazado de parámetros para un parámetro dado.    </summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ParameterBindingRulesCollection.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Http.ModelBinding.ParameterBindingRulesCollection" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ParameterBindingRulesCollection.Add(System.Type,System.Func{System.Web.Http.Controllers.HttpParameterDescriptor,System.Web.Http.Controllers.HttpParameterBinding})">
      <summary> Agrega una función al final de la colección.  La función agregada es un contenedor funcInner que comprueba que parameterType coincide con typeMatch. </summary>
      <param name="typeMatch">Escribir para establecer una coincidencia con HttpParameterDescriptor.ParameterType.</param>
      <param name="funcInner">La función interna que se invoca si el tipo de coincidencia es correcto.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ParameterBindingRulesCollection.Insert(System.Int32,System.Type,System.Func{System.Web.Http.Controllers.HttpParameterDescriptor,System.Web.Http.Controllers.HttpParameterBinding})">
      <summary> Insertar una función en el índice de la colección especificado. /// La función agregada es un contenedor funcInner que comprueba que parameterType coincide con typeMatch. </summary>
      <param name="index">El índice que se va a insertar.</param>
      <param name="typeMatch">Escribir para establecer una coincidencia con HttpParameterDescriptor.ParameterType.</param>
      <param name="funcInner">La función interna que se invoca si el tipo de coincidencia es correcto.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ParameterBindingRulesCollection.LookupBinding(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary> Ejecutar cada función de enlazado en orden hasta que una de ellas devuelva un enlazado no null.  </summary>
      <returns>El primer enlazado no null producido para el parámetro. null si no se produce ningún enlazado.</returns>
      <param name="parameter">El parámetro que se va a enlazar.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.ArrayModelBinder`1">
      <summary>Asigna una solicitud del explorador a una matriz.</summary>
      <typeparam name="TElement">Tipo de la matriz.</typeparam>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.ArrayModelBinder`1.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.ModelBinding.Binders.ArrayModelBinder`1" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.ArrayModelBinder`1.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Indica si el modelo está enlazado.</summary>
      <returns>true si el modelo especificado está enlazado; en caso contrario, false.</returns>
      <param name="actionContext">Contexto de acción.</param>
      <param name="bindingContext">Contexto de enlace.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.ArrayModelBinder`1.CreateOrReplaceCollection(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext,System.Collections.Generic.IList{`0})">
      <summary>Convierte la colección en una matriz.</summary>
      <returns>true en todos los casos.</returns>
      <param name="actionContext">Contexto de acción.</param>
      <param name="bindingContext">Contexto de enlace.</param>
      <param name="newCollection">La nueva colección.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.ArrayModelBinderProvider">
      <summary>Brinda un enlazador de modelos para las matrices.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.ArrayModelBinderProvider.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.ModelBinding.Binders.ArrayModelBinderProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.ArrayModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary>Devuelve un enlazador de modelos para las matrices.</summary>
      <returns>Un enlazador de modelos o null si el intento de obtener un enlazador de modelos no se realizó correctamente.</returns>
      <param name="configuration">Configuración.</param>
      <param name="modelType">Tipo del modelo.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.CollectionModelBinder`1">
      <summary>Asigna una solicitud del explorador a una colección.</summary>
      <typeparam name="TElement">Tipo de la colección.</typeparam>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.CollectionModelBinder`1.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.ModelBinding.Binders.CollectionModelBinder`1" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.CollectionModelBinder`1.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Enlaza el modelo utilizando el contexto de ejecución y el contexto de enlace especificados.</summary>
      <returns>true si el enlace de modelos se realiza correctamente; en caso contrario, false.</returns>
      <param name="actionContext">Contexto de acción.</param>
      <param name="bindingContext">Contexto de enlace.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.CollectionModelBinder`1.CreateOrReplaceCollection(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext,System.Collections.Generic.IList{`0})">
      <summary>Brinda una forma para las clases derivadas de manipular la colección antes de devolverla desde el enlazador.</summary>
      <returns>true en todos los casos.</returns>
      <param name="actionContext">Contexto de acción.</param>
      <param name="bindingContext">Contexto de enlace.</param>
      <param name="newCollection">La nueva colección.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.CollectionModelBinderProvider">
      <summary>Brinda un enlazador de modelos para una colección.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.CollectionModelBinderProvider.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.ModelBinding.Binders.CollectionModelBinderProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.CollectionModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary>Recupera un enlazador de modelos para una colección.</summary>
      <returns>Enlazador de modelos.</returns>
      <param name="configuration">La configuración del modelo.</param>
      <param name="modelType">Tipo del modelo.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.ComplexModelDto">
      <summary>Representa un objeto de transferencia de datos (DTO) para un modelo complejo.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.ComplexModelDto.#ctor(System.Web.Http.Metadata.ModelMetadata,System.Collections.Generic.IEnumerable{System.Web.Http.Metadata.ModelMetadata})">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDto" />.</summary>
      <param name="modelMetadata">Metadatos del modelo.</param>
      <param name="propertyMetadata">Colección de metadatos de propiedades.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.Binders.ComplexModelDto.ModelMetadata">
      <summary>Obtiene o establece los metadatos del modelo del <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDto" />.</summary>
      <returns>Metadatos del modelo del <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDto" />.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.Binders.ComplexModelDto.PropertyMetadata">
      <summary>Obtiene o establece la colección de metadatos del modelo del <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDto" />.</summary>
      <returns>Colección de metadatos de propiedades del <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDto" />.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.Binders.ComplexModelDto.Results">
      <summary>Obtiene o establece los resultados del <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDto" />.</summary>
      <returns>Resultados del <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDto" />.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.ComplexModelDtoModelBinder">
      <summary>Representa un enlazador de modelos para el objeto <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDto" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.ComplexModelDtoModelBinder.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDtoModelBinder" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.ComplexModelDtoModelBinder.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Determina si el modelo especificado está enlazado.</summary>
      <returns>true si el modelo especificado está enlazado; en caso contrario, false.</returns>
      <param name="actionContext">Contexto de acción.</param>
      <param name="bindingContext">Contexto de enlace.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.ComplexModelDtoModelBinderProvider">
      <summary>Representa un modelo complejo que invoca a un proveedor del enlazador de modelos.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.ComplexModelDtoModelBinderProvider.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDtoModelBinderProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.ComplexModelDtoModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary>Recupera el enlazador de modelos asociado.</summary>
      <returns>Enlazador de modelos.</returns>
      <param name="configuration">Configuración.</param>
      <param name="modelType">Tipo de modelo que va a recuperarse.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.ComplexModelDtoResult">
      <summary>Representa el resultado para el objeto <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDto" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.ComplexModelDtoResult.#ctor(System.Object,System.Web.Http.Validation.ModelValidationNode)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDtoResult" />.</summary>
      <param name="model">Modelo del objeto.</param>
      <param name="validationNode">El nodo de validación.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.Binders.ComplexModelDtoResult.Model">
      <summary>Obtiene o establece el modelo para este objeto.</summary>
      <returns>Modelo para este objeto.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.Binders.ComplexModelDtoResult.ValidationNode">
      <summary>Obtiene o establece el <see cref="T:System.Web.Http.Validation.ModelValidationNode" /> para este objeto.</summary>
      <returns>El <see cref="T:System.Web.Http.Validation.ModelValidationNode" /> para este objeto.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.CompositeModelBinder">
      <summary>Representa un <see cref="T:System.Web.Http.ModelBinding.IModelBinder" /> que delega en una de una colección de instancias de <see cref="T:System.Web.Http.ModelBinding.ModelBinderProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.CompositeModelBinder.#ctor(System.Collections.Generic.IEnumerable{System.Web.Http.ModelBinding.IModelBinder})">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.ModelBinding.Binders.CompositeModelBinder" />.</summary>
      <param name="binders">Una enumeración de enlazadores.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.CompositeModelBinder.#ctor(System.Web.Http.ModelBinding.IModelBinder[])">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.ModelBinding.Binders.CompositeModelBinder" />.</summary>
      <param name="binders">Una matriz de enlazadores.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.CompositeModelBinder.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Indica si el modelo especificado está enlazado.</summary>
      <returns>true si el modelo está enlazado; en caso contrario, false.</returns>
      <param name="actionContext">Contexto de acción.</param>
      <param name="bindingContext">Contexto de enlace.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.CompositeModelBinderProvider">
      <summary>Representa la case para los proveedores de enlazador de modelo compuesto.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.CompositeModelBinderProvider.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.ModelBinding.Binders.CompositeModelBinderProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.CompositeModelBinderProvider.#ctor(System.Collections.Generic.IEnumerable{System.Web.Http.ModelBinding.ModelBinderProvider})">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.ModelBinding.Binders.CompositeModelBinderProvider" />.</summary>
      <param name="providers">Colección de <see cref="T:System.Web.Http.ModelBinding.ModelBinderProvider" />.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.CompositeModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary>Obtiene el enlazador para el modelo.</summary>
      <returns>El enlazador del modelo.</returns>
      <param name="configuration">La configuración del enlazador.</param>
      <param name="modelType">Tipo del modelo.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.Binders.CompositeModelBinderProvider.Providers">
      <summary>Obtiene los proveedores para el enlazador de modelos compuestos.</summary>
      <returns>La colección de proveedores.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.DictionaryModelBinder`2">
      <summary>Asigna una solicitud de explorador a un objeto de datos de diccionario.</summary>
      <typeparam name="TKey">Tipo de la clave.</typeparam>
      <typeparam name="TValue">Tipo del valor.</typeparam>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.DictionaryModelBinder`2.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.ModelBinding.Binders.DictionaryModelBinder`2" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.DictionaryModelBinder`2.CreateOrReplaceCollection(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext,System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{`0,`1}})">
      <summary>Convierte la colección en un diccionario.</summary>
      <returns>true en todos los casos.</returns>
      <param name="actionContext">Contexto de acción.</param>
      <param name="bindingContext">Contexto de enlace.</param>
      <param name="newCollection">La nueva colección.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.DictionaryModelBinderProvider">
      <summary>Brinda un enlazador de modelos para un diccionario.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.DictionaryModelBinderProvider.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.ModelBinding.Binders.DictionaryModelBinderProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.DictionaryModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary>Recupera el enlazador de modelos asociado.</summary>
      <returns>Enlazador de modelos asociado.</returns>
      <param name="configuration">La configuración que se utilizará.</param>
      <param name="modelType">Tipo del modelo.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.KeyValuePairModelBinder`2">
      <summary>Asigna una solicitud de explorador a un objeto de datos de par clave-valor.</summary>
      <typeparam name="TKey">Tipo de la clave.</typeparam>
      <typeparam name="TValue">Tipo del valor.</typeparam>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.KeyValuePairModelBinder`2.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.ModelBinding.Binders.KeyValuePairModelBinder`2" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.KeyValuePairModelBinder`2.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Enlaza el modelo utilizando el contexto de ejecución y el contexto de enlace especificados.</summary>
      <returns>true si el enlace de modelos se realiza correctamente; en caso contrario, false.</returns>
      <param name="actionContext">Contexto de acción.</param>
      <param name="bindingContext">Contexto de enlace.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.KeyValuePairModelBinderProvider">
      <summary>Brinda un enlazador de modelos para una colección de pares clave-valor.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.KeyValuePairModelBinderProvider.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.ModelBinding.Binders.KeyValuePairModelBinderProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.KeyValuePairModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary>Recupera el enlazador de modelos asociado.</summary>
      <returns>Enlazador de modelos asociado.</returns>
      <param name="configuration">Configuración.</param>
      <param name="modelType">Tipo del modelo.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinder">
      <summary>Asigna una solicitud de explorador a un objeto de datos mutables.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinder.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinder" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinder.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Enlaza el modelo utilizando el contexto de acción y el contexto de enlace especificados.</summary>
      <returns>true si el enlazado se realiza correctamente; en caso contrario, false.</returns>
      <param name="actionContext">Contexto de acción.</param>
      <param name="bindingContext">Contexto de enlace.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinder.CanUpdateProperty(System.Web.Http.Metadata.ModelMetadata)">
      <summary>Recupera un valor que indica si una propiedad puede actualizarse.</summary>
      <returns>true si la propiedad puede actualizarse; en caso contrario, false.</returns>
      <param name="propertyMetadata">Metadatos para la propiedad que se va a evaluar.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinder.CreateModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Crea una instancia del modelo.</summary>
      <returns>El objeto de modelo recién creado.</returns>
      <param name="actionContext">Contexto de acción.</param>
      <param name="bindingContext">Contexto de enlace.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinder.EnsureModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Crea una instancia del modelo si todavía no existe una instancia en el contexto de enlace.</summary>
      <param name="actionContext">Contexto de acción.</param>
      <param name="bindingContext">Contexto de enlace.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinder.GetMetadataForProperties(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Recupera metadatos para propiedades del modelo.</summary>
      <returns>Metadatos para propiedades del modelo.</returns>
      <param name="actionContext">Contexto de acción.</param>
      <param name="bindingContext">Contexto de enlace.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinder.SetProperty(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext,System.Web.Http.Metadata.ModelMetadata,System.Web.Http.ModelBinding.Binders.ComplexModelDtoResult,System.Web.Http.Validation.ModelValidator)">
      <summary>Establece el valor de una propiedad especificada.</summary>
      <param name="actionContext">Contexto de acción.</param>
      <param name="bindingContext">Contexto de enlace.</param>
      <param name="propertyMetadata">Metadatos para la propiedad que se va a establecer.</param>
      <param name="dtoResult">Información de validación acerca de la propiedad.</param>
      <param name="requiredValidator">Validador del modelo.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinderProvider">
      <summary>Brinda un enlazador de modelos para objetos mutables.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinderProvider.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinderProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary>Recupera el enlazador de modelos del tipo especificado.</summary>
      <returns>Enlazador de modelos.</returns>
      <param name="configuration">Configuración.</param>
      <param name="modelType">Tipo de modelo que va a recuperarse.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.SimpleModelBinderProvider">
      <summary>No se actualizará ningún contenido aquí; no agregue material aquí.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.SimpleModelBinderProvider.#ctor(System.Type,System.Func{System.Web.Http.ModelBinding.IModelBinder})">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.ModelBinding.Binders.SimpleModelBinderProvider" />.</summary>
      <param name="modelType">Tipo del modelo.</param>
      <param name="modelBinderFactory">Generador del enlazador de modelos.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.SimpleModelBinderProvider.#ctor(System.Type,System.Web.Http.ModelBinding.IModelBinder)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Http.ModelBinding.Binders.SimpleModelBinderProvider" /> utilizando el tipo de modelo especificado y el enlazador de modelos.</summary>
      <param name="modelType">Tipo del modelo.</param>
      <param name="modelBinder">Enlazador de modelos.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.SimpleModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary>Devuelve un enlazador de modelos mediante el contexto de ejecución y el contexto de enlace especificados.</summary>
      <returns>El enlazador de modelos o null si el intento de obtener un enlazador de modelos no se realizó correctamente.</returns>
      <param name="configuration">Configuración.</param>
      <param name="modelType">Tipo del modelo.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.Binders.SimpleModelBinderProvider.ModelType">
      <summary>Obtiene el tipo del modelo.</summary>
      <returns>Tipo del modelo.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.Binders.SimpleModelBinderProvider.SuppressPrefixCheck">
      <summary>Obtiene o establece un valor que especifica si la comprobación de prefijo debería suprimirse.</summary>
      <returns>true si la comprobación de prefijo debería suprimirse; en caso contrario, false.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.TypeConverterModelBinder">
      <summary>Asigna una solicitud de explorador a un objeto de datos. Este tipo se utiliza cuando el enlazador de modelos requiere conversiones utilizando un convertidor de tipo de .NET Framework.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.TypeConverterModelBinder.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.ModelBinding.Binders.TypeConverterModelBinder" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.TypeConverterModelBinder.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Enlaza el modelo utilizando el contexto del controlador y el contexto de enlace especificados.</summary>
      <returns>true si el enlace de modelos se realiza correctamente; en caso contrario, false.</returns>
      <param name="actionContext">Contexto de acción.</param>
      <param name="bindingContext">Contexto de enlace.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.TypeConverterModelBinderProvider">
      <summary>Brinda un enlazador de modelos para un modelo que requiere conversión de tipo.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.TypeConverterModelBinderProvider.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.ModelBinding.Binders.TypeConverterModelBinderProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.TypeConverterModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary>Recupera un enlazador de modelos para un modelo que requiere conversión de tipo.</summary>
      <returns>El enlazador de modelos o Nothing si el tipo no puede convertirse o si no hay ningún valor para convertir.</returns>
      <param name="configuration">La configuración del enlazador.</param>
      <param name="modelType">Tipo del modelo.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.TypeMatchModelBinder">
      <summary>Asigna una solicitud de explorador a un objeto de datos. Esta clase se utiliza cuando el enlace de modelos no requiere conversión de tipo.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.TypeMatchModelBinder.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.ModelBinding.Binders.TypeMatchModelBinder" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.TypeMatchModelBinder.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Enlaza el modelo utilizando el contexto de ejecución y el contexto de enlace especificados.</summary>
      <returns>true si el enlace de modelos se realiza correctamente; en caso contrario, false.</returns>
      <param name="actionContext">Contexto de acción.</param>
      <param name="bindingContext">Contexto de enlace.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.TypeMatchModelBinderProvider">
      <summary>Brinda un enlazador de modelos para un modelo que no requiere conversión de tipo.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.TypeMatchModelBinderProvider.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.ModelBinding.Binders.TypeMatchModelBinderProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.TypeMatchModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary>Recupera el enlazador de modelos asociado.</summary>
      <returns>Enlazador de modelos asociado.</returns>
      <param name="configuration">Configuración.</param>
      <param name="modelType">Tipo del modelo.</param>
    </member>
    <member name="T:System.Web.Http.Routing.HttpMethodConstraint">
      <summary>Permite definir qué verbos HTTP se permiten cuando el enrutamiento ASP.NET determina si una dirección URL coincide con una ruta.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.HttpMethodConstraint.#ctor(System.Net.Http.HttpMethod[])">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Http.Routing.HttpMethodConstraint" /> utilizando los verbos HTTP que se permiten para la ruta.</summary>
      <param name="allowedMethods">Los verbos HTTP que son válidos para la ruta.</param>
    </member>
    <member name="P:System.Web.Http.Routing.HttpMethodConstraint.AllowedMethods">
      <summary>Obtiene o establece la colección de verbos HTTP permitidos para la ruta.</summary>
      <returns>Una colección de verbos HTTP permitidos para la ruta.</returns>
    </member>
    <member name="M:System.Web.Http.Routing.HttpMethodConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Determina si la solicitud se realizó con un verbo HTTP que es uno de los verbos permitidos para la ruta.</summary>
      <returns>Cuando el enrutamiento ASP.NET procesa una solicitud, true si la solicitud se realizó utilizando un verbo HTTP permitido; de lo contrario false. Cuando el enrutamiento ASP.NET construye una dirección URL, true si los valores suministrados contienen un verbo HTTP que coincide con uno de los verbos HTTP permitidos; de lo contrario false. El valor predeterminado es true.</returns>
      <param name="request">La solicitud que se está comprobando para determinar si coincide con la dirección URL.</param>
      <param name="route">El objeto que se está comprobando para determinar si coincide con la dirección URL.</param>
      <param name="parameterName">El nombre del parámetro que se está comprobando.</param>
      <param name="values">Objeto que contiene los parámetros de una ruta.</param>
      <param name="routeDirection">Un objeto que indica si la comprobación de restricciones se realiza cuando se procesa una solicitud entrante o cuando se genera una dirección URL.</param>
    </member>
    <member name="M:System.Web.Http.Routing.HttpMethodConstraint.System#Web#Http#Routing#IHttpRouteConstraint#Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Determina si la solicitud se realizó con un verbo HTTP que es uno de los verbos permitidos para la ruta.</summary>
      <returns>Cuando el enrutamiento ASP.NET procesa una solicitud, true si la solicitud se realizó utilizando un verbo HTTP permitido; de lo contrario false. Cuando el enrutamiento ASP.NET construye una dirección URL, true si los valores suministrados contienen un verbo HTTP que coincide con uno de los verbos HTTP permitidos; de lo contrario false. El valor predeterminado es true.</returns>
      <param name="request">La solicitud que se está comprobando para determinar si coincide con la dirección URL.</param>
      <param name="route">El objeto que se está comprobando para determinar si coincide con la dirección URL.</param>
      <param name="parameterName">El nombre del parámetro que se está comprobando.</param>
      <param name="values">Objeto que contiene los parámetros de una ruta.</param>
      <param name="routeDirection">Un objeto que indica si la comprobación de restricciones se realiza cuando se procesa una solicitud entrante o cuando se genera una dirección URL.</param>
    </member>
    <member name="T:System.Web.Http.Routing.HttpRoute">
      <summary>Representa una clase de ruta para el host propio (es decir, hospedado fuera de ASP.NET).</summary>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRoute.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Routing.HttpRoute" />.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRoute.#ctor(System.String)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Routing.HttpRoute" />.</summary>
      <param name="routeTemplate">Plantilla de la ruta.</param>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRoute.#ctor(System.String,System.Web.Http.Routing.HttpRouteValueDictionary)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Routing.HttpRoute" />.</summary>
      <param name="routeTemplate">Plantilla de la ruta.</param>
      <param name="defaults">Valores predeterminados de los parámetros de ruta.</param>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRoute.#ctor(System.String,System.Web.Http.Routing.HttpRouteValueDictionary,System.Web.Http.Routing.HttpRouteValueDictionary)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Routing.HttpRoute" />.</summary>
      <param name="routeTemplate">Plantilla de la ruta.</param>
      <param name="defaults">Valores predeterminados de los parámetros de ruta.</param>
      <param name="constraints">Restricciones para los parámetros de ruta.</param>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRoute.#ctor(System.String,System.Web.Http.Routing.HttpRouteValueDictionary,System.Web.Http.Routing.HttpRouteValueDictionary,System.Web.Http.Routing.HttpRouteValueDictionary)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Routing.HttpRoute" />.</summary>
      <param name="routeTemplate">Plantilla de la ruta.</param>
      <param name="defaults">Valores predeterminados de los parámetros de ruta.</param>
      <param name="constraints">Restricciones para los parámetros de ruta.</param>
      <param name="dataTokens">Tokens adicionales de los parámetros de ruta.</param>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRoute.#ctor(System.String,System.Web.Http.Routing.HttpRouteValueDictionary,System.Web.Http.Routing.HttpRouteValueDictionary,System.Web.Http.Routing.HttpRouteValueDictionary,System.Net.Http.HttpMessageHandler)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Routing.HttpRoute" />.</summary>
      <param name="routeTemplate">Plantilla de la ruta.</param>
      <param name="defaults">Valores predeterminados de los parámetros de ruta.</param>
      <param name="constraints">Restricciones para los parámetros de ruta.</param>
      <param name="dataTokens">Tokens adicionales de los parámetros de ruta.</param>
      <param name="handler">Gestor de mensajes que será el destinatario de la solicitud.</param>
    </member>
    <member name="P:System.Web.Http.Routing.HttpRoute.Constraints">
      <summary>Obtiene las restricciones para los parámetros de ruta de acceso.</summary>
      <returns>Restricciones para los parámetros de ruta.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.HttpRoute.DataTokens">
      <summary>Obtiene cualquier token de datos adicional no utilizado directamente para determinar si una ruta de acceso coincide con un <see cref="T:System.Net.Http.HttpRequestMessage" /> entrante.</summary>
      <returns>Cualquier token de datos adicional no utilizado directamente para determinar si una ruta coincide con un <see cref="T:System.Net.Http.HttpRequestMessage" /> entrante.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.HttpRoute.Defaults">
      <summary>Obtiene los valores predeterminados para parámetros de ruta de acceso si no están proporcionados por el <see cref="T:System.Net.Http.HttpRequestMessage" /> entrante.</summary>
      <returns>Valores predeterminados para parámetros de ruta si no están proporcionados por el <see cref="T:System.Net.Http.HttpRequestMessage" /> entrante.</returns>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRoute.GetRouteData(System.String,System.Net.Http.HttpRequestMessage)">
      <summary>Determina si esta ruta es una coincidencia para la solicitud entrante buscando el <see cref="T:System.Web.Http.Routing.HttpRouteData" /> para la ruta.</summary>
      <returns>El <see cref="T:System.Web.Http.Routing.HttpRouteData" /> para una ruta si coincide; de lo contrario, null.</returns>
      <param name="virtualPathRoot">Raíz de ruta de acceso virtual.</param>
      <param name="request">Solicitud HTTP.</param>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRoute.GetVirtualPath(System.Net.Http.HttpRequestMessage,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Intenta generar un identificador URI que representa los valores pasados sobre la base de los valores actuales de los <see cref="T:System.Web.Http.Routing.HttpRouteData" /> y nuevos valores utilizando la <see cref="T:System.Web.Http.Routing.HttpRoute" /> especificada.</summary>
      <returns>Una instancia de <see cref="T:System.Web.Http.Routing.HttpVirtualPathData" /> o null si no se puede generar el identificador URI.</returns>
      <param name="request">Mensaje de solicitud HTTP.</param>
      <param name="values">Valores de ruta.</param>
    </member>
    <member name="P:System.Web.Http.Routing.HttpRoute.Handler">
      <summary>Obtiene o establece el controlador de ruta http.</summary>
      <returns>Controlador de ruta http.</returns>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRoute.ProcessConstraint(System.Net.Http.HttpRequestMessage,System.Object,System.String,System.Web.Http.Routing.HttpRouteValueDictionary,System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Determina si esta instancia es igual a una ruta especificada.</summary>
      <returns>true si esta instancia es igual a una ruta especificada; en caso contrario, false.</returns>
      <param name="request">Solicitud HTTP.</param>
      <param name="constraint">Restricciones para los parámetros de ruta.</param>
      <param name="parameterName">Nombre del parámetro.</param>
      <param name="values">Lista de valores de parámetros.</param>
      <param name="routeDirection">Uno de los valores de enumeración de la enumeración <see cref="System.Web.Http.Routing.HttpRouteDirection" />.</param>
    </member>
    <member name="P:System.Web.Http.Routing.HttpRoute.RouteTemplate">
      <summary>Obtiene la plantilla de ruta de acceso que describe el modelo del identificador URI con el cual establecer una coincidencia.</summary>
      <returns>Plantilla de ruta que describe el modelo del identificador URI con el cual establecer una coincidencia.</returns>
    </member>
    <member name="T:System.Web.Http.Routing.HttpRouteData">
      <summary>Encapsula información sobre la ruta HTTP.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRouteData.#ctor(System.Web.Http.Routing.IHttpRoute)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Routing.HttpRouteData" />.</summary>
      <param name="route">Un objeto que define la ruta.</param>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRouteData.#ctor(System.Web.Http.Routing.IHttpRoute,System.Web.Http.Routing.HttpRouteValueDictionary)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Routing.HttpRouteData" />.</summary>
      <param name="route">Un objeto que define la ruta.</param>
      <param name="values">Valor.</param>
    </member>
    <member name="P:System.Web.Http.Routing.HttpRouteData.Route">
      <summary>Obtiene el objeto que representa la ruta.</summary>
      <returns>El objeto que representa la ruta.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.HttpRouteData.Values">
      <summary>Obtiene una colección de valores de parámetros de dirección URL y valores predeterminados para la ruta.</summary>
      <returns>Un objeto que puede contener valores analizados desde la dirección URL y los valores predeterminados.</returns>
    </member>
    <member name="T:System.Web.Http.Routing.HttpRouteDirection">
      <summary>Especifica una enumeración de la dirección de ruta.</summary>
    </member>
    <member name="F:System.Web.Http.Routing.HttpRouteDirection.UriResolution">
      <summary>La dirección de UriResolution.</summary>
    </member>
    <member name="F:System.Web.Http.Routing.HttpRouteDirection.UriGeneration">
      <summary>La dirección de UriGeneration.</summary>
    </member>
    <member name="T:System.Web.Http.Routing.HttpRouteValueDictionary">
      <summary>Representa una clase de ruta para el host propio de pares clave/valor especificados.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRouteValueDictionary.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Routing.HttpRouteValueDictionary" />.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRouteValueDictionary.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Routing.HttpRouteValueDictionary" />.</summary>
      <param name="dictionary">Diccionario.</param>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRouteValueDictionary.#ctor(System.Object)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Routing.HttpRouteValueDictionary" />.</summary>
      <param name="values">Valor de la clave.</param>
    </member>
    <member name="T:System.Web.Http.Routing.HttpVirtualPathData">
      <summary>Presenta los datos sobre la ruta de acceso virtual HTTP.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.HttpVirtualPathData.#ctor(System.Web.Http.Routing.IHttpRoute,System.String)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Routing.HttpVirtualPathData" />.</summary>
      <param name="route">Ruta de la ruta de acceso virtual.</param>
      <param name="virtualPath">URL creado a partir de la definición de ruta.</param>
    </member>
    <member name="P:System.Web.Http.Routing.HttpVirtualPathData.Route">
      <summary>Obtiene o establece la ruta de la ruta de acceso virtual.</summary>
      <returns>Ruta de la ruta de acceso virtual.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.HttpVirtualPathData.VirtualPath">
      <summary>Obtiene o establece la dirección URL creada a partir de la definición de ruta.</summary>
      <returns>URL creado a partir de la definición de ruta.</returns>
    </member>
    <member name="T:System.Web.Http.Routing.IHttpRoute">
      <summary>
        <see cref="T:System.Web.Http.Routing.IHttpRoute" /> define la interfaz para una ruta de acceso que exprese cómo asignar un <see cref="T:System.Net.Http.HttpRequestMessage" /> entrante a una acción y un controlador particular. </summary>
    </member>
    <member name="P:System.Web.Http.Routing.IHttpRoute.Constraints">
      <summary> Obtiene las restricciones para los parámetros de ruta de acceso. </summary>
      <returns>Restricciones para los parámetros de ruta.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.IHttpRoute.DataTokens">
      <summary> Obtiene cualquier token de datos adicional no utilizado directamente para determinar si una ruta de acceso coincide con un <see cref="T:System.Net.Http.HttpRequestMessage" /> entrante. </summary>
      <returns>Tokens de datos adicionales.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.IHttpRoute.Defaults">
      <summary> Obtiene los valores predeterminados para parámetros de ruta de acceso si no están proporcionados por el <see cref="T:System.Net.Http.HttpRequestMessage" /> entrante. </summary>
      <returns>Valores predeterminados para los parámetros de ruta.</returns>
    </member>
    <member name="M:System.Web.Http.Routing.IHttpRoute.GetRouteData(System.String,System.Net.Http.HttpRequestMessage)">
      <summary> Determina si esta ruta de acceso es una coincidencia para la solicitud entrante buscando la &lt;see cref="!:IRouteData" /&gt; para la ruta de acceso. </summary>
      <returns>La &lt;see cref="!:RouteData" /&gt; para una ruta de acceso si coincide; de lo contrario, null.</returns>
      <param name="virtualPathRoot">Raíz de ruta de acceso virtual.</param>
      <param name="request">Solicitud.</param>
    </member>
    <member name="M:System.Web.Http.Routing.IHttpRoute.GetVirtualPath(System.Net.Http.HttpRequestMessage,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Obtiene unos datos de ruta de acceso virtual basándose en la ruta y los valores proporcionados.</summary>
      <returns>Datos de la ruta de acceso virtual.</returns>
      <param name="request">Mensaje de solicitud.</param>
      <param name="values">Valores.</param>
    </member>
    <member name="P:System.Web.Http.Routing.IHttpRoute.Handler">
      <summary>Obtiene el gestor de mensajes que será el destinatario de la solicitud.</summary>
      <returns>Gestor de mensajes.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.IHttpRoute.RouteTemplate">
      <summary> Obtiene la plantilla de ruta de acceso que describe el modelo del identificador URI con el cual establecer una coincidencia.  </summary>
      <returns>Plantilla de la ruta.</returns>
    </member>
    <member name="T:System.Web.Http.Routing.IHttpRouteConstraint">
      <summary>Representa una restricción de ruta de la clase base.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.IHttpRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Determina si esta instancia es igual a una ruta especificada.</summary>
      <returns>True si esta instancia es igual a una ruta especificada; en caso contrario, false.</returns>
      <param name="request">Solicitud.</param>
      <param name="route">Identificador que se debe comparar.</param>
      <param name="parameterName">Nombre del parámetro.</param>
      <param name="values">Lista de valores de parámetros.</param>
      <param name="routeDirection">Dirección de la ruta.</param>
    </member>
    <member name="T:System.Web.Http.Routing.IHttpRouteData">
      <summary>Proporciona información acerca de una ruta.</summary>
    </member>
    <member name="P:System.Web.Http.Routing.IHttpRouteData.Route">
      <summary>Obtiene el objeto que representa la ruta.</summary>
      <returns>Objeto que representa la ruta.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.IHttpRouteData.Values">
      <summary>Obtiene una colección de valores de parámetros de dirección URL y valores predeterminados para la ruta.</summary>
      <returns>Los valores que se analizan desde la dirección URL y desde los valores predeterminados.</returns>
    </member>
    <member name="T:System.Web.Http.Routing.IHttpVirtualPathData">
      <summary>Define las propiedades para la ruta HTTP.</summary>
    </member>
    <member name="P:System.Web.Http.Routing.IHttpVirtualPathData.Route">
      <summary>Obtiene la ruta de HTTP.</summary>
      <returns>La ruta de HTTP.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.IHttpVirtualPathData.VirtualPath">
      <summary>Obtiene el URI que representa la ruta de acceso virtual de la ruta de HTTP actual.</summary>
      <returns>URI que representa la ruta de acceso virtual de la ruta de HTTP actual.</returns>
    </member>
    <member name="T:System.Web.Http.Routing.UrlHelper">
      <summary>No se actualizará ningún contenido aquí; no agregue material aquí.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.UrlHelper.#ctor(System.Net.Http.HttpRequestMessage)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Http.Routing.UrlHelper" />.</summary>
      <param name="request">Solicitud HTTP para esta instancia.</param>
    </member>
    <member name="M:System.Web.Http.Routing.UrlHelper.Link(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve un vínculo para la ruta especificada.</summary>
      <returns>Vínculo para la ruta especificada.</returns>
      <param name="routeName">Nombre de la ruta.</param>
      <param name="routeValues">Objeto que contiene los parámetros de una ruta.</param>
    </member>
    <member name="M:System.Web.Http.Routing.UrlHelper.Link(System.String,System.Object)">
      <summary>Devuelve un vínculo para la ruta especificada.</summary>
      <returns>Vínculo para la ruta especificada.</returns>
      <param name="routeName">Nombre de la ruta.</param>
      <param name="routeValues">Valor de ruta.</param>
    </member>
    <member name="P:System.Web.Http.Routing.UrlHelper.Request">
      <summary>Obtiene o establece el elemento <see cref="T:System.Net.Http.HttpRequestMessage" /> de la instancia <see cref="T:System.Web.Http.Routing.UrlHelper" /> actual.</summary>
      <returns>El elemento <see cref="T:System.Net.Http.HttpRequestMessage" /> de la instancia actual.</returns>
    </member>
    <member name="M:System.Web.Http.Routing.UrlHelper.Route(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve la ruta para el elemento <see cref="T:System.Web.Http.Routing.UrlHelper" />.</summary>
      <returns>Ruta para el elemento <see cref="T:System.Web.Http.Routing.UrlHelper" />.</returns>
      <param name="routeName">Nombre de la ruta.</param>
      <param name="routeValues">Lista de los valores de ruta.</param>
    </member>
    <member name="M:System.Web.Http.Routing.UrlHelper.Route(System.String,System.Object)">
      <summary>Devuelve la ruta para el elemento <see cref="T:System.Web.Http.Routing.UrlHelper" />.</summary>
      <returns>Ruta para el elemento <see cref="T:System.Web.Http.Routing.UrlHelper" />.</returns>
      <param name="routeName">Nombre de la ruta.</param>
      <param name="routeValues">Valores de ruta.</param>
    </member>
    <member name="T:System.Web.Http.Services.DefaultServices">
      <summary>  Representa un contenedor para instancias de servicios usadas por <see cref="T:System.Web.Http.HttpConfiguration" />. Tenga en cuenta que este contenedor solo admite tipos conocidos, y los métodos para obtener o establecer tipos de servicio arbitrariios lanzarán <see cref="T:System.ArgumentException" /> cuando se les llame. Para la creación de tipos arbitrarios, use <see cref="T:System.Web.Http.Dependencies.IDependencyResolver" /> en su lugar. Los tipos admitidos para este contenedor son:        <see cref="T:System.Web.Http.Controllers.IActionValueBinder" /><see cref="T:System.Web.Http.Description.IApiExplorer" /><see cref="T:System.Web.Http.Dispatcher.IAssembliesResolver" /><see cref="T:System.Web.Http.Validation.IBodyModelValidator" /><see cref="T:System.Net.Http.Formatting.IContentNegotiator" /><see cref="T:System.Web.Http.Description.IDocumentationProvider" /><see cref="T:System.Web.Http.Filters.IFilterProvider" /><see cref="T:System.Web.Http.Hosting.IHostBufferPolicySelector" /><see cref="T:System.Web.Http.Controllers.IHttpActionInvoker" /><see cref="T:System.Web.Http.Controllers.IHttpActionSelector" /><see cref="T:System.Web.Http.Dispatcher.IHttpControllerActivator" /><see cref="T:System.Web.Http.Dispatcher.IHttpControllerSelector" /><see cref="T:System.Web.Http.Dispatcher.IHttpControllerTypeResolver" /><see cref="T:System.Web.Http.Tracing.ITraceManager" /><see cref="T:System.Web.Http.Tracing.ITraceWriter" /><see cref="T:System.Web.Http.Query.IStructuredQueryBuilder" /><see cref="T:System.Web.Http.ModelBinding.ModelBinderProvider" /><see cref="T:System.Web.Http.Metadata.ModelMetadataProvider" /><see cref="T:System.Web.Http.Validation.ModelValidatorProvider" /><see cref="T:System.Web.Http.ValueProviders.ValueProviderFactory" />Si se pasa cualquier tipo distinto a cualquier método de esta interfaz, se lanzará una <see cref="T:System.ArgumentException" />. </summary>
    </member>
    <member name="M:System.Web.Http.Services.DefaultServices.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Services.DefaultServices" />.</summary>
    </member>
    <member name="M:System.Web.Http.Services.DefaultServices.#ctor(System.Web.Http.HttpConfiguration)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Http.Services.DefaultServices" /> con un objeto <see cref="T:System.Web.Http.HttpConfiguration" /> especificado.</summary>
      <param name="configuration">Objeto <see cref="T:System.Web.Http.HttpConfiguration" />.</param>
    </member>
    <member name="M:System.Web.Http.Services.DefaultServices.ClearSingle(System.Type)">
      <summary>Quita un servicio de instancia única de los servicios predeterminados.</summary>
      <param name="serviceType">Tipo de servicio.</param>
    </member>
    <member name="M:System.Web.Http.Services.DefaultServices.Dispose">
      <summary>Realiza tareas definidas por aplicación asociadas con liberar o restablecer recursos no administrados.</summary>
    </member>
    <member name="M:System.Web.Http.Services.DefaultServices.GetService(System.Type)">
      <summary>Obtiene un servicio del tipo especificado.</summary>
      <returns>La primera instancia del servicio o null si no se encuentra el servicio.</returns>
      <param name="serviceType">El tipo de servicio.</param>
    </member>
    <member name="M:System.Web.Http.Services.DefaultServices.GetServiceInstances(System.Type)">
      <summary>Obtiene la lista de objetos de servicio de un tipo de servicio dado y valida el tipo de servicio.</summary>
      <returns>La lista de objetos de servicio del tipo especificado.</returns>
      <param name="serviceType">El tipo de servicio.</param>
    </member>
    <member name="M:System.Web.Http.Services.DefaultServices.GetServices(System.Type)">
      <summary>Obtiene una lista de objetos de servicio de un tipo de servicio dado.</summary>
      <returns>La lista de objetos de servicio del tipo especificado o una lista vacía si no se encuentra el servicio.</returns>
      <param name="serviceType">El tipo de servicio.</param>
    </member>
    <member name="M:System.Web.Http.Services.DefaultServices.IsSingleService(System.Type)">
      <summary>Consulta si el tipo de servicio es de instancia única.</summary>
      <returns>true si el tipo de servicio tiene al menos una instancia o false si el tipo de servicio admite varias instancias.</returns>
      <param name="serviceType">El tipo de servicio.</param>
    </member>
    <member name="M:System.Web.Http.Services.DefaultServices.ReplaceSingle(System.Type,System.Object)">
      <summary>Reemplaza un objeto de servicio de instancia única.</summary>
      <param name="serviceType">El tipo de servicio.</param>
      <param name="service">El objeto de servicio que reemplaza la instancia anterior.</param>
    </member>
    <member name="M:System.Web.Http.Services.DefaultServices.ResetCache(System.Type)">
      <summary>Quita los valores almacenados en caché de un tipo de servicio único.</summary>
      <param name="serviceType">El tipo de servicio.</param>
    </member>
    <member name="T:System.Web.Http.Tracing.ITraceManager">
      <summary>Representa una clase de seguimiento de rendimiento para registrar la entrada/salida y la duración del método.</summary>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceManager.Initialize(System.Web.Http.HttpConfiguration)">
      <summary>Inicializa la clase <see cref="T:System.Web.Http.Tracing.ITraceManager" /> con una configuración especificada.</summary>
      <param name="configuration">Configuración.</param>
    </member>
    <member name="T:System.Web.Http.Tracing.ITraceWriter">
      <summary>Representa el escritor de seguimiento.</summary>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriter.Trace(System.Net.Http.HttpRequestMessage,System.String,System.Web.Http.Tracing.TraceLevel,System.Action{System.Web.Http.Tracing.TraceRecord})">
      <summary> Invoca la traceAction especificada para permitir valores de configuración en un nuevo <see cref="T:System.Web.Http.Tracing.TraceRecord" /> si y sólo si el seguimiento está permitido en la categoría y el nivel determinados. </summary>
      <param name="request">El <see cref="T:System.Net.Http.HttpRequestMessage" /> actual.   Podría ser null pero al realizarlo se evitará que los análisis de seguimiento posteriores sean correlativos del seguimiento a una solicitud particular.</param>
      <param name="category">Categoría lógica para el seguimiento.  Los usuarios pueden definir el suyo propio.</param>
      <param name="level">El <see cref="T:System.Web.Http.Tracing.TraceLevel" /> en el que escribir este seguimiento.</param>
      <param name="traceAction">La acción que se invocará si el seguimiento está habilitado.  Se espera que la persona que llama complete los campos del <see cref="T:System.Web.Http.Tracing.TraceRecord" /> determinado en esta acción.</param>
    </member>
    <member name="T:System.Web.Http.Tracing.ITraceWriterExtensions">
      <summary>Representa métodos de extensión para <see cref="T:System.Web.Http.Tracing.ITraceWriter" />. </summary>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Debug(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Exception)">
      <summary>Proporciona un conjunto de métodos y propiedades que ayudan a depurar el código con el escritor, la solicitud, la categoría y la excepción especificados.</summary>
      <param name="traceWriter">La <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">El <see cref="T:System.Net.Http.HttpRequestMessage" /> con el que se asociará el seguimiento. Podría ser null.</param>
      <param name="category">Categoría lógica del seguimiento.</param>
      <param name="exception">Error que se produjo durante la ejecución.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Debug(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Exception,System.String,System.Object[])">
      <summary>Proporciona un conjunto de métodos y propiedades que ayudan a depurar el código con el escritor, la solicitud, la categoría, la excepción, el formato de mensaje y el argumento especificados.</summary>
      <param name="traceWriter">La <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">El <see cref="T:System.Net.Http.HttpRequestMessage" /> con el que se asociará el seguimiento. Podría ser null.</param>
      <param name="category">Categoría lógica del seguimiento.</param>
      <param name="exception">Error que se produjo durante la ejecución.</param>
      <param name="messageFormat">Formato del mensaje.</param>
      <param name="messageArguments">Argumento del mensaje.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Debug(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.String,System.Object[])">
      <summary>Proporciona un conjunto de métodos y propiedades que ayudan a depurar el código con el escritor, la solicitud, la categoría, la excepción, el formato de mensaje y el argumento especificados.</summary>
      <param name="traceWriter">La <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">El <see cref="T:System.Net.Http.HttpRequestMessage" /> con el que se asociará el seguimiento. Podría ser null.</param>
      <param name="category">Categoría lógica del seguimiento.</param>
      <param name="messageFormat">Formato del mensaje.</param>
      <param name="messageArguments">Argumento del mensaje.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Error(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Exception)">
      <summary>Muestra un mensaje de error en la lista con el escritor, la solicitud, la categoría y la excepción especificados.</summary>
      <param name="traceWriter">La <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">El <see cref="T:System.Net.Http.HttpRequestMessage" /> con el que se asociará el seguimiento. Podría ser null.</param>
      <param name="category">Categoría lógica del seguimiento.</param>
      <param name="exception">Error que se produjo durante la ejecución.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Error(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Exception,System.String,System.Object[])">
      <summary>Muestra un mensaje de error en la lista con el escritor, la solicitud, la categoría, la excepción, el formato del mensaje y el argumento especificados.</summary>
      <param name="traceWriter">La <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">El <see cref="T:System.Net.Http.HttpRequestMessage" /> con el que se asociará el seguimiento. Podría ser null.</param>
      <param name="category">Categoría lógica del seguimiento.</param>
      <param name="exception">Excepción.</param>
      <param name="messageFormat">Formato del mensaje.</param>
      <param name="messageArguments">Argumento del mensaje.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Error(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.String,System.Object[])">
      <summary>Muestra un mensaje de error en la lista con el escritor, la solicitud, la categoría, el formato del mensaje y el argumento especificados.</summary>
      <param name="traceWriter">La <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">El <see cref="T:System.Net.Http.HttpRequestMessage" /> con el que se asociará el seguimiento. Podría ser null.</param>
      <param name="category">Categoría lógica del seguimiento.</param>
      <param name="messageFormat">Formato del mensaje.</param>
      <param name="messageArguments">Argumento del mensaje.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Fatal(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Exception)">
      <summary>Muestra un mensaje de error en la clasde <see cref="T:System.Web.Http.Tracing.ITraceWriterExtensions" /> lista con el escritor, la solicitud, la categoría y la excepción especificados.</summary>
      <param name="traceWriter">La <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">El <see cref="T:System.Net.Http.HttpRequestMessage" /> con el que se asociará el seguimiento. Podría ser null.</param>
      <param name="category">Categoría lógica del seguimiento.</param>
      <param name="exception">Excepción que aparece durante la ejecución.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Fatal(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Exception,System.String,System.Object[])">
      <summary>Muestra un mensaje de error en la clase <see cref="T:System.Web.Http.Tracing.ITraceWriterExtensions" /> con el escritor, la solicitud, la categoría, la excepción, el formato del mensaje y el argumento especificados.</summary>
      <param name="traceWriter">La <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">El <see cref="T:System.Net.Http.HttpRequestMessage" /> con el que se asociará el seguimiento. Podría ser null.</param>
      <param name="category">Categoría lógica del seguimiento.</param>
      <param name="exception">Excepción.</param>
      <param name="messageFormat">Formato del mensaje.</param>
      <param name="messageArguments">Argumento del mensaje.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Fatal(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.String,System.Object[])">
      <summary>Muestra un mensaje de error en la clase <see cref="T:System.Web.Http.Tracing.ITraceWriterExtensions" /> con el escritor, la solicitud, la categoría, el formato del mensaje y el argumento especificados.</summary>
      <param name="traceWriter">La <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">El <see cref="T:System.Net.Http.HttpRequestMessage" /> con el que se asociará el seguimiento. Podría ser null.</param>
      <param name="category">Categoría lógica del seguimiento.</param>
      <param name="messageFormat">Formato del mensaje.</param>
      <param name="messageArguments">Argumento del mensaje.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Info(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Exception)">
      <summary>Muestra los detalles de <see cref="System.Web.Http.Tracing.ITraceWriterExtensions" />.</summary>
      <param name="traceWriter">La <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">El <see cref="T:System.Net.Http.HttpRequestMessage" /> con el que se asociará el seguimiento. Podría ser null.</param>
      <param name="category">Categoría lógica del seguimiento.</param>
      <param name="exception">Error que se produjo durante la ejecución.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Info(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Exception,System.String,System.Object[])">
      <summary>Muestra los detalles de <see cref="System.Web.Http.Tracing.ITraceWriterExtensions" />.</summary>
      <param name="traceWriter">La <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">El <see cref="T:System.Net.Http.HttpRequestMessage" /> con el que se asociará el seguimiento. Podría ser null.</param>
      <param name="category">Categoría lógica del seguimiento.</param>
      <param name="exception">Error que se produjo durante la ejecución.</param>
      <param name="messageFormat">Formato del mensaje.</param>
      <param name="messageArguments">Argumento del mensaje.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Info(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.String,System.Object[])">
      <summary>Muestra los detalles de <see cref="System.Web.Http.Tracing.ITraceWriterExtensions" />.</summary>
      <param name="traceWriter">La <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">El <see cref="T:System.Net.Http.HttpRequestMessage" /> con el que se asociará el seguimiento. Podría ser null.</param>
      <param name="category">Categoría lógica del seguimiento.</param>
      <param name="messageFormat">Formato del mensaje.</param>
      <param name="messageArguments">Argumento del mensaje.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Trace(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Web.Http.Tracing.TraceLevel,System.Exception)">
      <summary>Indica los listeners de seguimiento en la colección de Listeners.</summary>
      <param name="traceWriter">La <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">El <see cref="T:System.Net.Http.HttpRequestMessage" /> con el que se asociará el seguimiento. Podría ser null.</param>
      <param name="category">Categoría lógica del seguimiento.</param>
      <param name="level">El nivel de seguimiento.</param>
      <param name="exception">Error que se produjo durante la ejecución.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Trace(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Web.Http.Tracing.TraceLevel,System.Exception,System.String,System.Object[])">
      <summary>Indica los listeners de seguimiento en la colección de Listeners.</summary>
      <param name="traceWriter">La <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">El <see cref="T:System.Net.Http.HttpRequestMessage" /> con el que se asociará el seguimiento. Podría ser null.</param>
      <param name="category">Categoría lógica del seguimiento.</param>
      <param name="level">El nivel de seguimiento.</param>
      <param name="exception">Error que se produjo durante la ejecución.</param>
      <param name="messageFormat">Formato del mensaje.</param>
      <param name="messageArguments">Argumento del mensaje.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Trace(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Web.Http.Tracing.TraceLevel,System.String,System.Object[])">
      <summary>Indica los listeners de seguimiento en la colección de Listeners.</summary>
      <param name="traceWriter">La <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">El <see cref="T:System.Net.Http.HttpRequestMessage" /> con el que se asociará el seguimiento. Podría ser null.</param>
      <param name="category">Categoría lógica del seguimiento.</param>
      <param name="level">El <see cref="T:System.Web.Http.Tracing.TraceLevel" /> del seguimiento.</param>
      <param name="messageFormat">Formato del mensaje.</param>
      <param name="messageArguments">Argumento del mensaje.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.TraceBeginEnd(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Web.Http.Tracing.TraceLevel,System.String,System.String,System.Action{System.Web.Http.Tracing.TraceRecord},System.Action,System.Action{System.Web.Http.Tracing.TraceRecord},System.Action{System.Web.Http.Tracing.TraceRecord})">
      <summary>Rastrea un seguimiento tanto de inicio como de fin con respecto a una operación especificada.</summary>
      <param name="traceWriter">La <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">El <see cref="T:System.Net.Http.HttpRequestMessage" /> con el que se asociará el seguimiento.  Podría ser null.</param>
      <param name="category">Categoría lógica del seguimiento.</param>
      <param name="level">El <see cref="T:System.Web.Http.Tracing.TraceLevel" /> del seguimiento.</param>
      <param name="operatorName">Nombre del objeto que realiza la operación. Podría ser null.</param>
      <param name="operationName">Nombre de la operación que se está realizando.  Podría ser null.</param>
      <param name="beginTrace">La <see cref="T:System.Action" /> que se invocará antes de realizar la operación, permitiendo que se complete el <see cref="T:System.Web.Http.Tracing.TraceRecord" /> dado. Podría ser null.</param>
      <param name="execute">Un &lt;see cref="T:System.Func`1" /&gt; que devuelve la <see cref="T:System.Threading.Tasks.Task" /> que realizará la operación.</param>
      <param name="endTrace">La <see cref="T:System.Action" /> que se invocará después de realizar correctamente la operación, permitiendo que se complete el <see cref="T:System.Web.Http.Tracing.TraceRecord" /> dado. Podría ser null.</param>
      <param name="errorTrace">La <see cref="T:System.Action" /> que se invocará si se produjera un error al realizar la operación, permitiendo que se complete el <see cref="T:System.Web.Http.Tracing.TraceRecord" /> dado. Podría ser null.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.TraceBeginEndAsync``1(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Web.Http.Tracing.TraceLevel,System.String,System.String,System.Action{System.Web.Http.Tracing.TraceRecord},System.Func{System.Threading.Tasks.Task{``0}},System.Action{System.Web.Http.Tracing.TraceRecord,``0},System.Action{System.Web.Http.Tracing.TraceRecord})">
      <summary> Rastrea un seguimiento tanto de inicio como de fin con respecto a una operación especificada. </summary>
      <returns>La <see cref="T:System.Threading.Tasks.Task" /> devuelta por la operación.</returns>
      <param name="traceWriter">La <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">El <see cref="T:System.Net.Http.HttpRequestMessage" /> con el que se asociará el seguimiento. Podría ser null.</param>
      <param name="category">Categoría lógica del seguimiento.</param>
      <param name="level">El <see cref="T:System.Web.Http.Tracing.TraceLevel" /> del seguimiento.</param>
      <param name="operatorName">Nombre del objeto que realiza la operación. Podría ser null.</param>
      <param name="operationName">Nombre de la operación que se está realizando. Podría ser null.</param>
      <param name="beginTrace">La <see cref="T:System.Action" /> que se invocará antes de realizar la operación, permitiendo que se complete el <see cref="T:System.Web.Http.Tracing.TraceRecord" /> dado. Podría ser null.</param>
      <param name="execute">Un &lt;see cref="T:System.Func`1" /&gt; que devuelve la <see cref="T:System.Threading.Tasks.Task" /> que realizará la operación.</param>
      <param name="endTrace">La <see cref="T:System.Action" /> que se invocará tras realizar correctamente la operación, permitiendo que se complete el <see cref="T:System.Web.Http.Tracing.TraceRecord" /> dado. El resultado de la tarea completada también se pasará a esta acción. Esta acción podría ser null.</param>
      <param name="errorTrace">La <see cref="T:System.Action" /> que se invocará si se produjera un error al realizar la operación, permitiendo que se complete el <see cref="T:System.Web.Http.Tracing.TraceRecord" /> dado. Podría ser null.</param>
      <typeparam name="TResult">Tipo de resultado producido por la <see cref="T:System.Threading.Tasks.Task" />.</typeparam>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.TraceBeginEndAsync(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Web.Http.Tracing.TraceLevel,System.String,System.String,System.Action{System.Web.Http.Tracing.TraceRecord},System.Func{System.Threading.Tasks.Task},System.Action{System.Web.Http.Tracing.TraceRecord},System.Action{System.Web.Http.Tracing.TraceRecord})">
      <summary> Rastrea un seguimiento tanto de inicio como de fin con respecto a una operación especificada. </summary>
      <returns>La <see cref="T:System.Threading.Tasks.Task" /> devuelta por la operación.</returns>
      <param name="traceWriter">La <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">El <see cref="T:System.Net.Http.HttpRequestMessage" /> con el que se asociará el seguimiento.  Podría ser null.</param>
      <param name="category">Categoría lógica del seguimiento.</param>
      <param name="level">El <see cref="T:System.Web.Http.Tracing.TraceLevel" /> del seguimiento.</param>
      <param name="operatorName">Nombre del objeto que realiza la operación. Podría ser null.</param>
      <param name="operationName">Nombre de la operación que se está realizando. Podría ser null.</param>
      <param name="beginTrace">La <see cref="T:System.Action" /> que se invocará antes de realizar la operación, permitiendo que se complete el <see cref="T:System.Web.Http.Tracing.TraceRecord" /> dado. Podría ser null.</param>
      <param name="execute">Un &lt;see cref="T:System.Func`1" /&gt; que devuelve la <see cref="T:System.Threading.Tasks.Task" /> que realizará la operación.</param>
      <param name="endTrace">La <see cref="T:System.Action" /> que se invocará después de realizar correctamente la operación, permitiendo que se complete el <see cref="T:System.Web.Http.Tracing.TraceRecord" /> dado. Podría ser null.</param>
      <param name="errorTrace">La <see cref="T:System.Action" /> que se invocará si se produjera un error al realizar la operación, permitiendo que se complete el <see cref="T:System.Web.Http.Tracing.TraceRecord" /> dado. Podría ser null.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Warn(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Exception)">
      <summary>Indica el nivel de advertencia de la ejecución.</summary>
      <param name="traceWriter">La <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">El <see cref="T:System.Net.Http.HttpRequestMessage" /> con el que se asociará el seguimiento. Podría ser null.</param>
      <param name="category">Categoría lógica del seguimiento.</param>
      <param name="exception">Error que se produjo durante la ejecución.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Warn(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Exception,System.String,System.Object[])">
      <summary>Indica el nivel de advertencia de la ejecución.</summary>
      <param name="traceWriter">La <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">El <see cref="T:System.Net.Http.HttpRequestMessage" /> con el que se asociará el seguimiento. Podría ser null.</param>
      <param name="category">Categoría lógica del seguimiento.</param>
      <param name="exception">Error que se produjo durante la ejecución.</param>
      <param name="messageFormat">Formato del mensaje.</param>
      <param name="messageArguments">Argumento del mensaje.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Warn(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.String,System.Object[])">
      <summary>Indica el nivel de advertencia de la ejecución.</summary>
      <param name="traceWriter">La <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">El <see cref="T:System.Net.Http.HttpRequestMessage" /> con el que se asociará el seguimiento. Podría ser null.</param>
      <param name="category">Categoría lógica del seguimiento.</param>
      <param name="messageFormat">Formato del mensaje.</param>
      <param name="messageArguments">Argumento del mensaje.</param>
    </member>
    <member name="T:System.Web.Http.Tracing.TraceCategories">
      <summary>Especifica una enumeración de categorías de seguimiento.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceCategories.ActionCategory">
      <summary>Una categoría de acción.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceCategories.ControllersCategory">
      <summary>La categoría de controladores.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceCategories.FiltersCategory">
      <summary>La categoría de filtros.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceCategories.FormattingCategory">
      <summary>La categoría de formato.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceCategories.MessageHandlersCategory">
      <summary>La categoría de controladores de mensaje.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceCategories.ModelBindingCategory">
      <summary>La categoría de enlace de modelos.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceCategories.RequestCategory">
      <summary>La categoría de solicitud.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceCategories.RoutingCategory">
      <summary>La categoría de enrutamiento.</summary>
    </member>
    <member name="T:System.Web.Http.Tracing.TraceKind">
      <summary>Especifica el tipo de operación de seguimiento.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceKind.Trace">
      <summary>Seguimiento único, no es parte de un par de seguimiento Inicio/Fin.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceKind.Begin">
      <summary>Seguimiento que marca el inicio de alguna operación.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceKind.End">
      <summary>Seguimiento que marca el fin de alguna operación.</summary>
    </member>
    <member name="T:System.Web.Http.Tracing.TraceLevel">
      <summary>Especifica una enumeración de nivel de seguimiento.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceLevel.Off">
      <summary>El seguimiento está deshabilitado.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceLevel.Debug">
      <summary>El nivel de seguimiento para seguimientos de depuración.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceLevel.Info">
      <summary>El nivel de seguimiento para seguimientos informativos.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceLevel.Warn">
      <summary>El nivel de seguimiento para seguimientos de advertencia.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceLevel.Error">
      <summary>El nivel de seguimiento para seguimientos de errores.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceLevel.Fatal">
      <summary>El nivel de seguimiento para seguimientos críticos.</summary>
    </member>
    <member name="T:System.Web.Http.Tracing.TraceRecord">
      <summary>Representa un registro de seguimiento.</summary>
    </member>
    <member name="M:System.Web.Http.Tracing.TraceRecord.#ctor(System.Net.Http.HttpRequestMessage,System.String,System.Web.Http.Tracing.TraceLevel)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Tracing.TraceRecord" />.</summary>
      <param name="request">La solicitud de mensaje.</param>
      <param name="category">Categoría de seguimiento.</param>
      <param name="level">El nivel de seguimiento.</param>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.Category">
      <summary>Obtiene o establece la categoría de seguimiento.</summary>
      <returns>La categoría de seguimiento.</returns>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.Exception">
      <summary>Obtiene o establece la excepción.</summary>
      <returns>Excepción.</returns>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.Kind">
      <summary>Obtiene o establece el tipo de seguimiento.</summary>
      <returns>El tipo de seguimiento.</returns>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.Level">
      <summary>Obtiene o establece el nivel de seguimiento.</summary>
      <returns>El nivel de seguimiento.</returns>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.Message">
      <summary>Obtiene o establece el mensaje.</summary>
      <returns>Mensaje.</returns>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.Operation">
      <summary>Obtiene o establece el nombre de la operación lógica que se está realizando.</summary>
      <returns>El nombre de la operación lógica que se está realizando.</returns>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.Operator">
      <summary>Obtiene o establece el nombre lógico del objeto que está realizando la operación.</summary>
      <returns>El nombre lógico del objeto que realiza la operación.</returns>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.Properties">
      <summary>Obtiene las propiedades opcionales definidas por el usuario.</summary>
      <returns>Las propiedades opcionales definidas por el usuario.</returns>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.Request">
      <summary>Obtiene el elemento <see cref="T:System.Net.Http.HttpRequestMessage" /> del registro.</summary>
      <returns>El elemento <see cref="T:System.Net.Http.HttpRequestMessage" /> del registro.</returns>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.RequestId">
      <summary>Obtiene el Id. de correlación desde la <see cref="P:System.Web.Http.Tracing.TraceRecord.Request" />.</summary>
      <returns>El identificador de correlación del elemento <see cref="P:System.Web.Http.Tracing.TraceRecord.Request" />.</returns>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.Status">
      <summary>Obtiene o establece el <see cref="T:System.Net.HttpStatusCode" /> asociado con el <see cref="T:System.Net.Http.HttpResponseMessage" />.</summary>
      <returns>El elemento <see cref="T:System.Net.HttpStatusCode" /> asociado con el elemento <see cref="T:System.Net.Http.HttpResponseMessage" />.</returns>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.Timestamp">
      <summary>Obtiene el elemento <see cref="T:System.DateTime" /> de este seguimiento (mediante <see cref="P:System.DateTime.UtcNow" />).</summary>
      <returns>El elemento <see cref="T:System.DateTime" /> de este seguimiento (mediante <see cref="P:System.DateTime.UtcNow" />).</returns>
    </member>
    <member name="T:System.Web.Http.Validation.DefaultBodyModelValidator">
      <summary>Representa una clase usada para validar un objeto de manera recursiva.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.DefaultBodyModelValidator.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Validation.DefaultBodyModelValidator" />.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.DefaultBodyModelValidator.Validate(System.Object,System.Type,System.Web.Http.Metadata.ModelMetadataProvider,System.Web.Http.Controllers.HttpActionContext,System.String)">
      <summary> Determina si el modelo es válido y agrega cualquier error de validación al <see cref="T:System.Web.Http.ModelBinding.ModelStateDictionary" /> del actionContext.</summary>
      <returns>True si el modelo es válido, false de lo contrario.</returns>
      <param name="model">El modelo que se va a validar.</param>
      <param name="type">El <see cref="T:System.Type" /> que se utilizará para la validación.</param>
      <param name="metadataProvider">El <see cref="T:System.Web.Http.Metadata.ModelMetadataProvider" /> utilizado para proporcionar los metadatos del modelo.</param>
      <param name="actionContext">
        <see cref="T:System.Web.Http.Controllers.HttpActionContext" /> en el que se está validando el modelo.</param>
      <param name="keyPrefix">La <see cref="T:System.String" /> que se anexará a la clave para cualquier error de validación.</param>
    </member>
    <member name="T:System.Web.Http.Validation.IBodyModelValidator">
      <summary>Representa una interfaz para la validación de los modelos</summary>
    </member>
    <member name="M:System.Web.Http.Validation.IBodyModelValidator.Validate(System.Object,System.Type,System.Web.Http.Metadata.ModelMetadataProvider,System.Web.Http.Controllers.HttpActionContext,System.String)">
      <summary> Determina si el modelo es válido y agrega cualquier error de validación al <see cref="T:System.Web.Http.ModelBinding.ModelStateDictionary" /> del actionContext.</summary>
      <returns>true si el modelo es válido, false de lo contrario.</returns>
      <param name="model">El modelo que se va a validar.</param>
      <param name="type">El <see cref="T:System.Type" /> que se utilizará para la validación.</param>
      <param name="metadataProvider">El <see cref="T:System.Web.Http.Metadata.ModelMetadataProvider" /> utilizado para proporcionar los metadatos del modelo.</param>
      <param name="actionContext">
        <see cref="T:System.Web.Http.Controllers.HttpActionContext" /> en el que se está validando el modelo.</param>
      <param name="keyPrefix">La <see cref="T:System.String" /> que se anexará a la clave para cualquier error de validación.</param>
    </member>
    <member name="T:System.Web.Http.Validation.ModelStateFormatterLogger">
      <summary>Este <see cref="T:System.Net.Http.Formatting.IFormatterLogger" /> registra los errores del formateador al <see cref="T:System.Web.Http.ModelBinding.ModelStateDictionary" /> proporcionado.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.ModelStateFormatterLogger.#ctor(System.Web.Http.ModelBinding.ModelStateDictionary,System.String)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Validation.ModelStateFormatterLogger" />.</summary>
      <param name="modelState">Estado del modelo.</param>
      <param name="prefix">Prefijo.</param>
    </member>
    <member name="M:System.Web.Http.Validation.ModelStateFormatterLogger.LogError(System.String,System.Exception)">
      <summary>Registra el error del modelo especificado.</summary>
      <param name="errorPath">Ruta de acceso del error.</param>
      <param name="exception">Mensaje de error.</param>
    </member>
    <member name="M:System.Web.Http.Validation.ModelStateFormatterLogger.LogError(System.String,System.String)">
      <summary>Registra el error del modelo especificado.</summary>
      <param name="errorPath">Ruta de acceso del error.</param>
      <param name="errorMessage">Mensaje de error.</param>
    </member>
    <member name="T:System.Web.Http.Validation.ModelValidatedEventArgs">
      <summary>Proporciona datos para el evento <see cref="E:System.Web.Http.Validation.ModelValidationNode.Validated" />.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidatedEventArgs.#ctor(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.Validation.ModelValidationNode)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Validation.ModelValidatedEventArgs" />.</summary>
      <param name="actionContext">Contexto de acción.</param>
      <param name="parentNode">Nodo primario.</param>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidatedEventArgs.ActionContext">
      <summary>Obtiene o establece el contexto para una acción.</summary>
      <returns>Contexto para una acción.</returns>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidatedEventArgs.ParentNode">
      <summary>Obtiene o establece lo primario de este nodo.</summary>
      <returns>Lo primario de este nodo.</returns>
    </member>
    <member name="T:System.Web.Http.Validation.ModelValidatingEventArgs">
      <summary>Proporciona datos para el evento <see cref="E:System.Web.Http.Validation.ModelValidationNode.Validating" />.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidatingEventArgs.#ctor(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.Validation.ModelValidationNode)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Validation.ModelValidatingEventArgs" />.</summary>
      <param name="actionContext">Contexto de acción.</param>
      <param name="parentNode">Nodo primario.</param>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidatingEventArgs.ActionContext">
      <summary>Obtiene o establece el contexto para una acción.</summary>
      <returns>Contexto para una acción.</returns>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidatingEventArgs.ParentNode">
      <summary>Obtiene o establece lo primario de este nodo.</summary>
      <returns>Lo primario de este nodo.</returns>
    </member>
    <member name="T:System.Web.Http.Validation.ModelValidationNode">
      <summary>Proporciona un contenedor para la información de validación de modelos.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidationNode.#ctor(System.Web.Http.Metadata.ModelMetadata,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Http.Validation.ModelValidationNode" />, utilizando la clave de estado y los metadatos del modelo.</summary>
      <param name="modelMetadata">Metadatos del modelo.</param>
      <param name="modelStateKey">Clave de estado del modelo.</param>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidationNode.#ctor(System.Web.Http.Metadata.ModelMetadata,System.String,System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidationNode})">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Http.Validation.ModelValidationNode" />, utilizando la clave de estado del modelo, los metadatos del modelo y los nodos de validación del modelo secundarios.</summary>
      <param name="modelMetadata">Metadatos del modelo.</param>
      <param name="modelStateKey">Clave de estado del modelo.</param>
      <param name="childNodes">Nodos secundarios del modelo.</param>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidationNode.ChildNodes">
      <summary>Obtiene o establece los nodos secundarios.</summary>
      <returns>Nodos secundarios.</returns>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidationNode.CombineWith(System.Web.Http.Validation.ModelValidationNode)">
      <summary>Combina la instancia <see cref="T:System.Web.Http.Validation.ModelValidationNode" /> actual con una instancia <see cref="T:System.Web.Http.Validation.ModelValidationNode" /> especificada.</summary>
      <param name="otherNode">El nodo de validación del modelo para combinar con la instancia actual.</param>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidationNode.ModelMetadata">
      <summary>Obtiene o establece los metadatos del modelo.</summary>
      <returns>Metadatos del modelo.</returns>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidationNode.ModelStateKey">
      <summary>Obtiene o establece la clave de estado del modelo.</summary>
      <returns>Clave de estado del modelo.</returns>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidationNode.SuppressValidation">
      <summary>Obtiene o establece un valor que indica si se debería suprimir la validación.</summary>
      <returns>true si la validación debería suprimirse; en caso contrario, false.</returns>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidationNode.Validate(System.Web.Http.Controllers.HttpActionContext)">
      <summary>Valida el modelo utilizando el contexto de ejecución especificado.</summary>
      <param name="actionContext">Contexto de acción.</param>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidationNode.Validate(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.Validation.ModelValidationNode)">
      <summary>Valida el modelo utilizando el contexto de ejecución especificado y el nodo principal.</summary>
      <param name="actionContext">Contexto de acción.</param>
      <param name="parentNode">Nodo primario.</param>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidationNode.ValidateAllProperties">
      <summary>Obtiene o establece un valor que indica si todas las propiedades del modelo deberían validarse.</summary>
      <returns>true si todas las propiedades del modelo deberían validarse o false si la validación debería saltearse.</returns>
    </member>
    <member name="E:System.Web.Http.Validation.ModelValidationNode.Validated">
      <summary>Se produce cuando el modelo ha sido validado.</summary>
    </member>
    <member name="E:System.Web.Http.Validation.ModelValidationNode.Validating">
      <summary>Se produce cuando el modelo se está validando.</summary>
    </member>
    <member name="T:System.Web.Http.Validation.ModelValidationRequiredMemberSelector">
      <summary>Representa la selección de miembros requeridos al comprobar si existen ModelValidators requeridos asociados con el miembro.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidationRequiredMemberSelector.#ctor(System.Web.Http.Metadata.ModelMetadataProvider,System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider})">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Validation.ModelValidationRequiredMemberSelector" />.</summary>
      <param name="metadataProvider">Proveedor de metadatos.</param>
      <param name="validatorProviders">Los proveedores del validador.</param>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidationRequiredMemberSelector.IsRequiredMember(System.Reflection.MemberInfo)">
      <summary>Indica si el miembro es necesario para la validación.</summary>
      <returns>true si el miembro es requerido para la validación; en caso contrario, false.</returns>
      <param name="member">El miembro.</param>
    </member>
    <member name="T:System.Web.Http.Validation.ModelValidationResult">
      <summary>Proporciona un contenedor para un resultado de la validación.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidationResult.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Validation.ModelValidationResult" />.</summary>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidationResult.MemberName">
      <summary>Obtiene o establece el nombre del miembro.</summary>
      <returns>Nombre del miembro.</returns>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidationResult.Message">
      <summary>Obtiene o establece el mensaje de resultado de la validación.</summary>
      <returns>Mensaje de resultado de la validación.</returns>
    </member>
    <member name="T:System.Web.Http.Validation.ModelValidator">
      <summary>Proporciona una clase base para implementar la lógica de validación.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidator.#ctor(System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider})">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Validation.ModelValidator" />.</summary>
      <param name="validatorProviders">Los proveedores del validador.</param>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidator.GetModelValidator(System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider})">
      <summary>Devuelve un validador de modelo compuesto para el modelo.</summary>
      <returns>Un validador de modelo compuesto para el modelo.</returns>
      <param name="validatorProviders">Enumeración de proveedores del validador.</param>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidator.IsRequired">
      <summary>Obtiene un valor que indica si una propiedad de modelo es necesaria.</summary>
      <returns>true si la propiedad del modelo es requerida; en caso contrario, false.</returns>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidator.Validate(System.Web.Http.Metadata.ModelMetadata,System.Object)">
      <summary>Valida un objeto especificado.</summary>
      <returns>Una lista de resultados de la validación.</returns>
      <param name="metadata">Metadatos.</param>
      <param name="container">Contenedor.</param>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidator.ValidatorProviders">
      <summary>Obtiene o establece una enumeración de proveedores del validador.</summary>
      <returns>Enumeración de proveedores del validador.</returns>
    </member>
    <member name="T:System.Web.Http.Validation.ModelValidatorProvider">
      <summary>Proporciona una lista de validadores para un modelo.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidatorProvider.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Validation.ModelValidatorProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidatorProvider.GetValidators(System.Web.Http.Metadata.ModelMetadata,System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider})">
      <summary>Obtiene una lista de validadores asociados con este <see cref="T:System.Web.Http.Validation.ModelValidatorProvider" />.</summary>
      <returns>La lista de validadores.</returns>
      <param name="metadata">Metadatos.</param>
      <param name="validatorProviders">Los proveedores del validador.</param>
    </member>
    <member name="T:System.Web.Http.Validation.Providers.AssociatedValidatorProvider">
      <summary>Proporciona una clase abstracta para las clases que implementan un proveedor de validación.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.AssociatedValidatorProvider.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Validation.Providers.AssociatedValidatorProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.AssociatedValidatorProvider.GetTypeDescriptor(System.Type)">
      <summary>Obtiene un descriptor de tipos para el tipo especificado.</summary>
      <returns>Un descriptor de tipos para el tipo especificado.</returns>
      <param name="type">Tipo del proveedor de validación.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.AssociatedValidatorProvider.GetValidators(System.Web.Http.Metadata.ModelMetadata,System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider})">
      <summary>Obtiene los validadores del modelo mediante los metadatos y los proveedores de validador.</summary>
      <returns>Los validadores del modelo.</returns>
      <param name="metadata">Metadatos.</param>
      <param name="validatorProviders">Una enumeración de proveedores de validador.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.AssociatedValidatorProvider.GetValidators(System.Web.Http.Metadata.ModelMetadata,System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider},System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>Obtiene los validadores del modelo mediante los metadatos, los proveedores de validador y una lista de atributos.</summary>
      <returns>Los validadores del modelo.</returns>
      <param name="metadata">Metadatos.</param>
      <param name="validatorProviders">Una enumeración de proveedores de validador.</param>
      <param name="attributes">Lista de atributos.</param>
    </member>
    <member name="T:System.Web.Http.Validation.Providers.DataAnnotationsModelValidationFactory">
      <summary>Representa el método que crea una instancia de <see cref="T:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider" />.</summary>
    </member>
    <member name="T:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider">
      <summary>Representa una implementación de <see cref="T:System.Web.Http.Validation.ModelValidatorProvider" /> de validadores de proveedor para los atributos derivados de <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" />. También proporciona un validador para tipos que implementan <see cref="T:System.ComponentModel.DataAnnotations.IValidatableObject" />. Para que sea compatible la validación del lado cliente, puede registrar adaptadores a través de los métodos estáticos de esta clase o haciendo que los atributos de validación implementen <see cref="T:System.Web.Http.Validation.IClientValidatable" />. Se implementa la lógica para que sea compatible con IClientValidatable en <see cref="T:System.Web.Http.Validation.Validators.DataAnnotationsModelValidator" />. </summary>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider.GetValidators(System.Web.Http.Metadata.ModelMetadata,System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider},System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>Obtiene los validadores del modelo mediante los metadatos especificados, el proveedor de validador y los atributos.</summary>
      <returns>Los validadores del modelo.</returns>
      <param name="metadata">Metadatos.</param>
      <param name="validatorProviders">Los proveedores del validador.</param>
      <param name="attributes">Atributos.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider.RegisterAdapter(System.Type,System.Type)">
      <summary>Registra un adaptador para proporcionar la validación en el lado cliente.</summary>
      <param name="attributeType">Tipo del atributo de validación.</param>
      <param name="adapterType">Tipo del adaptador.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider.RegisterAdapterFactory(System.Type,System.Web.Http.Validation.Providers.DataAnnotationsModelValidationFactory)">
      <summary>Registra un generador del adaptador para el proveedor de validación.</summary>
      <param name="attributeType">Tipo del atributo.</param>
      <param name="factory">Generador que se usará para crear el objeto <see cref="T:System.Web.Http.Validation.ModelValidator" /> para el atributo especificado.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider.RegisterDefaultAdapter(System.Type)">
      <summary>Registra el adaptador predeterminado.</summary>
      <param name="adapterType">Tipo del adaptador.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider.RegisterDefaultAdapterFactory(System.Web.Http.Validation.Providers.DataAnnotationsModelValidationFactory)">
      <summary>Registra el generador del adaptador predeterminado.</summary>
      <param name="factory">Generador que se usará para crear el objeto <see cref="T:System.Web.Http.Validation.ModelValidator" /> para el adaptador predeterminado.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider.RegisterDefaultValidatableObjectAdapter(System.Type)">
      <summary>Registra el tipo de adaptador predeterminado para objetos que implementan <see cref="T:System.ComponentModel.DataAnnotations.IValidatableObject" />. El tipo de adaptador debe derivar de <see cref="T:System.Web.Http.Validation.ModelValidator" /> y debe contener un constructor público que tome dos tipos de parámetros <see cref="T:System.Web.Http.Metadata.ModelMetadata" /> y <see cref="T:System.Web.Http.Controllers.HttpActionContext" />. </summary>
      <param name="adapterType">Tipo del adaptador.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider.RegisterDefaultValidatableObjectAdapterFactory(System.Web.Http.Validation.Providers.DataAnnotationsValidatableObjectAdapterFactory)">
      <summary>Registra el generador de adaptador predeterminado para objetos que implementan <see cref="T:System.ComponentModel.DataAnnotations.IValidatableObject" />. </summary>
      <param name="factory">Fábrica.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider.RegisterValidatableObjectAdapter(System.Type,System.Type)">
      <summary>Registra el tipo de adaptador para el modelType dado, que debe implementar <see cref="T:System.ComponentModel.DataAnnotations.IValidatableObject" />. El tipo de adaptador debe derivar de <see cref="T:System.Web.Http.Validation.ModelValidator" /> y debe contener un constructor público que tome dos tipos de parámetros <see cref="T:System.Web.Http.Metadata.ModelMetadata" /> y <see cref="T:System.Web.Http.Controllers.HttpActionContext" />. </summary>
      <param name="modelType">Tipo del modelo.</param>
      <param name="adapterType">Tipo del adaptador.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider.RegisterValidatableObjectAdapterFactory(System.Type,System.Web.Http.Validation.Providers.DataAnnotationsValidatableObjectAdapterFactory)">
      <summary>Registra el generador de adaptador para el modelType dado, que debe implementar <see cref="T:System.ComponentModel.DataAnnotations.IValidatableObject" />. </summary>
      <param name="modelType">Tipo del modelo.</param>
      <param name="factory">Fábrica.</param>
    </member>
    <member name="T:System.Web.Http.Validation.Providers.DataAnnotationsValidatableObjectAdapterFactory">
      <summary>Proporciona un generador para los validadores basados en <see cref="T:System.ComponentModel.DataAnnotations.IValidatableObject" />.</summary>
    </member>
    <member name="T:System.Web.Http.Validation.Providers.DataMemberModelValidatorProvider">
      <summary>Representa un proveedor de validadores para el modelo de miembro de datos.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataMemberModelValidatorProvider.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Validation.Providers.DataMemberModelValidatorProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataMemberModelValidatorProvider.GetValidators(System.Web.Http.Metadata.ModelMetadata,System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider},System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>Obtiene los validadores para el modelo.</summary>
      <returns>Los validadores del modelo.</returns>
      <param name="metadata">Metadatos.</param>
      <param name="validatorProviders">Un enumerador de proveedores de validador.</param>
      <param name="attributes">Una lista de atributos.</param>
    </member>
    <member name="T:System.Web.Http.Validation.Providers.InvalidModelValidatorProvider">
      <summary>Una implementación de <see cref="T:System.Web.Http.Validation.ModelValidatorProvider" /> que proporciona validadores que lanzan excepciones cuando el modelo no es válido.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.InvalidModelValidatorProvider.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Http.Validation.Providers.InvalidModelValidatorProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.InvalidModelValidatorProvider.GetValidators(System.Web.Http.Metadata.ModelMetadata,System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider},System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>Obtiene una lista de validadores asociados con este <see cref="T:System.Web.Http.Validation.Providers.InvalidModelValidatorProvider" />.</summary>
      <returns>La lista de validadores.</returns>
      <param name="metadata">Los metadatos.</param>
      <param name="validatorProviders">Los proveedores del validador.</param>
      <param name="attributes">La lista de atributos.</param>
    </member>
    <member name="T:System.Web.Http.Validation.Providers.RequiredMemberModelValidatorProvider">
      <summary>Representa el proveedor para el validador del modelo de miembro necesario.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.RequiredMemberModelValidatorProvider.#ctor(System.Net.Http.Formatting.IRequiredMemberSelector)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Validation.Providers.RequiredMemberModelValidatorProvider" />.</summary>
      <param name="requiredMemberSelector">El selector de miembros necesario.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.RequiredMemberModelValidatorProvider.GetValidators(System.Web.Http.Metadata.ModelMetadata,System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider})">
      <summary>Obtiene el validador para el modelo de miembro.</summary>
      <returns>El validador del modelo de miembro.</returns>
      <param name="metadata">Metadatos.</param>
      <param name="validatorProviders">Los proveedores del validador</param>
    </member>
    <member name="T:System.Web.Http.Validation.Validators.DataAnnotationsModelValidator">
      <summary>Proporciona un validador de modelo.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.Validators.DataAnnotationsModelValidator.#ctor(System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider},System.ComponentModel.DataAnnotations.ValidationAttribute)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Validation.Validators.DataAnnotationsModelValidator" />.</summary>
      <param name="validatorProviders">Los proveedores del validador.</param>
      <param name="attribute">Atributo de validación para el modelo.</param>
    </member>
    <member name="P:System.Web.Http.Validation.Validators.DataAnnotationsModelValidator.Attribute">
      <summary>Obtiene o establece el atributo de validación para el validador del modelo.</summary>
      <returns>Atributo de validación para el validador de modelo.</returns>
    </member>
    <member name="P:System.Web.Http.Validation.Validators.DataAnnotationsModelValidator.IsRequired">
      <summary>Obtiene un valor que indica si la validación del modelo es necesaria.</summary>
      <returns>true si la validación del modelo es requerida; en caso contrario, false.</returns>
    </member>
    <member name="M:System.Web.Http.Validation.Validators.DataAnnotationsModelValidator.Validate(System.Web.Http.Metadata.ModelMetadata,System.Object)">
      <summary>Valida el modelo y devuelve los errores de validación que aparezcan.</summary>
      <returns>Una lista de mensajes de error de validación para el modelo, o una lista vacía si no se produjo ningún error.</returns>
      <param name="metadata">Metadatos del modelo.</param>
      <param name="container">Contenedor para el modelo.</param>
    </member>
    <member name="T:System.Web.Http.Validation.Validators.ErrorModelValidator">
      <summary>Un <see cref="T:System.Web.Http.Validation.ModelValidator" /> para representar un error. Este validador siempre lanzará una excepción, independientemente del valor real del modelo.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.Validators.ErrorModelValidator.#ctor(System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider},System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Http.Validation.Validators.ErrorModelValidator" />.</summary>
      <param name="validatorProviders">La lista de proveedores de validador de modelos.</param>
      <param name="errorMessage">El mensaje de error para la excepción.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Validators.ErrorModelValidator.Validate(System.Web.Http.Metadata.ModelMetadata,System.Object)">
      <summary>Valida un objeto especificado.</summary>
      <returns>Una lista de resultados de la validación.</returns>
      <param name="metadata">Los metadatos.</param>
      <param name="container">El contenedor.</param>
    </member>
    <member name="T:System.Web.Http.Validation.Validators.RequiredMemberModelValidator">
      <summary>Representa el elemento <see cref="T:System.Web.Http.Validation.ModelValidator" /> para miembros requeridos. </summary>
    </member>
    <member name="M:System.Web.Http.Validation.Validators.RequiredMemberModelValidator.#ctor(System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider})">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Validation.Validators.RequiredMemberModelValidator" />.</summary>
      <param name="validatorProviders">Los proveedores del validador.</param>
    </member>
    <member name="P:System.Web.Http.Validation.Validators.RequiredMemberModelValidator.IsRequired">
      <summary>Obtiene o establece un valor que indica al motor de serialización que el miembro debe estar presente durante la validación.</summary>
      <returns>true si el miembro es requerido; en caso contrario, false.</returns>
    </member>
    <member name="M:System.Web.Http.Validation.Validators.RequiredMemberModelValidator.Validate(System.Web.Http.Metadata.ModelMetadata,System.Object)">
      <summary>Valida el objeto.</summary>
      <returns>Una lista de resultados de la validación.</returns>
      <param name="metadata">Metadatos.</param>
      <param name="container">Contenedor.</param>
    </member>
    <member name="T:System.Web.Http.Validation.Validators.ValidatableObjectAdapter">
      <summary>Proporciona un adaptador de objetos que se puede validar.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.Validators.ValidatableObjectAdapter.#ctor(System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider})">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.Validation.Validators.ValidatableObjectAdapter" />.</summary>
      <param name="validatorProviders">Proveedor de validación.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Validators.ValidatableObjectAdapter.Validate(System.Web.Http.Metadata.ModelMetadata,System.Object)">
      <summary>Valida el objeto especificado.</summary>
      <returns>Una lista de resultados de la validación.</returns>
      <param name="metadata">Metadatos.</param>
      <param name="container">Contenedor.</param>
    </member>
    <member name="T:System.Web.Http.ValueProviders.IEnumerableValueProvider">
      <summary>Representa la clase base para los proveedores de valores cuyos valores proceden de una colección que implementa la interfaz <see cref="T:System.Collections.IEnumerable" />.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.IEnumerableValueProvider.GetKeysFromPrefix(System.String)">
      <summary>Recupera claves del <paramref name="prefix" /> especificado.</summary>
      <returns>Claves del <paramref name="prefix" /> especificado.</returns>
      <param name="prefix">Prefijo.</param>
    </member>
    <member name="T:System.Web.Http.ValueProviders.IValueProvider">
      <summary>Define los métodos que se requieren para un proveedor de valores en ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.IValueProvider.ContainsPrefix(System.String)">
      <summary>Determina si la colección contiene el prefijo especificado.</summary>
      <returns>true si la colección contiene el prefijo especificado; de lo contrario, false.</returns>
      <param name="prefix">Prefijo que se va a buscar.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.IValueProvider.GetValue(System.String)">
      <summary>Recupera un objeto de valor usando la clave especificada.</summary>
      <returns>Objeto de valor para la clave especificada.</returns>
      <param name="key">Clave para la que se va a recuperar el objeto de valor.</param>
    </member>
    <member name="T:System.Web.Http.ValueProviders.ValueProviderAttribute">
      <summary> Este atributo se utiliza para especificar un <see cref="T:System.Web.Http.ValueProviders.ValueProviderFactory" /> personalizado. </summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.ValueProviderAttribute.#ctor(System.Type)">
      <summary>Inicializa una nueva instancia de <see cref="T:System.Web.Http.ValueProviders.ValueProviderAttribute" />.</summary>
      <param name="valueProviderFactory">Tipo del enlazador de modelos.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.ValueProviderAttribute.#ctor(System.Type[])">
      <summary>Inicializa una nueva instancia de <see cref="T:System.Web.Http.ValueProviders.ValueProviderAttribute" />.</summary>
      <param name="valueProviderFactories">Matriz de los tipos de enlazador del modelo.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.ValueProviderAttribute.GetValueProviderFactories(System.Web.Http.HttpConfiguration)">
      <summary>Obtiene los generadores de proveedores de valores.</summary>
      <returns>Colección de los generadores de proveedores de valores.</returns>
      <param name="configuration">Un objeto de configuración.</param>
    </member>
    <member name="P:System.Web.Http.ValueProviders.ValueProviderAttribute.ValueProviderFactoryTypes">
      <summary>Obtiene los tipos de objeto devueltos por el generador de proveedores de valores.</summary>
      <returns>Colección de tipos.</returns>
    </member>
    <member name="T:System.Web.Http.ValueProviders.ValueProviderFactory">
      <summary>Representa un generador para crear objetos de proveedor de valores.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.ValueProviderFactory.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.ValueProviders.ValueProviderFactory" />.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.ValueProviderFactory.GetValueProvider(System.Web.Http.Controllers.HttpActionContext)">
      <summary>Devuelve un objeto de proveedor de valores para el contexto de controlador especificado.</summary>
      <returns>Un objeto de proveedor de valores.</returns>
      <param name="actionContext">Un objeto que encapsula la información sobre la solicitud HTTP actual.</param>
    </member>
    <member name="T:System.Web.Http.ValueProviders.ValueProviderResult">
      <summary>Representa el resultado de enlazar un valor (por ejemplo de un envío de formulario o de una cadena de consulta) a una propiedad de argumento de método de acción o al propio argumento.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.ValueProviderResult.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.ValueProviders.ValueProviderResult" />.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.ValueProviderResult.#ctor(System.Object,System.String,System.Globalization.CultureInfo)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.ValueProviders.ValueProviderResult" />.</summary>
      <param name="rawValue">Valor sin formato.</param>
      <param name="attemptedValue">Valor intentado.</param>
      <param name="culture">Referencia cultural.</param>
    </member>
    <member name="P:System.Web.Http.ValueProviders.ValueProviderResult.AttemptedValue">
      <summary>Obtiene o establece el valor sin formato que se convierte en una cadena para mostrar.</summary>
      <returns>Valor sin formato que se convierte en una cadena para mostrar.</returns>
    </member>
    <member name="M:System.Web.Http.ValueProviders.ValueProviderResult.ConvertTo(System.Type)">
      <summary>Convierte el valor encapsulado por este resultado al tipo especificado.</summary>
      <returns>El valor convertido.</returns>
      <param name="type">Tipo de destino.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.ValueProviderResult.ConvertTo(System.Type,System.Globalization.CultureInfo)">
      <summary>Convierte el valor encapsulado por este resultado al tipo especificado mediante la información de la referencia cultural especificada.</summary>
      <returns>El valor convertido.</returns>
      <param name="type">Tipo de destino.</param>
      <param name="culture">Referencia cultural que se va a usar en la conversión.</param>
    </member>
    <member name="P:System.Web.Http.ValueProviders.ValueProviderResult.Culture">
      <summary>Obtiene o establece la referencia cultural.</summary>
      <returns>Referencia cultural.</returns>
    </member>
    <member name="P:System.Web.Http.ValueProviders.ValueProviderResult.RawValue">
      <summary>Obtiene o establece el valor sin formato proporcionado por el proveedor de valor.</summary>
      <returns>Valor sin formato proporcionado por el proveedor de valor.</returns>
    </member>
    <member name="T:System.Web.Http.ValueProviders.Providers.CompositeValueProvider">
      <summary>Representa un proveedor de valores cuyos valores proceden de una lista de proveedores de valor que implementa la interfaz <see cref="T:System.Collections.IEnumerable" />.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.CompositeValueProvider.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.ValueProviders.Providers.CompositeValueProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.CompositeValueProvider.#ctor(System.Collections.Generic.IList{System.Web.Http.ValueProviders.IValueProvider})">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.ValueProviders.Providers.CompositeValueProvider" />.</summary>
      <param name="list">Lista de proveedores de valor.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.CompositeValueProvider.ContainsPrefix(System.String)">
      <summary>Determina si la colección contiene el <paramref name="prefix" /> especificado.</summary>
      <returns>true si la colección contiene el <paramref name="prefix" /> especificado; de lo contrario, false.</returns>
      <param name="prefix">Prefijo que se va a buscar.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.CompositeValueProvider.GetKeysFromPrefix(System.String)">
      <summary>Recupera claves del <paramref name="prefix" /> especificado.</summary>
      <returns>Claves del <paramref name="prefix" /> especificado.</returns>
      <param name="prefix">Prefijo del cual se recuperan claves.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.CompositeValueProvider.GetValue(System.String)">
      <summary>Recupera un objeto de valor usando la <paramref name="key" /> especificada.</summary>
      <returns>Objeto de valor para la <paramref name="key" /> especificada.</returns>
      <param name="key">Clave para la que se va a recuperar el objeto de valor.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.CompositeValueProvider.InsertItem(System.Int32,System.Web.Http.ValueProviders.IValueProvider)">
      <summary>Inserta un elemento en la colección en el índice especificado.</summary>
      <param name="index">Índice de base cero en el que debe insertarse <paramref name="item" />.</param>
      <param name="item">Objeto que se va a insertar.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.CompositeValueProvider.SetItem(System.Int32,System.Web.Http.ValueProviders.IValueProvider)">
      <summary>Reemplaza el elemento del índice especificado.</summary>
      <param name="index">Índice de base cero del elemento que se va a reemplazar.</param>
      <param name="item">Nuevo valor para el elemento del índice especificado.</param>
    </member>
    <member name="T:System.Web.Http.ValueProviders.Providers.CompositeValueProviderFactory">
      <summary>Representa un generador para crear una lista de objetos de proveedor de valores.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.CompositeValueProviderFactory.#ctor(System.Collections.Generic.IEnumerable{System.Web.Http.ValueProviders.ValueProviderFactory})">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.ValueProviders.Providers.CompositeValueProviderFactory" />.</summary>
      <param name="factories">Colección de generadores de proveedores de valores.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.CompositeValueProviderFactory.GetValueProvider(System.Web.Http.Controllers.HttpActionContext)">
      <summary>Recupera una lista de objetos de proveedor de valores para el contexto de controlador especificado.</summary>
      <returns>Lista de objetos de proveedor de valores para el contenido de controlador especificado.</returns>
      <param name="actionContext">Un objeto que encapsula la información sobre la solicitud HTTP actual.</param>
    </member>
    <member name="T:System.Web.Http.ValueProviders.Providers.NameValuePairsValueProvider">
      <summary>Proveedor de valor para pares nombre/valor.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.NameValuePairsValueProvider.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Globalization.CultureInfo)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.ValueProviders.Providers.NameValuePairsValueProvider" />.</summary>
      <param name="values">Pares nombre/valor del proveedor.</param>
      <param name="culture">Referencia cultural usada para los pares nombre/valor del proveedor.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.NameValuePairsValueProvider.#ctor(System.Func{System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}},System.Globalization.CultureInfo)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Http.ValueProviders.Providers.NameValuePairsValueProvider" /> mediante una función delegada para proporcionar los pares nombre/valor.</summary>
      <param name="valuesFactory">Función delegada que devuelve una colección de pares nombre/valor.</param>
      <param name="culture">Referencia cultural usada para los pares nombre/valor del proveedor.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.NameValuePairsValueProvider.ContainsPrefix(System.String)">
      <summary>Determina si la colección contiene el prefijo especificado.</summary>
      <returns>true si la colección contiene el prefijo especificado; de lo contrario, false.</returns>
      <param name="prefix">Prefijo que se va a buscar.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.NameValuePairsValueProvider.GetKeysFromPrefix(System.String)">
      <summary>Obtiene las claves de un prefijo.</summary>
      <returns>Claves.</returns>
      <param name="prefix">Prefijo.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.NameValuePairsValueProvider.GetValue(System.String)">
      <summary>Recupera un objeto de valor mediante la clave especificada.</summary>
      <returns>Objeto de valor para la clave especificada.</returns>
      <param name="key">Clave para la que se va a recuperar el objeto de valor.</param>
    </member>
    <member name="T:System.Web.Http.ValueProviders.Providers.QueryStringValueProvider">
      <summary>Representa un proveedor de valores para las cadenas de consulta incluidas en un objeto <see cref="T:System.Collections.Specialized.NameValueCollection" />.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.QueryStringValueProvider.#ctor(System.Web.Http.Controllers.HttpActionContext,System.Globalization.CultureInfo)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.ValueProviders.Providers.QueryStringValueProvider" />.</summary>
      <param name="actionContext">Un objeto que encapsula la información sobre la solicitud HTTP actual.</param>
      <param name="culture">Objeto que contiene información sobre la referencia cultural de destino.</param>
    </member>
    <member name="T:System.Web.Http.ValueProviders.Providers.QueryStringValueProviderFactory">
      <summary>Representa una clase que es responsable de crear una nueva instancia de un objeto de proveedor de valores de cadena de consulta.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.QueryStringValueProviderFactory.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.ValueProviders.Providers.QueryStringValueProviderFactory" />.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.QueryStringValueProviderFactory.GetValueProvider(System.Web.Http.Controllers.HttpActionContext)">
      <summary>Recupera un objeto de proveedor de valores para el contexto de controlador especificado.</summary>
      <returns>Un objeto de proveedor de valores de cadena de consulta.</returns>
      <param name="actionContext">Un objeto que encapsula la información sobre la solicitud HTTP actual.</param>
    </member>
    <member name="T:System.Web.Http.ValueProviders.Providers.RouteDataValueProvider">
      <summary>Representa un proveedor de valores para los datos de ruta contenidos en un objeto que implementa la interfaz de IDictionary(Of TKey, TValue).</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.RouteDataValueProvider.#ctor(System.Web.Http.Controllers.HttpActionContext,System.Globalization.CultureInfo)">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.ValueProviders.Providers.RouteDataValueProvider" />.</summary>
      <param name="actionContext">Objeto que contiene información sobre la solicitud HTTP.</param>
      <param name="culture">Objeto que contiene información sobre la referencia cultural de destino.</param>
    </member>
    <member name="T:System.Web.Http.ValueProviders.Providers.RouteDataValueProviderFactory">
      <summary>Representa un generador para crear objetos de proveedor de valores de datos de ruta.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.RouteDataValueProviderFactory.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.Http.ValueProviders.Providers.RouteDataValueProviderFactory" />.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.RouteDataValueProviderFactory.GetValueProvider(System.Web.Http.Controllers.HttpActionContext)">
      <summary>Recupera un objeto de proveedor de valores para el contexto de controlador especificado.</summary>
      <returns>Un objeto de proveedor de valores.</returns>
      <param name="actionContext">Un objeto que encapsula la información sobre la solicitud HTTP actual.</param>
    </member>
  </members>
</doc>