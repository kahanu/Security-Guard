<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Web.WebPages</name>
  </assembly>
  <members>
    <member name="T:System.Web.Helpers.AntiForgery">
      <summary>Ayuda a evitar que scripts malintencionados envíen solicitudes de páginas falsificadas.</summary>
    </member>
    <member name="M:System.Web.Helpers.AntiForgery.GetHtml">
      <summary>Agrega un token de autenticación a un formulario para ayudar a protegerlo contra la falsificación de solicitudes.</summary>
      <returns>Devuelve una cadena que contiene el valor de token cifrado en un campo HTML oculto.</returns>
      <exception cref="T:System.ArgumentException">El objeto actual de <see cref="T:System.Web.HttpContext" /> es  null.</exception>
    </member>
    <member name="M:System.Web.Helpers.AntiForgery.GetHtml(System.Web.HttpContextBase,System.String,System.String,System.String)">
      <summary>Agrega un token de autenticación a un formulario para ayudar a protegerlo contra la falsificación de solicitudes y permite a quienes llaman especificar detalles de autenticación.</summary>
      <returns>Devuelve el valor de token cifrado en un campo HTML oculto.</returns>
      <param name="httpContext">Los datos de contexto HTTP para una solicitud.</param>
      <param name="salt">Cadena opcional de caracteres aleatorios (como Z*7g1&amp;p4) que se utiliza para agregar complejidad al cifrado con el fin de aumentar la seguridad. El valor predeterminado es null.</param>
      <param name="domain">El dominio de una aplicación web de la que se envía una solicitud.</param>
      <param name="path">La ruta de raíz virtual de una aplicación web de la que se ha enviado una solicitud.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="httpContext" /> es null.</exception>
    </member>
    <member name="M:System.Web.Helpers.AntiForgery.GetTokens(System.String,System.String@,System.String@)"></member>
    <member name="M:System.Web.Helpers.AntiForgery.Validate">
      <summary>Valida que los datos de entrada de un campo de formulario HTML proceden del usuario que los envió.</summary>
      <exception cref="T:System.ArgumentException">El valor actual de <see cref="T:System.Web.HttpContext" /> es  null.</exception>
      <exception cref="T:System.Web.Helpers.HttpAntiForgeryException">El token de la cookie HTTP que acompaña una solicitud válida no se encuentraO bienNo se encuentra el token de formulario.O bienEl valor del token de formulario no coincide con el valor de token de la cookie.O bienEl valor del token de formulario no coincide con el valor de token de la cookie.</exception>
    </member>
    <member name="M:System.Web.Helpers.AntiForgery.Validate(System.String,System.String)"></member>
    <member name="M:System.Web.Helpers.AntiForgery.Validate(System.Web.HttpContextBase,System.String)">
      <summary>Valida que los datos de entrada de un campo de formulario HTML proceden del usuario que los envió y permite a quienes llamen especificar detalles adicionales de validación.</summary>
      <param name="httpContext">Los datos de contexto HTTP para una solicitud.</param>
      <param name="salt">Una cadena opcional de caracteres aleatorios (como Z*7g1&amp;p4) que se utiliza para descifrar un token de autenticación creado por la clase <see cref="T:System.Web.Helpers.AntiForgery" />. El valor predeterminado es null.</param>
      <exception cref="T:System.ArgumentException">El valor actual de <see cref="T:System.Web.HttpContext" /> es  null.</exception>
      <exception cref="T:System.Web.Helpers.HttpAntiForgeryException">El token de la cookie HTTP que acompaña una solicitud válida no se encuentra.O bienNo se encuentra el token de formulario.O bienEl valor del token de formulario no coincide con el valor de token de la cookie.O bienEl valor del token de formulario no coincide con el valor de token de la cookie.O bienEl valor <paramref name="salt" /> suministrado no coincide con el valor <paramref name="salt" /> que se utilizó para crear el token de forma.</exception>
    </member>
    <member name="T:System.Web.Helpers.AntiForgeryConfig">
      <summary>Proporciona una configuración de programación para el sistema de token antifalsificación.</summary>
    </member>
    <member name="P:System.Web.Helpers.AntiForgeryConfig.AdditionalDataProvider">
      <summary>Obtiene un proveedor de datos que puede brindar datos adicionales para poner en todos los tokens generados y que puede validar datos adicionales en tokens entrantes.</summary>
      <returns>Proveedor de datos.</returns>
    </member>
    <member name="P:System.Web.Helpers.AntiForgeryConfig.CookieName">
      <summary>Obtiene o establece el nombre de cookie que utiliza el sistema antifalsificación.</summary>
      <returns>Nombre de cookie.</returns>
    </member>
    <member name="P:System.Web.Helpers.AntiForgeryConfig.RequireSsl">
      <summary>Obtiene o establece un valor que indica si la cookie antifalsificación requiere SSL para que se devuelva al servidor.</summary>
      <returns>true si se requiere SSL para devolver la cookie antifalsificación al servidor; de lo contrario, false. </returns>
    </member>
    <member name="P:System.Web.Helpers.AntiForgeryConfig.SuppressIdentityHeuristicChecks">
      <summary>Obtiene o establece un valor que indica si el sistema antifalsificación debería saltear la comprobación de situaciones que podrían indicar un uso indebido del sistema.</summary>
      <returns>true si el sistema antifalsificación no debería buscar posibles usos indebidos; en caso contrario, false.</returns>
    </member>
    <member name="P:System.Web.Helpers.AntiForgeryConfig.UniqueClaimTypeIdentifier">
      <summary>Si la autorización basada en reclamos se está utilizando, obtiene o establece el tipo de reclamo para la identidad que se utiliza para identificar exclusivamente al usuario.</summary>
      <returns>Tipo de reclamo.</returns>
    </member>
    <member name="T:System.Web.Helpers.IAntiForgeryAdditionalDataProvider">
      <summary>Proporciona una forma de incluir o validar datos personalizados para tokens antifalsificación.</summary>
    </member>
    <member name="M:System.Web.Helpers.IAntiForgeryAdditionalDataProvider.GetAdditionalData(System.Web.HttpContextBase)">
      <summary>Proporciona datos adicionales para almacenar para los tokens antifalsificación que se generan durante esta solicitud.</summary>
      <returns>Los datos suplementarios que se incrustan en el token antifalsificación.</returns>
      <param name="context">Información sobre la solicitud actual.</param>
    </member>
    <member name="M:System.Web.Helpers.IAntiForgeryAdditionalDataProvider.ValidateAdditionalData(System.Web.HttpContextBase,System.String)">
      <summary>Valida datos adicionales que estaban incrustados dentro de un token antifalsificación entrante.</summary>
      <returns>true si los datos son válidos o false si los datos no son válidos.</returns>
      <param name="context">Información sobre la solicitud actual.</param>
      <param name="additionalData">Los datos suplementarios que estaban incrustados en el token.</param>
    </member>
    <member name="T:System.Web.Helpers.UnvalidatedRequestValues">
      <summary>Brinda acceso a valores de formulario no validados en el objeto <see cref="T:System.Web.HttpRequest" />.</summary>
    </member>
    <member name="P:System.Web.Helpers.UnvalidatedRequestValues.Form">
      <summary>Obtiene una colección de valores de formulario no validados que fueron publicados desde el explorador.</summary>
      <returns>Una colección no validada de valores de formulario.</returns>
    </member>
    <member name="P:System.Web.Helpers.UnvalidatedRequestValues.Item(System.String)">
      <summary>Obtiene el objeto no validado especificado de la colección de valores publicados en el objeto <see cref="T:System.Web.HttpRequest" />.</summary>
      <returns>El miembro especificado, o null si el elemento especificado no se encuentra.</returns>
      <param name="key">Nombre del miembro de colección que se va a obtener.</param>
    </member>
    <member name="P:System.Web.Helpers.UnvalidatedRequestValues.QueryString">
      <summary>Obtiene una colección de valores de cadena de consulta no validados.</summary>
      <returns>Una colección de valores de cadena de consulta no validados.</returns>
    </member>
    <member name="T:System.Web.Helpers.Validation">
      <summary>Evita que campos del objeto Solicitud sean comprobados en busca de script de cliente y marcado HTML potencialmente inseguros.</summary>
    </member>
    <member name="M:System.Web.Helpers.Validation.Unvalidated(System.Web.HttpRequest)">
      <summary>Devuelve una versión de valores de formulario, cookies y variables de cadena de consulta sin comprobarlos en busca de script de cliente y marcado HTML.</summary>
      <returns>Un objeto que contiene versiones no validadas de los valores de cadena de consulta y formulario.</returns>
      <param name="request">El objeto <see cref="T:System.Web.HttpRequest" /> que contiene valores para excluir de la validación de solicitud.</param>
    </member>
    <member name="M:System.Web.Helpers.Validation.Unvalidated(System.Web.HttpRequest,System.String)">
      <summary>Devuelve un valor del campo de formulario, cookie o variable de cadena de consulta especificado sin comprobarlo en busca de script de cliente y marcado HTML.</summary>
      <returns>Cadena que contiene texto sin validar del campo, cookie o valor cadena de consulta especificado.</returns>
      <param name="request">Objeto <see cref="T:System.Web.HttpRequest" /> que contiene valores que excluir de la validación.</param>
      <param name="key">Nombre del campo que se va a excluir de la validación. <paramref name="key" /> puede hacer referencia a un campo de formulario, a una cookie o a la variable cadena de consulta.</param>
    </member>
    <member name="M:System.Web.Helpers.Validation.Unvalidated(System.Web.HttpRequestBase)">
      <summary>Devuelve todos los valores del objeto Solicitud (incluidos campos de formulario, cookies y la cadena de consulta) sin antes comprobarlos en busca de script de cliente o marcado HTML.</summary>
      <returns>Un objeto que contiene versiones no validadas de los valores de cadena de consulta, cookie y formulario.</returns>
      <param name="request">Objeto <see cref="T:System.Web.HttpRequest" /> que contiene valores que excluir de la validación.</param>
    </member>
    <member name="M:System.Web.Helpers.Validation.Unvalidated(System.Web.HttpRequestBase,System.String)">
      <summary>Devuelve el valor especificado del objeto Solicitud sin antes comprobarlo en busca de script de cliente y marcado HTML.</summary>
      <returns>Cadena que contiene texto sin validar del campo, cookie o valor cadena de consulta especificado.</returns>
      <param name="request">Objeto <see cref="T:System.Web.HttpRequestBase" /> que contiene valores que excluir de la validación.</param>
      <param name="key">Nombre del campo que se va a excluir de la validación. <paramref name="key" /> puede hacer referencia a un campo de formulario, a una cookie o a la variable cadena de consulta.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpAntiForgeryException">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpAntiForgeryException.#ctor">
      <summary>Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpAntiForgeryException.#ctor(System.String)">
      <summary>Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpAntiForgeryException.#ctor(System.String,System.Exception)">
      <summary>Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <param name="message">Mensaje.</param>
      <param name="innerException">Excepción interna.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelClientValidationEqualToRule">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelClientValidationEqualToRule.#ctor(System.String,System.Object)">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <param name="errorMessage">Mensaje de error.</param>
      <param name="other">Otro.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelClientValidationRangeRule">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelClientValidationRangeRule.#ctor(System.String,System.Object,System.Object)">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <param name="errorMessage">Mensaje de error.</param>
      <param name="minValue">El valor mínimo.</param>
      <param name="maxValue">El valor máximo.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelClientValidationRegexRule">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelClientValidationRegexRule.#ctor(System.String,System.String)">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="T:System.Web.Mvc.ModelClientValidationRemoteRule">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelClientValidationRemoteRule.#ctor(System.String,System.String,System.String,System.String)">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="T:System.Web.Mvc.ModelClientValidationRequiredRule">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelClientValidationRequiredRule.#ctor(System.String)">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="T:System.Web.Mvc.ModelClientValidationRule">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelClientValidationRule.#ctor">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelClientValidationRule.ErrorMessage">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelClientValidationRule.ValidationParameters">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelClientValidationRule.ValidationType">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="T:System.Web.Mvc.ModelClientValidationStringLengthRule">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelClientValidationStringLengthRule.#ctor(System.String,System.Int32,System.Int32)">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="T:System.Web.Mvc.TagBuilder">
      <summary>Contiene clases y propiedades que se utilizan para crear elementos HTML. Esta clase se utiliza para escribir aplicaciones auxiliares como las que se encuentran en el espacio de nombres <see cref="N:System.Web.Helpers" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.TagBuilder.#ctor(System.String)">
      <summary>Crea una nueva etiqueta que incluye el nombre de etiqueta especificado.</summary>
      <param name="tagName">El nombre de etiqueta sin los delimitadores "&lt;", "/", o "&gt;".</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tagName" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.Mvc.TagBuilder.AddCssClass(System.String)">
      <summary>Agrega una clase CSS a la lista de clases CSS de la etiqueta.</summary>
      <param name="value">Clase CSS para agregar.</param>
    </member>
    <member name="P:System.Web.Mvc.TagBuilder.Attributes">
      <summary>Obtiene la colección de atributos.</summary>
      <returns>Colección de atributos.</returns>
    </member>
    <member name="M:System.Web.Mvc.TagBuilder.CreateSanitizedId(System.String)">
      <summary>Reemplaza cada carácter no válido en el Id. de etiqueta por un carácter HTML válido.</summary>
      <returns>Id. de etiqueta saneada o null si <paramref name="originalId" /> es null o está vacío o bien si <paramref name="originalId" /> no comienza por una letra.</returns>
      <param name="originalId">Id. que podría contener caracteres para reemplazar.</param>
    </member>
    <member name="M:System.Web.Mvc.TagBuilder.CreateSanitizedId(System.String,System.String)">
      <summary>Reemplaza cada carácter no válido en el Id. de etiqueta por la cadena de reemplazo especificada.</summary>
      <returns>Id. de etiqueta saneada o null si <paramref name="originalId" /> es null o está vacío o bien si <paramref name="originalId" /> no comienza por una letra.</returns>
      <param name="originalId">Id. que podría contener caracteres para reemplazar.</param>
      <param name="invalidCharReplacement">Cadena de reemplazo.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="invalidCharReplacement" /> es null.</exception>
    </member>
    <member name="M:System.Web.Mvc.TagBuilder.GenerateId(System.String)">
      <summary>Genera un atributo ID saneado para la etiqueta mediante el nombre especificado.</summary>
      <param name="name">El nombre que se debe utilizar para generar un atributo ID.</param>
    </member>
    <member name="P:System.Web.Mvc.TagBuilder.IdAttributeDotReplacement">
      <summary>Obtiene o establece una cadena que se puede utilizar para reemplazar caracteres HTML no válidos.</summary>
      <returns>Cadena que se va a utilizar para reemplazar los caracteres HTML no válidos.</returns>
    </member>
    <member name="P:System.Web.Mvc.TagBuilder.InnerHtml">
      <summary>Obtiene o establece el código HTML interno para el elemento.</summary>
      <returns>Valor HTML interno del elemento.</returns>
    </member>
    <member name="M:System.Web.Mvc.TagBuilder.MergeAttribute(System.String,System.String)">
      <summary>Agrega un nuevo atributo a la etiqueta.</summary>
      <param name="key">La clave del atributo.</param>
      <param name="value">El valor del atributo.</param>
    </member>
    <member name="M:System.Web.Mvc.TagBuilder.MergeAttribute(System.String,System.String,System.Boolean)">
      <summary>Agrega un atributo nuevo o reemplaza, de manera opcional, un atributo existente en la etiqueta de apertura.</summary>
      <param name="key">La clave del atributo.</param>
      <param name="value">El valor del atributo.</param>
      <param name="replaceExisting">true para reemplazar un atributo existente si existe el atributo con el valor <paramref name="key" /> especificado; de lo contrario, false para conservar el atributo original sin cambios.</param>
    </member>
    <member name="M:System.Web.Mvc.TagBuilder.MergeAttributes``2(System.Collections.Generic.IDictionary{``0,``1})">
      <summary>Agrega nuevos atributos a la etiqueta.</summary>
      <param name="attributes">La colección de atributos para agregar.</param>
      <typeparam name="TKey">El tipo de objeto de clave.</typeparam>
      <typeparam name="TValue">El tipo del objeto de valor.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.TagBuilder.MergeAttributes``2(System.Collections.Generic.IDictionary{``0,``1},System.Boolean)">
      <summary>Agrega nuevos atributos o reemplaza los atributos existentes de la etiqueta de manera opcional.</summary>
      <param name="attributes">La colección de atributos para agregar o reemplazar.</param>
      <param name="replaceExisting">Para cada uno de los atributos de <paramref name="attributes" />, true para reemplazar el atributo si ya existe un atributo con la misma clave o false para conservar el atributo original sin cambios.</param>
      <typeparam name="TKey">El tipo de objeto de clave.</typeparam>
      <typeparam name="TValue">El tipo del objeto de valor.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.TagBuilder.SetInnerText(System.String)">
      <summary>Establece la propiedad <see cref="P:System.Web.Mvc.TagBuilder.InnerHtml" /> del elemento en una versión codificada en HTML de la cadena especificada.</summary>
      <param name="innerText">Cadena que se va a codificar en HTML.</param>
    </member>
    <member name="P:System.Web.Mvc.TagBuilder.TagName">
      <summary>Obtiene el nombre de etiqueta para esta etiqueta.</summary>
      <returns>Nombre.</returns>
    </member>
    <member name="M:System.Web.Mvc.TagBuilder.ToString">
      <summary>Presenta el elemento como elemento <see cref="F:System.Web.Mvc.TagRenderMode.Normal" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.TagBuilder.ToString(System.Web.Mvc.TagRenderMode)">
      <summary>Presenta la etiqueta HTML utilizando el modo de presentación especificado.</summary>
      <returns>Etiqueta HTML presentada.</returns>
      <param name="renderMode">Modo de presentación.</param>
    </member>
    <member name="T:System.Web.Mvc.TagRenderMode">
      <summary>Enumera los modos que están disponibles para presentar etiquetas HTML.</summary>
    </member>
    <member name="F:System.Web.Mvc.TagRenderMode.Normal">
      <summary>Representa el modo de presentación de texto normal.</summary>
    </member>
    <member name="F:System.Web.Mvc.TagRenderMode.StartTag">
      <summary>Representa el modo de presentación de una etiqueta de apertura (por ejemplo, &lt;tag&gt;).</summary>
    </member>
    <member name="F:System.Web.Mvc.TagRenderMode.EndTag">
      <summary>Representa el modo de presentación de una etiqueta de fin (por ejemplo, &lt;/tag&gt;).</summary>
    </member>
    <member name="F:System.Web.Mvc.TagRenderMode.SelfClosing">
      <summary>Representa el modo de presentación de una etiqueta de cierre automático (por ejemplo, &lt;tag /&gt;).</summary>
    </member>
    <member name="T:System.Web.Mvc.UnobtrusiveValidationAttributesGenerator">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Web.Mvc.UnobtrusiveValidationAttributesGenerator.GetValidationAttributes(System.Collections.Generic.IEnumerable{System.Web.Mvc.ModelClientValidationRule},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="T:System.Web.WebPages.ApplicationPart">
      <summary>Contiene métodos para registrar ensamblados como componentes de aplicación.</summary>
    </member>
    <member name="M:System.Web.WebPages.ApplicationPart.#ctor(System.Reflection.Assembly,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.WebPages.ApplicationPart" /> con la ruta de acceso virtual raíz y el ensamblado especificados.</summary>
      <param name="assembly">El ensamblado.</param>
      <param name="rootVirtualPath">La ruta de acceso virtual raíz.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="rootVirtualPath" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.WebPages.ApplicationPart.ProcessVirtualPath(System.Reflection.Assembly,System.String,System.String)">
      <summary>Resuelve la ruta de acceso al recurso o ensamblado especificado de un ensamblado mediante la ruta de acceso virtual básica y especificadas.</summary>
      <returns>Ruta de acceso del ensamblado o recurso.</returns>
      <param name="assembly">El ensamblado.</param>
      <param name="baseVirtualPath">Ruta de acceso virtual básica.</param>
      <param name="virtualPath">Ruta de acceso virtual.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="assembly" /> no está registrado.</exception>
    </member>
    <member name="M:System.Web.WebPages.ApplicationPart.Register(System.Web.WebPages.ApplicationPart)">
      <summary>Agrega un ensamblado y todas las páginas web del ensamblado a la lista de componentes de aplicación disponibles.</summary>
      <param name="applicationPart">Componente de la aplicación.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="applicationPart" /> ya está registrado.</exception>
    </member>
    <member name="T:System.Web.WebPages.ApplicationStartPage">
      <summary>Proporciona objetos y métodos que se utilizan para ejecutar y presentar páginas de inicio de aplicación de páginas web ASP.NET (archivos _AppStart.cshtml o _AppStart.vbhtml).</summary>
    </member>
    <member name="M:System.Web.WebPages.ApplicationStartPage.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.WebPages.ApplicationStartPage" />.</summary>
    </member>
    <member name="P:System.Web.WebPages.ApplicationStartPage.Application">
      <summary>Obtiene el objeto de aplicación HTTP que hace referencia a esta página de inicio de la aplicación.</summary>
      <returns>Objeto de aplicación HTTP que hace referencia a esta página de inicio de la aplicación.</returns>
    </member>
    <member name="F:System.Web.WebPages.ApplicationStartPage.CacheKeyPrefix">
      <summary>El prefijo que se aplica a todas las claves que la página de inicio de la aplicación agrega a la caché.</summary>
    </member>
    <member name="P:System.Web.WebPages.ApplicationStartPage.Context">
      <summary>Obtiene el objeto <see cref="T:System.Web.HttpContextBase" /> que representa los datos de contexto asociados a esta página.</summary>
      <returns>Los datos de contexto actuales.</returns>
    </member>
    <member name="M:System.Web.WebPages.ApplicationStartPage.GetOutputWriter">
      <summary>Devuelve la instancia del escritor de texto que se utiliza para presentar la página.</summary>
      <returns>Escritor de texto.</returns>
    </member>
    <member name="P:System.Web.WebPages.ApplicationStartPage.Markup">
      <summary>Obtiene el resultado de la página de inicio de la aplicación como cadena con codificación HTML.</summary>
      <returns>Resultado de la página de inicio de la aplicación como cadena con codificación HTML.</returns>
    </member>
    <member name="P:System.Web.WebPages.ApplicationStartPage.Output">
      <summary>Obtiene el escritor de texto de la página.</summary>
      <returns>Escritor de texto de la página.</returns>
    </member>
    <member name="F:System.Web.WebPages.ApplicationStartPage.StartPageVirtualPath">
      <summary>Ruta de acceso a la página de inicio de la aplicación.</summary>
    </member>
    <member name="P:System.Web.WebPages.ApplicationStartPage.VirtualPath">
      <summary>Obtiene o establece la ruta de acceso virtual de la página.</summary>
      <returns>Ruta de acceso virtual.</returns>
    </member>
    <member name="M:System.Web.WebPages.ApplicationStartPage.Write(System.Object)">
      <summary>Escribe la representación de cadena del objeto especificado como una cadena codificada en HTML.</summary>
      <param name="value">Objeto que se va a codificar y escribir.</param>
    </member>
    <member name="M:System.Web.WebPages.ApplicationStartPage.Write(System.Web.WebPages.HelperResult)">
      <summary>Escribe el objeto <see cref="T:System.Web.WebPages.HelperResult" /> especificado como cadena codificada en HTML.</summary>
      <param name="result">Resultado de aplicación auxiliar que se va a codificar y escribir.</param>
    </member>
    <member name="M:System.Web.WebPages.ApplicationStartPage.WriteLiteral(System.Object)">
      <summary>Escribe el objeto especificado sin codificación HTML.</summary>
      <param name="value">Objeto que se escribirá.</param>
    </member>
    <member name="T:System.Web.WebPages.AttributeValue">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Web.WebPages.AttributeValue.#ctor(System.Web.WebPages.Instrumentation.PositionTagged{System.String},System.Web.WebPages.Instrumentation.PositionTagged{System.Object},System.Boolean)">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Web.WebPages.AttributeValue.FromTuple(System.Tuple`3)">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="P:System.Web.WebPages.AttributeValue.Literal">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Web.WebPages.AttributeValue.op_Implicit(System.Tuple`3)~System.Web.WebPages.AttributeValue">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="P:System.Web.WebPages.AttributeValue.Prefix">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="P:System.Web.WebPages.AttributeValue.Value">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="T:System.Web.WebPages.BrowserHelpers">
      <summary>Proporciona una manera de especificar la información de explorador personalizado custom (agente de usuario).</summary>
    </member>
    <member name="M:System.Web.WebPages.BrowserHelpers.ClearOverriddenBrowser(System.Web.HttpContextBase)">
      <summary>Quita los agentes de usuario omitidos de la solicitud actual.</summary>
      <param name="httpContext">Contexto actual.</param>
    </member>
    <member name="M:System.Web.WebPages.BrowserHelpers.GetOverriddenBrowser(System.Web.HttpContextBase)">
      <summary>Devuelve el objeto de las capacidades del explorador de las capacidades omitidas o del explorador actual si no se ha especificado ninguna omisión.</summary>
      <returns>Capacidades del explorador.</returns>
      <param name="httpContext">Contexto actual.</param>
    </member>
    <member name="M:System.Web.WebPages.BrowserHelpers.GetOverriddenUserAgent(System.Web.HttpContextBase)">
      <summary>Devuelve el valor del agente de usuario omitido o la cadena del agente de usuario actual en caso de que no se haya especificado ninguna omisión.</summary>
      <returns>Cadena del agente de usuario</returns>
      <param name="httpContext">Contexto actual.</param>
    </member>
    <member name="M:System.Web.WebPages.BrowserHelpers.GetVaryByCustomStringForOverriddenBrowser(System.Web.HttpContext)">
      <summary>Obtiene una cadena que varía en función del tipo de explorador.</summary>
      <returns>Cadena que identifica al explorador.</returns>
      <param name="httpContext">Contexto actual.</param>
    </member>
    <member name="M:System.Web.WebPages.BrowserHelpers.GetVaryByCustomStringForOverriddenBrowser(System.Web.HttpContextBase)">
      <summary>Obtiene una cadena que varía en función del tipo de explorador. </summary>
      <returns>Cadena que identifica al explorador.</returns>
      <param name="httpContext">Base de contexto actual.</param>
    </member>
    <member name="M:System.Web.WebPages.BrowserHelpers.SetOverriddenBrowser(System.Web.HttpContextBase,System.String)">
      <summary>Omite el valor del agente de usuario real de la solicitud mediante el agente de usuario especificado.</summary>
      <param name="httpContext">Contexto actual.</param>
      <param name="userAgent">Agente de usuario para utilizar.</param>
    </member>
    <member name="M:System.Web.WebPages.BrowserHelpers.SetOverriddenBrowser(System.Web.HttpContextBase,System.Web.WebPages.BrowserOverride)">
      <summary>Omite el valor del agente de usuario real de la solicitud mediante la información de omisión del explorador especificado.</summary>
      <param name="httpContext">Contexto actual.</param>
      <param name="browserOverride">Uno de los valores de enumeración que representa la información de omisión del explorador que se debe utilizar.</param>
    </member>
    <member name="T:System.Web.WebPages.BrowserOverride">
      <summary>Especifica los tipos de explorador que se pueden definir para el método <see cref="M:System.Web.WebPages.BrowserHelpers.SetOverriddenBrowser(System.Web.HttpContextBase,System.Web.WebPages.BrowserOverride)" />.</summary>
    </member>
    <member name="F:System.Web.WebPages.BrowserOverride.Desktop">
      <summary>Especifica un explorador de escritorio.</summary>
    </member>
    <member name="F:System.Web.WebPages.BrowserOverride.Mobile">
      <summary>Especifica un explorador móvil.</summary>
    </member>
    <member name="T:System.Web.WebPages.BrowserOverrideStore">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Web.WebPages.BrowserOverrideStore.#ctor">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Web.WebPages.BrowserOverrideStore.GetOverriddenUserAgent(System.Web.HttpContextBase)">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Web.WebPages.BrowserOverrideStore.SetOverriddenUserAgent(System.Web.HttpContextBase,System.String)">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="T:System.Web.WebPages.BrowserOverrideStores">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Web.WebPages.BrowserOverrideStores.#ctor">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="P:System.Web.WebPages.BrowserOverrideStores.Current">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="T:System.Web.WebPages.CookieBrowserOverrideStore">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Web.WebPages.CookieBrowserOverrideStore.#ctor">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Web.WebPages.CookieBrowserOverrideStore.#ctor(System.Int32)">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Web.WebPages.CookieBrowserOverrideStore.GetOverriddenUserAgent(System.Web.HttpContextBase)">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Web.WebPages.CookieBrowserOverrideStore.SetOverriddenUserAgent(System.Web.HttpContextBase,System.String)">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="T:System.Web.WebPages.DefaultDisplayMode">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Web.WebPages.DefaultDisplayMode.#ctor">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Web.WebPages.DefaultDisplayMode.#ctor(System.String)">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Web.WebPages.DefaultDisplayMode.CanHandleContext(System.Web.HttpContextBase)">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="P:System.Web.WebPages.DefaultDisplayMode.ContextCondition">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="P:System.Web.WebPages.DefaultDisplayMode.DisplayModeId">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Web.WebPages.DefaultDisplayMode.GetDisplayInfo(System.Web.HttpContextBase,System.String,System.Func`2)">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Web.WebPages.DefaultDisplayMode.TransformPath(System.String,System.String)">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="T:System.Web.WebPages.DisplayInfo">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Web.WebPages.DisplayInfo.#ctor(System.String,System.Web.WebPages.IDisplayMode)">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="P:System.Web.WebPages.DisplayInfo.DisplayMode">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="P:System.Web.WebPages.DisplayInfo.FilePath">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="T:System.Web.WebPages.DisplayModeProvider">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="F:System.Web.WebPages.DisplayModeProvider.DefaultDisplayModeId">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Web.WebPages.DisplayModeProvider.GetAvailableDisplayModesForContext(System.Web.HttpContextBase,System.Web.WebPages.IDisplayMode)">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Web.WebPages.DisplayModeProvider.GetDisplayInfoForVirtualPath(System.String,System.Web.HttpContextBase,System.Func`2,System.Boolean)">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="P:System.Web.WebPages.DisplayModeProvider.Instance">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="F:System.Web.WebPages.DisplayModeProvider.MobileDisplayModeId">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="P:System.Web.WebPages.DisplayModeProvider.Modes">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="P:System.Web.WebPages.DisplayModeProvider.RequireConsistentDisplayMode">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="T:System.Web.WebPages.HelperPage">
      <summary>Representa una clase básica para las páginas que se utiliza cuando ASP.NET compila un archivo .cshtml o .vbhtml y que expone métodos y propiedades de nivel de página y de aplicación.</summary>
    </member>
    <member name="M:System.Web.WebPages.HelperPage.#ctor">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.App">
      <summary>Obtiene los datos de aplicación-estado como objeto <see cref="T:System.Dynamic.DynamicObject" /> que pueden utilizar los llamadores para crear y obtener acceso a propiedades personalizadas en el ámbito de la aplicación.</summary>
      <returns>Datos de aplicación-estado.</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.AppState">
      <summary>Obtiene una referencia a datos globales de aplicación-estado que se pueden compartir entre sesiones y solicitudes en una aplicación ASP.NET.</summary>
      <returns>Datos de aplicación-estado.</returns>
    </member>
    <member name="M:System.Web.WebPages.HelperPage.BeginContext(System.IO.TextWriter,System.String,System.Int32,System.Int32,System.Boolean)">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Web.WebPages.HelperPage.BeginContext(System.String,System.Int32,System.Int32,System.Boolean)">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.Cache">
      <summary>Obtiene el objeto de caché del dominio de aplicación actual.</summary>
      <returns>Objeto de caché.</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.Context">
      <summary>Obtiene el objeto <see cref="T:System.Web.HttpContextBase" /> que está asociado con una página.</summary>
      <returns>Los datos de contexto actuales.</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.CurrentPage">
      <summary>Obtiene la página actual para esta página de aplicación auxiliar.</summary>
      <returns>Página actual.</returns>
    </member>
    <member name="M:System.Web.WebPages.HelperPage.EndContext(System.IO.TextWriter,System.String,System.Int32,System.Int32,System.Boolean)">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Web.WebPages.HelperPage.EndContext(System.String,System.Int32,System.Int32,System.Boolean)">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.HelperVirtualPath">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Web.WebPages.HelperPage.Href(System.String,System.Object[])">
      <summary>Crea una dirección URL absoluta a partir de una dirección URL relativa de la aplicación utilizando los parámetros especificados.</summary>
      <returns>Dirección URL absoluta.</returns>
      <param name="path">La ruta de acceso inicial para utilizar en la dirección URL.</param>
      <param name="pathParts">Información adicional de la ruta de acceso, como carpetas y subcarpetas.</param>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.Html">
      <summary>Obtiene el objeto <see cref="T:System.Web.WebPages.Html.HtmlHelper" /> que está asociado con una página.</summary>
      <returns>Objeto que admite la presentación de controles de formulario HTML en una página.</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.IsAjax">
      <summary>Obtiene un valor que indica si se está utilizando Ajax durante la solicitud de una página web.</summary>
      <returns>true si se va a utilizar Ajax durante la solicitud; en caso contrario, false.</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.IsPost">
      <summary>Obtiene un valor que indica si la solicitud actual es una publicación (enviada con el verbo HTTP POST).</summary>
      <returns>true si el verbo HTTP es POST; de lo contrario, false.</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.Model">
      <summary>Obtiene el modelo que está asociado con una página.</summary>
      <returns>Objeto que representa un modelo que está asociado con los datos de visualización para una página.</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.ModelState">
      <summary>Obtiene los datos de estado del modelo asociado a una página.</summary>
      <returns>Estado del modelo.</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.Page">
      <summary>Obtiene un acceso similar a una propiedad a los datos de la página que se comparte entre las páginas, las páginas de diseño y las páginas parciales.</summary>
      <returns>Objeto que contiene los datos de la página.</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.PageContext">
      <summary>Obtiene y establece el contexto HTTP de la página web.</summary>
      <returns>Contexto HTTP para la página web.</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.PageData">
      <summary>Obtiene acceso similar a una matriz a los datos de la página que se comparte entre las páginas, las páginas de diseño y las páginas parciales.</summary>
      <returns>Objeto que proporciona acceso similar a matriz a los datos de una página.</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.Request">
      <summary>Obtiene el objeto <see cref="T:System.Web.HttpRequest" /> de la solicitud HTTP actual.</summary>
      <returns>Objeto <see cref="T:System.Web.HttpRequest" /> que contiene los valores HTTP que envió el cliente durante una solicitud web.</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.Response">
      <summary>Obtiene el objeto <see cref="T:System.Web.HttpResponse" /> de la respuesta HTTP actual.</summary>
      <returns>Objeto <see cref="T:System.Web.HttpResponse" /> que contiene la información de respuesta HTTP de una operación ASP.NET.</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.Server">
      <summary>Obtiene el objeto <see cref="T:System.Web.HttpServerUtility" /> que proporciona los métodos que se pueden utilizar como parte del procesamiento de la página web.</summary>
      <returns>Objeto <see cref="T:System.Web.HttpServerUtility" />.</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.Session">
      <summary>Obtiene el objeto <see cref="T:System.Web.HttpSessionState" /> de la solicitud HTTP actual.</summary>
      <returns>Objeto <see cref="T:System.Web.HttpSessionState" /> de la solicitud HTTP actual.</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.UrlData">
      <summary>Obtiene los datos relacionados con la ruta de acceso URL.</summary>
      <returns>Datos relacionados con la ruta de acceso URL.</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.User">
      <summary>Obtiene un valor de usuario basado en el contexto HTTP.</summary>
      <returns>Valor de usuario basado en el contexto HTTP.</returns>
    </member>
    <member name="P:System.Web.WebPages.HelperPage.VirtualPath">
      <summary>Obtiene la ruta de acceso virtual de la página.</summary>
      <returns>Ruta de acceso virtual.</returns>
    </member>
    <member name="M:System.Web.WebPages.HelperPage.WriteAttributeTo(System.IO.TextWriter,System.String,System.Web.WebPages.Instrumentation.PositionTagged{System.String},System.Web.WebPages.Instrumentation.PositionTagged{System.String},System.Web.WebPages.AttributeValue[])">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Web.WebPages.HelperPage.WriteLiteralTo(System.IO.TextWriter,System.Object)">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Web.WebPages.HelperPage.WriteLiteralTo(System.IO.TextWriter,System.Web.WebPages.HelperResult)">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Web.WebPages.HelperPage.WriteTo(System.IO.TextWriter,System.Object)">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Web.WebPages.HelperPage.WriteTo(System.IO.TextWriter,System.Web.WebPages.HelperResult)">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="T:System.Web.WebPages.HelperResult">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Web.WebPages.HelperResult.#ctor(System.Action{System.IO.TextWriter})">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Web.WebPages.HelperResult.ToHtmlString">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Web.WebPages.HelperResult.ToString">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Web.WebPages.HelperResult.WriteTo(System.IO.TextWriter)">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="T:System.Web.WebPages.HttpContextExtensions">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Web.WebPages.HttpContextExtensions.RedirectLocal(System.Web.HttpContextBase,System.String)">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Web.WebPages.HttpContextExtensions.RegisterForDispose(System.Web.HttpContextBase,System.IDisposable)">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="T:System.Web.WebPages.IDisplayMode">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Web.WebPages.IDisplayMode.CanHandleContext(System.Web.HttpContextBase)">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="P:System.Web.WebPages.IDisplayMode.DisplayModeId">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Web.WebPages.IDisplayMode.GetDisplayInfo(System.Web.HttpContextBase,System.String,System.Func`2)">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="T:System.Web.WebPages.ITemplateFile">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="P:System.Web.WebPages.ITemplateFile.TemplateInfo">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="T:System.Web.WebPages.IValidator">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="P:System.Web.WebPages.IValidator.ClientValidationRule">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Web.WebPages.IValidator.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="T:System.Web.WebPages.IVirtualPathFactory">
      <summary>Define métodos implementados por fábricas de controladores de ruta de acceso virtual.</summary>
    </member>
    <member name="M:System.Web.WebPages.IVirtualPathFactory.CreateInstance(System.String)">
      <summary>Crea una fábrica de controladores para la ruta de acceso virtual especificada.</summary>
      <returns>Fábrica de controladores para la ruta de acceso virtual especificada.</returns>
      <param name="virtualPath">Ruta de acceso virtual.</param>
    </member>
    <member name="M:System.Web.WebPages.IVirtualPathFactory.Exists(System.String)">
      <summary>Determina si la ruta de acceso virtual especificada está asociada con una fábrica de controladores.</summary>
      <returns>true si existe una fábrica de controladores para la ruta de acceso virtual especificada; de lo contrario false.</returns>
      <param name="virtualPath">Ruta de acceso virtual.</param>
    </member>
    <member name="T:System.Web.WebPages.IWebPageRequestExecutor">
      <summary>Define métodos para implementar una clase de ejecución que pueda ejecutar el código de una página web.</summary>
    </member>
    <member name="M:System.Web.WebPages.IWebPageRequestExecutor.Execute(System.Web.WebPages.WebPage)">
      <summary>Ejecuta el código en la página web especificada.</summary>
      <returns>true si el ejecutor ha asumido la ejecución de la página web; de lo contrario false.</returns>
      <param name="page">Página web.</param>
    </member>
    <member name="T:System.Web.WebPages.PageVirtualPathAttribute">
      <summary>Representa un atributo de ruta de acceso de una clase de página web.</summary>
    </member>
    <member name="M:System.Web.WebPages.PageVirtualPathAttribute.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.WebPages.PageVirtualPathAttribute" /> utilizando la ruta de acceso virtual especificada.</summary>
      <param name="virtualPath">Ruta de acceso virtual.</param>
    </member>
    <member name="P:System.Web.WebPages.PageVirtualPathAttribute.VirtualPath">
      <summary>Obtiene la ruta de acceso virtual de la página web actual.</summary>
      <returns>Ruta de acceso virtual.</returns>
    </member>
    <member name="T:System.Web.WebPages.PreApplicationStartCode">
      <summary>Proporciona un punto de registro para el código de inicio anterior a la aplicación de páginas web.</summary>
    </member>
    <member name="M:System.Web.WebPages.PreApplicationStartCode.Start">
      <summary>Registra el código de inicio anterior a la aplicación de páginas web.</summary>
    </member>
    <member name="T:System.Web.WebPages.RequestExtensions">
      <summary>Define métodos de extensión para la clase <see cref="T:System.Web.HttpRequestBase" />.</summary>
    </member>
    <member name="M:System.Web.WebPages.RequestExtensions.IsUrlLocalToHost(System.Web.HttpRequestBase,System.String)">
      <summary>Determina si la dirección URL especificada hace referencia al equipo local.</summary>
      <returns>true si la dirección URL hace referencia al equipo local; de lo contrario false.</returns>
      <param name="request">Objeto de solicitud HTTP.</param>
      <param name="url">Dirección URL que se va a probar.</param>
    </member>
    <member name="T:System.Web.WebPages.RequestFieldValidatorBase">
      <summary>Sirve como clase de base abstracta para las clases de la aplicación auxiliar de validación.</summary>
    </member>
    <member name="M:System.Web.WebPages.RequestFieldValidatorBase.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase derivada y especifica el nombre del elemento HTML que se está validando.</summary>
      <param name="errorMessage">El nombre (valor del atributo name) del elemento de entrada del usuario que hay que validar.</param>
    </member>
    <member name="M:System.Web.WebPages.RequestFieldValidatorBase.#ctor(System.String,System.Boolean)">
      <summary>Inicializa una nueva instancia de la clase derivada, registra la cadena especificada como mensaje de error para mostrar si no se proporciona ningún valor y especifica si el método puede utilizar datos no validados.</summary>
      <param name="errorMessage">Mensaje de error.</param>
      <param name="useUnvalidatedValues">true para utilizar una entrada de usuario no validada, false para rechazar los datos no validados. Este parámetro se establece en true llamando a los métodos en circunstancias en las que el valor real de la entrada del usuario es de suma importancia como, por ejemplo, en el caso de campos obligatorios.</param>
    </member>
    <member name="P:System.Web.WebPages.RequestFieldValidatorBase.ClientValidationRule">
      <summary>Cuando se implementa en una clase derivada, obtiene un contenedor para la validación del cliente para el campo obligatorio.</summary>
      <returns>Contenedor.</returns>
    </member>
    <member name="M:System.Web.WebPages.RequestFieldValidatorBase.GetHttpContext(System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary>Devuelve el contexto HTTP de la solicitud actual.</summary>
      <returns>Contexto.</returns>
      <param name="validationContext">Contexto de validación.</param>
    </member>
    <member name="M:System.Web.WebPages.RequestFieldValidatorBase.GetRequestValue(System.Web.HttpRequestBase,System.String)">
      <summary>Devuelve el valor para validar.</summary>
      <returns>Valor que se va a validar.</returns>
      <param name="request">Solicitud actual.</param>
      <param name="field">Nombre del campo de la solicitud actual para validar.</param>
    </member>
    <member name="M:System.Web.WebPages.RequestFieldValidatorBase.IsValid(System.Web.HttpContextBase,System.String)">
      <summary>Devuelve un valor que indica si el valor especificado es válido.</summary>
      <returns>true si el valor es válido; de lo contrario false.</returns>
      <param name="httpContext">Contexto actual.</param>
      <param name="value">Valor que se va a validar.</param>
    </member>
    <member name="M:System.Web.WebPages.RequestFieldValidatorBase.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary>Lleva a cabo la prueba de validación.</summary>
      <returns>Resultado de la prueba de validación.</returns>
      <param name="validationContext">Contexto.</param>
    </member>
    <member name="T:System.Web.WebPages.ResponseExtensions">
      <summary>Define métodos de extensión para la clase básica <see cref="T:System.Web.HttpResponseBase" />.</summary>
    </member>
    <member name="M:System.Web.WebPages.ResponseExtensions.OutputCache(System.Web.HttpResponseBase,System.Int32,System.Boolean,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Web.HttpCacheability)">
      <summary>Configura la directiva de la caché de una instancia de respuesta HTTP.</summary>
      <param name="response">Instancia de respuesta HTTP.</param>
      <param name="numberOfSeconds">Tiempo, en segundos, antes de que los elementos expiren en la caché.</param>
      <param name="sliding">true para indicar que los elementos expiran de la caché según el valor de sliding; false para indicar que los elementos expirarán cuando se alcance el tiempo de expiración predefinido.</param>
      <param name="varyByParams">Lista de todos los parámetros que pueden recibirse con una operación GET o POST que afecte al almacenamiento en caché.</param>
      <param name="varyByHeaders">Lista de todos los encabezados HTTP que afectan al almacenamiento en caché.</param>
      <param name="varyByContentEncodings">Lista de todos los encabezados de codificación del contenido que afectan al almacenamiento en caché.</param>
      <param name="cacheability">Uno de los valores de enumeración que especifica el modo en que almacenan los elementos en la caché.</param>
    </member>
    <member name="M:System.Web.WebPages.ResponseExtensions.SetStatus(System.Web.HttpResponseBase,System.Int32)">
      <summary>Establece el código de estado HTTP de una respuesta HTTP mediante el valor entero especificado.</summary>
      <param name="response">Instancia de respuesta HTTP.</param>
      <param name="httpStatusCode">Código de estado HTTP.</param>
    </member>
    <member name="M:System.Web.WebPages.ResponseExtensions.SetStatus(System.Web.HttpResponseBase,System.Net.HttpStatusCode)">
      <summary>Establece el código de estado HTTP de una respuesta HTTP mediante el valor de enumeración del código de estado HTTP.</summary>
      <param name="response">Instancia de respuesta HTTP.</param>
      <param name="httpStatusCode">Código de estado HTTP</param>
    </member>
    <member name="M:System.Web.WebPages.ResponseExtensions.WriteBinary(System.Web.HttpResponseBase,System.Byte[])">
      <summary>Escribe una secuencia de bytes que representan contenido binario de tipo no especificado en la secuencia de salida de una respuesta HTTP.</summary>
      <param name="response">Instancia de respuesta HTTP.</param>
      <param name="data">Matriz que contiene los bytes que escribir.</param>
    </member>
    <member name="M:System.Web.WebPages.ResponseExtensions.WriteBinary(System.Web.HttpResponseBase,System.Byte[],System.String)">
      <summary>Escribe una secuencia de bytes que representa el contenido binario de tipo MIME especificado en la secuencia de salida de una respuesta HTTP.</summary>
      <param name="response">Instancia de respuesta HTTP recibida.</param>
      <param name="data">Matriz que contiene los bytes que escribir.</param>
      <param name="mimeType">Tipo MIME del contenido binario.</param>
    </member>
    <member name="T:System.Web.WebPages.SectionWriter">
      <summary>Proporciona un delegado que representa uno o más métodos que se llaman cuando se escribe una sección de contenido.</summary>
    </member>
    <member name="T:System.Web.WebPages.StartPage">
      <summary>Proporciona métodos y propiedades que se utilizan para presentar páginas de inicio que utilizan el motor de vista Razor.</summary>
    </member>
    <member name="M:System.Web.WebPages.StartPage.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.WebPages.StartPage" />.</summary>
    </member>
    <member name="P:System.Web.WebPages.StartPage.ChildPage">
      <summary>Obtiene o establece la página secundaria de la página de inicio actual.</summary>
      <returns>Página secundaria de la página de inicio actual.</returns>
    </member>
    <member name="P:System.Web.WebPages.StartPage.Context">
      <summary>Obtiene o establece el contexto de la página <see cref="P:System.Web.WebPages.StartPage.ChildPage" />.</summary>
      <returns>Contexto de la página <see cref="P:System.Web.WebPages.StartPage.ChildPage" />.</returns>
    </member>
    <member name="M:System.Web.WebPages.StartPage.ExecutePageHierarchy">
      <summary>Llama a los métodos que se utilizan para ejecutar el código escrito por el desarrollador en la página de inicio _PageStart y en la página <see cref="P:System.Web.WebPages.StartPage.ChildPage" />.</summary>
    </member>
    <member name="M:System.Web.WebPages.StartPage.GetOutputWriter">
      <summary>Devuelve la instancia del escritor de texto que se utiliza para presentar la página.</summary>
      <returns>Escritor de texto.</returns>
    </member>
    <member name="M:System.Web.WebPages.StartPage.GetStartPage(System.Web.WebPages.WebPageRenderingBase,System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Devuelve la página de inicialización de la página especificada.</summary>
      <returns>La página _AppStart se abre si la página _AppStart existe. Si no se encuentra la página _AppStart, devuelve la página _PageStart, siempre que la página _PageStart exista. Si no se encuentran las páginas _AppStart y _PageStart, devuelve <paramref name="page" />.</returns>
      <param name="page">Página.</param>
      <param name="fileName">Nombre del archivo de la página.</param>
      <param name="supportedExtensions">Colección de extensiones de nombre de archivo que contienen la sintaxis ASP.NET Razor como, por ejemplo, "cshtml" y "vbhtml".</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="page" /> o <paramref name="fileName" /> son null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="supportedExtensions" /> es null o está vacío.</exception>
    </member>
    <member name="P:System.Web.WebPages.StartPage.Layout">
      <summary>Obtiene o establece la ruta de acceso de la página de diseño de la página <see cref="P:System.Web.WebPages.StartPage.ChildPage" />.</summary>
      <returns>Ruta de acceso de la página de diseño de la página <see cref="P:System.Web.WebPages.StartPage.ChildPage" />.</returns>
    </member>
    <member name="P:System.Web.WebPages.StartPage.Page">
      <summary>Obtiene acceso similar a una propiedad a los datos de la página <see cref="P:System.Web.WebPages.StartPage.ChildPage" /> que se comparten entre las páginas, las páginas de diseño y las páginas parciales.</summary>
      <returns>Objeto que contiene datos de página <see cref="P:System.Web.WebPages.StartPage.ChildPage" />.</returns>
    </member>
    <member name="P:System.Web.WebPages.StartPage.PageData">
      <summary>Obtiene acceso similar a una matriz a los datos de la página <see cref="P:System.Web.WebPages.StartPage.ChildPage" /> que se comparten entre las páginas, las páginas de diseño y las páginas parciales.</summary>
      <returns>Objeto que proporciona acceso similar a una matriz a los datos de la página <see cref="P:System.Web.WebPages.StartPage.ChildPage" />.</returns>
    </member>
    <member name="M:System.Web.WebPages.StartPage.RenderPage(System.String,System.Object[])">
      <summary>Presenta la página <see cref="P:System.Web.WebPages.StartPage.ChildPage" />.</summary>
      <returns>El marcado HTML que representa la página web.</returns>
      <param name="path">Ruta de acceso a la página que se va a presentar.</param>
      <param name="data">Datos adicionales que se utilizan para presentar la página.</param>
    </member>
    <member name="M:System.Web.WebPages.StartPage.RunPage">
      <summary>Ejecuta el código escrito por el desarrollador en la página <see cref="P:System.Web.WebPages.StartPage.ChildPage" />.</summary>
    </member>
    <member name="M:System.Web.WebPages.StartPage.Write(System.Object)">
      <summary>Escribe la representación de cadena del objeto especificado como una cadena codificada en HTML.</summary>
      <param name="value">Objeto que se va a codificar y escribir.</param>
    </member>
    <member name="M:System.Web.WebPages.StartPage.Write(System.Web.WebPages.HelperResult)">
      <summary>Escribe la representación de cadena del objeto <see cref="T:System.Web.WebPages.HelperResult" /> especificado como una cadena codificada en HTML.</summary>
      <param name="result">Resultado de aplicación auxiliar que se va a codificar y escribir.</param>
    </member>
    <member name="M:System.Web.WebPages.StartPage.WriteLiteral(System.Object)">
      <summary>Escribe la representación de cadena del objeto especificado sin codificación HTML.</summary>
      <param name="value">Objeto que se escribirá.</param>
    </member>
    <member name="T:System.Web.WebPages.StringExtensions">
      <summary>Proporciona métodos de utilidad para convertir valores de cadenas a otros tipos de datos.</summary>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.As``1(System.String)">
      <summary>Convierte una cadena en un valor fuertemente tipado del tipo de datos especificado.</summary>
      <returns>El valor convertido.</returns>
      <param name="value">Valor al que se va a convertir.</param>
      <typeparam name="TValue">Tipo de datos al que se va a convertir.</typeparam>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.As``1(System.String,``0)">
      <summary>Convierte una cadena al tipo de datos especificado y especifica un valor predeterminado.</summary>
      <returns>El valor convertido.</returns>
      <param name="value">Valor al que se va a convertir.</param>
      <param name="defaultValue">Valor para devolver si <paramref name="value" /> es null.</param>
      <typeparam name="TValue">Tipo de datos al que se va a convertir.</typeparam>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.AsBool(System.String)">
      <summary>Convierte una cadena en un valor booleano (true/false).</summary>
      <returns>El valor convertido.</returns>
      <param name="value">Valor al que se va a convertir.</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.AsBool(System.String,System.Boolean)">
      <summary>Convierte una cadena a un valor booleano (true/false) y especifica un valor predeterminado.</summary>
      <returns>El valor convertido.</returns>
      <param name="value">Valor al que se va a convertir.</param>
      <param name="defaultValue">Valor para devolver si <paramref name="value" /> es null o es un valor no válido.</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.AsDateTime(System.String)">
      <summary>Convierte una cadena en un valor <see cref="T:System.DateTime" />.</summary>
      <returns>El valor convertido.</returns>
      <param name="value">Valor al que se va a convertir.</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.AsDateTime(System.String,System.DateTime)">
      <summary>Convierte una cadena en un valor <see cref="T:System.DateTime" /> y especifica un valor predeterminado.</summary>
      <returns>El valor convertido.</returns>
      <param name="value">Valor al que se va a convertir.</param>
      <param name="defaultValue">Valor para devolver si <paramref name="value" /> es null o es un valor no válido. El valor predeterminado es el valor de hora mínimo del sistema.</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.AsDecimal(System.String)">
      <summary>Convierte una cadena en un número <see cref="T:System.Decimal" />.</summary>
      <returns>El valor convertido.</returns>
      <param name="value">Valor al que se va a convertir.</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.AsDecimal(System.String,System.Decimal)">
      <summary>Convierte una cadena en un número <see cref="T:System.Decimal" /> y especifica un valor predeterminado.</summary>
      <returns>El valor convertido.</returns>
      <param name="value">Valor al que se va a convertir.</param>
      <param name="defaultValue">Valor para devolver si <paramref name="value" /> es null o no es válido.</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.AsFloat(System.String)">
      <summary>Convierte una cadena en un número <see cref="T:System.Single" />.</summary>
      <returns>El valor convertido.</returns>
      <param name="value">Valor al que se va a convertir.</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.AsFloat(System.String,System.Single)">
      <summary>Convierte una cadena en un número <see cref="T:System.Single" /> y especifica un valor predeterminado.</summary>
      <returns>El valor convertido.</returns>
      <param name="value">Valor al que se va a convertir.</param>
      <param name="defaultValue">Valor para devolver si <paramref name="value" /> es null.</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.AsInt(System.String)">
      <summary>Convierte una cadena en un entero.</summary>
      <returns>El valor convertido.</returns>
      <param name="value">Valor al que se va a convertir.</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.AsInt(System.String,System.Int32)">
      <summary>Convierte una cadena en un entero y especifica un valor predeterminado.</summary>
      <returns>El valor convertido.</returns>
      <param name="value">Valor al que se va a convertir.</param>
      <param name="defaultValue">Valor para devolver si <paramref name="value" /> es null o es un valor no válido.</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.Is``1(System.String)">
      <summary>Comprueba si se puede convertir una cadena en el tipo de datos especificado.</summary>
      <returns>true si se puede convertir <paramref name="value" /> en el tipo especificado; en caso contrario, false.</returns>
      <param name="value">Valor que se va a probar.</param>
      <typeparam name="TValue">Tipo de datos al que se va a convertir.</typeparam>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.IsBool(System.String)">
      <summary>Comprueba si se puede convertir una cadena a un valor de tipo booleano (true/false).</summary>
      <returns>true si se puede convertir <paramref name="value" /> en el tipo especificado; en caso contrario, false.</returns>
      <param name="value">Valor de cadena que se va a probar.</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.IsDateTime(System.String)">
      <summary>Comprueba si se puede convertir una cadena en el tipo <see cref="T:System.DateTime" />.</summary>
      <returns>true si se puede convertir <paramref name="value" /> en el tipo especificado; en caso contrario, false.</returns>
      <param name="value">Valor de cadena que se va a probar.</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.IsDecimal(System.String)">
      <summary>Comprueba si se puede convertir una cadena en el tipo <see cref="T:System.Decimal" />.</summary>
      <returns>true si se puede convertir <paramref name="value" /> en el tipo especificado; en caso contrario, false.</returns>
      <param name="value">Valor de cadena que se va a probar.</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.IsEmpty(System.String)">
      <summary>Comprueba si el valor de una cadena es null o si está vacío.</summary>
      <returns>true si <paramref name="value" /> es null o si es una cadena cuya longitud es equivalente a cero (""); de lo contrario, false.</returns>
      <param name="value">Valor de cadena que se va a probar.</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.IsFloat(System.String)">
      <summary>Comprueba si se puede convertir una cadena en el tipo <see cref="T:System.Single" />.</summary>
      <returns>true si se puede convertir <paramref name="value" /> en el tipo especificado; en caso contrario, false.</returns>
      <param name="value">Valor de cadena que se va a probar.</param>
    </member>
    <member name="M:System.Web.WebPages.StringExtensions.IsInt(System.String)">
      <summary>Comprueba si se puede convertir una cadena en un entero.</summary>
      <returns>true si se puede convertir <paramref name="value" /> en el tipo especificado; en caso contrario, false.</returns>
      <param name="value">Valor de cadena que se va a probar.</param>
    </member>
    <member name="T:System.Web.WebPages.TemplateFileInfo">
      <summary>Contiene métodos y propiedades que describen una plantilla de información de archivos.</summary>
    </member>
    <member name="M:System.Web.WebPages.TemplateFileInfo.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.WebPages.TemplateFileInfo" /> utilizando la ruta de acceso virtual especificada.</summary>
      <param name="virtualPath">Ruta de acceso virtual.</param>
    </member>
    <member name="P:System.Web.WebPages.TemplateFileInfo.VirtualPath">
      <summary>Obtiene la ruta de acceso virtual de la página web.</summary>
      <returns>Ruta de acceso virtual.</returns>
    </member>
    <member name="T:System.Web.WebPages.TemplateStack">
      <summary>Representa una colección del tipo el último en entrar es el primero en salir (LIFO) de los archivos de plantilla <see cref="T:System.Web.WebPages.ITemplateFile" />.</summary>
    </member>
    <member name="M:System.Web.WebPages.TemplateStack.GetCurrentTemplate(System.Web.HttpContextBase)">
      <summary>Devuelve el archivo de plantilla actual del contexto HTTP especificado.</summary>
      <returns>Archivo de plantilla, quitado de la parte superior de la pila.</returns>
      <param name="httpContext"> Contexto HTTP que contiene la pila que almacena los archivos de plantilla.</param>
    </member>
    <member name="M:System.Web.WebPages.TemplateStack.Pop(System.Web.HttpContextBase)">
      <summary>Quita y devuelve el archivo de plantilla situado en la parte superior de la pila en el contexto HTTP especificado.</summary>
      <returns>Archivo de plantilla, quitado de la parte superior de la pila.</returns>
      <param name="httpContext">Contexto HTTP que contiene la pila que almacena los archivos de plantilla.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="httpContext" /> es null.</exception>
    </member>
    <member name="M:System.Web.WebPages.TemplateStack.Push(System.Web.HttpContextBase,System.Web.WebPages.ITemplateFile)">
      <summary>Inserta un archivo de plantilla en la parte superior de la plantilla en el contexto HTTP especificado.</summary>
      <param name="httpContext">Contexto HTTP que contiene la pila que almacena los archivos de plantilla.</param>
      <param name="templateFile">Archivo de plantilla para enviar a la pila especificada.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="httpContext" /> o <paramref name="templateFile" /> son null.</exception>
    </member>
    <member name="T:System.Web.WebPages.ValidationHelper">
      <summary>Implementa la validación de la entrada de usuario.</summary>
    </member>
    <member name="M:System.Web.WebPages.ValidationHelper.Add(System.Collections.Generic.IEnumerable{System.String},System.Web.WebPages.IValidator[])">
      <summary>Registra una lista de elementos de entrada de usuario para su validación.</summary>
      <param name="fields">Los nombres (valor del atributo name) de los elementos de entrada del usuario que hay que validar.</param>
      <param name="validators">Tipo de validación que se debe registrar para cada elemento de entrada de usuario especificado en <paramref name="fields" />.</param>
    </member>
    <member name="M:System.Web.WebPages.ValidationHelper.Add(System.String,System.Web.WebPages.IValidator[])">
      <summary>Registra un elemento de entrada de usuario para su validación.</summary>
      <param name="field">El nombre (valor del atributo name) del elemento de entrada del usuario que hay que validar.</param>
      <param name="validators">Lista de uno o más tipos de validación para registrar.</param>
    </member>
    <member name="M:System.Web.WebPages.ValidationHelper.AddFormError(System.String)"></member>
    <member name="M:System.Web.WebPages.ValidationHelper.ClassFor(System.String)">
      <summary>Presenta un atributo que hace referencia a la definición de estilo CSS que se debe utilizar cuando se presentan los mensajes de validación para el elemento de entrada de usuario.</summary>
      <returns>El atributo.</returns>
      <param name="field">El nombre (valor del atributo name) del elemento de entrada del usuario que hay que validar.</param>
    </member>
    <member name="M:System.Web.WebPages.ValidationHelper.For(System.String)">
      <summary>Presenta los atributos que habilitan la validación del lado cliente de un elemento de entrada de usuario individual.</summary>
      <returns>Los atributos que se van a presentar.</returns>
      <param name="field">El nombre (valor del atributo name) del elemento de entrada del usuario que hay que validar.</param>
    </member>
    <member name="P:System.Web.WebPages.ValidationHelper.FormField">
      <summary>Obtiene el nombre del formulario actual. Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código. </summary>
      <returns>Nombre.</returns>
    </member>
    <member name="M:System.Web.WebPages.ValidationHelper.GetErrors(System.String[])">
      <summary>Devuelve una lista de los errores de validación actuales y, de manera opcional, permite especificar una lista de los campos para comprobar.</summary>
      <returns>Lista de errores.</returns>
      <param name="fields">Opcional. Los nombres (valor del atributo name) de los elementos de entrada del usuario para los que se debe obtener la información de error. Puede especificar cualquier número de nombres de elementos, separados por comas. Si no especifica ninguna lista de campos, el método devuelve errores para todos los campos.</param>
    </member>
    <member name="P:System.Web.WebPages.ValidationHelper.InvalidCssClass">
      <summary>Obtiene el nombre de la clase que se utiliza para especificar el aspecto de visualización del mensaje de error cuando existen errores. Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código. </summary>
      <returns>Nombre.</returns>
    </member>
    <member name="M:System.Web.WebPages.ValidationHelper.IsValid(System.String[])">
      <summary>Determina si el contenido de los campos de entrada de usuario superan las comprobaciones de validación y, de manera opcional, permite especificar una lista de campos para comprobar.</summary>
      <returns>true si todos los campos especificados superan las comprobaciones de validación; false si alguno de los campos contiene un error de validación.</returns>
      <param name="fields">Opcional. Los nombres (valor del atributo name) de los elementos de entrada del usuario cuyos errores de validación se van a comprobar. Puede especificar cualquier número de nombres de elementos, separados por comas. Si no especifica ninguna lista de campos, el método comprueba todos los elementos que se hayan registrado para la validación.</param>
    </member>
    <member name="M:System.Web.WebPages.ValidationHelper.RequireField(System.String)">
      <summary>Registra el campo especificado como uno que requiere la entrada del usuario.</summary>
      <param name="field">El nombre (valor del atributo name) del elemento de entrada del usuario que hay que validar.</param>
    </member>
    <member name="M:System.Web.WebPages.ValidationHelper.RequireField(System.String,System.String)">
      <summary>Registra el campo especificado como campo que requiere entrada de usuario y registra la cadena especificada como mensaje de error para mostrar en caso de que no se suministre ningún valor.</summary>
      <param name="field">El nombre (valor del atributo name) del elemento de entrada del usuario que hay que validar.</param>
      <param name="errorMessage">Mensaje de error.</param>
    </member>
    <member name="M:System.Web.WebPages.ValidationHelper.RequireFields(System.String[])">
      <summary>Registra los campos especificados como campos que requieren entrada del usuario.</summary>
      <param name="fields">Los nombres (valor del atributo name) de los elementos de entrada del usuario que hay que validar. Puede especificar cualquier número de nombres de elementos, separados por comas.</param>
    </member>
    <member name="M:System.Web.WebPages.ValidationHelper.Validate(System.String[])">
      <summary>Lleva a cabo tareas de validación de elementos registrados para la validación y permite, de manera opcional, especificar una lista de campos para comprobar.</summary>
      <returns>La lista de errores de los campos especificados, en caso de que haya errores de validación.</returns>
      <param name="fields">Opcional. Los nombres (valor del atributo name) de los elementos de entrada del usuario que hay que validar. Puede especificar cualquier número de nombres de elementos, separados por comas. Si no especifica ninguna lista, el método valida todos los elementos registrados.</param>
    </member>
    <member name="P:System.Web.WebPages.ValidationHelper.ValidCssClass">
      <summary>Obtiene el nombre de la clase que se utiliza para especificar el aspecto de visualización del mensaje de error cuando existen errores. Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código. </summary>
      <returns>Nombre.</returns>
    </member>
    <member name="T:System.Web.WebPages.Validator">
      <summary>Define pruebas de validación que pueden registrarse mediante el método <see cref="M:System.Web.WebPages.ValidationHelper.Add(System.String,System.Web.WebPages.IValidator[])" />.</summary>
    </member>
    <member name="M:System.Web.WebPages.Validator.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.WebPages.Validator" />.</summary>
    </member>
    <member name="M:System.Web.WebPages.Validator.DateTime(System.String)">
      <summary>Define una prueba de validación que prueba si un valor puede tratarse como valor de fecha/hora.</summary>
      <returns>Prueba de validación.</returns>
      <param name="errorMessage">Mensaje de error que mostrar si falla la validación.</param>
    </member>
    <member name="M:System.Web.WebPages.Validator.Decimal(System.String)">
      <summary>Define una prueba de validación que prueba si un valor puede tratarse como número decimal.</summary>
      <returns>Prueba de validación.</returns>
      <param name="errorMessage">Mensaje de error que mostrar si falla la validación.</param>
    </member>
    <member name="M:System.Web.WebPages.Validator.EqualsTo(System.String,System.String)">
      <summary>Define una prueba de validación que prueba la entrada de usuario con respecto al valor de otro campo.</summary>
      <returns>Prueba de validación.</returns>
      <param name="errorMessage">Mensaje de error que mostrar si falla la validación.</param>
    </member>
    <member name="M:System.Web.WebPages.Validator.Float(System.String)">
      <summary>Define una prueba de validación que prueba si un valor puede tratarse como número de coma flotante.</summary>
      <returns>Prueba de validación.</returns>
      <param name="errorMessage">Mensaje de error que mostrar si falla la validación.</param>
    </member>
    <member name="M:System.Web.WebPages.Validator.Integer(System.String)">
      <summary>Define una prueba de validación que prueba si un valor puede tratarse como entero.</summary>
      <returns>Prueba de validación.</returns>
      <param name="errorMessage">Mensaje de error que mostrar si falla la validación.</param>
    </member>
    <member name="M:System.Web.WebPages.Validator.Range(System.Double,System.Double,System.String)">
      <summary>Define una prueba de validación que prueba si un número decimal está dentro de un rango específico.</summary>
      <returns>Prueba de validación.</returns>
      <param name="minValue">El valor mínimo. El valor predeterminado es 0.</param>
      <param name="maxValue">El valor máximo.</param>
      <param name="errorMessage">Mensaje de error que mostrar si falla la validación.</param>
    </member>
    <member name="M:System.Web.WebPages.Validator.Range(System.Int32,System.Int32,System.String)">
      <summary>Define una prueba de validación que prueba si un valor entero está dentro de un rango específico.</summary>
      <returns>Prueba de validación.</returns>
      <param name="minValue">El valor mínimo. El valor predeterminado es 0.</param>
      <param name="maxValue">El valor máximo. </param>
      <param name="errorMessage">Mensaje de error que mostrar si falla la validación.</param>
    </member>
    <member name="M:System.Web.WebPages.Validator.Regex(System.String,System.String)">
      <summary>Define una prueba de validación que prueba un valor con respecto a un patrón especificado como expresión regular.</summary>
      <returns>Prueba de validación.</returns>
      <param name="pattern">Expresión regular que se debe utilizar para probar la entrada de usuario.</param>
      <param name="errorMessage">Mensaje de error que mostrar si falla la validación.</param>
    </member>
    <member name="M:System.Web.WebPages.Validator.Required(System.String)">
      <summary>Define una prueba de validación que prueba si un valor se ha proporcionado.</summary>
      <returns>Prueba de validación.</returns>
      <param name="errorMessage">Mensaje de error que mostrar si falla la validación.</param>
    </member>
    <member name="M:System.Web.WebPages.Validator.StringLength(System.Int32,System.Int32,System.String)">
      <summary>Define una prueba de validación que prueba la longitud de una cadena.</summary>
      <returns>Prueba de validación.</returns>
      <param name="maxLength">Longitud máxima de la cadena.</param>
      <param name="minLength">Longitud mínima de la cadena. El valor predeterminado es 0.</param>
      <param name="errorMessage">Mensaje de error que mostrar si falla la validación.</param>
    </member>
    <member name="M:System.Web.WebPages.Validator.Url(System.String)">
      <summary>Define una prueba de validación que prueba si un valor es una dirección URL correctamente formada.</summary>
      <returns>Prueba de validación.</returns>
      <param name="errorMessage">Mensaje de error que mostrar si falla la validación.</param>
    </member>
    <member name="T:System.Web.WebPages.VirtualPathFactoryManager">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Web.WebPages.VirtualPathFactoryManager.CreateInstance(System.String)">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Web.WebPages.VirtualPathFactoryManager.Exists(System.String)">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Web.WebPages.VirtualPathFactoryManager.RegisterVirtualPathFactory(System.Web.WebPages.IVirtualPathFactory)">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="T:System.Web.WebPages.WebPage">
      <summary>Representa una página ASP.NET Razor.</summary>
    </member>
    <member name="M:System.Web.WebPages.WebPage.#ctor">
      <summary>Se llaman desde una clase derivada para crear una nueva instancia basada en la clase <see cref="T:System.Web.WebPages.WebPage" />.</summary>
    </member>
    <member name="P:System.Web.WebPages.WebPage.Context">
      <summary>Obtiene o establece el objeto <see cref="T:System.Web.HttpContextBase" /> asociado con una página.</summary>
      <returns>Los datos de contexto actuales.</returns>
    </member>
    <member name="M:System.Web.WebPages.WebPage.ExecutePageHierarchy">
      <summary>Ejecuta el código en un conjunto de páginas dependientes.</summary>
    </member>
    <member name="P:System.Web.WebPages.WebPage.Html">
      <summary>Obtiene el objeto <see cref="T:System.Web.WebPages.Html.HtmlHelper" /> que está asociado con una página.</summary>
      <returns>Objeto que puede presentar controles de formulario HTML en una página.</returns>
    </member>
    <member name="M:System.Web.WebPages.WebPage.InitializePage">
      <summary>Inicializa un objeto heredado de la clase <see cref="T:System.Web.WebPages.WebPage" />.</summary>
    </member>
    <member name="P:System.Web.WebPages.WebPage.Model">
      <summary>Obtiene el modelo que está asociado con una página.</summary>
      <returns>Objeto que representa un modelo que está asociado con los datos de visualización para una página.</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPage.ModelState">
      <summary>Obtiene el estado del modelo asociado a una página.</summary>
      <returns>Estado del modelo.</returns>
    </member>
    <member name="M:System.Web.WebPages.WebPage.RegisterPageExecutor(System.Web.WebPages.IWebPageRequestExecutor)">
      <summary>Agrega una clase a una lista de clases que controlan la ejecución de la página y que implementan características personalizadas para las páginas.</summary>
      <param name="executor">Clase para agregar.</param>
    </member>
    <member name="M:System.Web.WebPages.WebPage.RenderPage(System.String,System.Object[])">
      <summary>Presenta una página de contenido.</summary>
      <returns>Objeto que puede escribir el resultado de la página.</returns>
      <param name="path">Ruta de acceso a la página que se va a presentar.</param>
      <param name="data">Datos para pasar a la página.</param>
    </member>
    <member name="P:System.Web.WebPages.WebPage.Validation">
      <summary>Obtiene la aplicación auxiliar de validación del contexto de la página actual.</summary>
      <returns>Aplicación auxiliar de validación.</returns>
    </member>
    <member name="T:System.Web.WebPages.WebPageBase">
      <summary>Sirve como clase de base para clases que representan una página ASP.NET Razor.</summary>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.#ctor">
      <summary>Inicializa la clase <see cref="T:System.Web.WebPages.WebPageBase" /> para su uso por una instancia de clase heredada. Solo una clase heredada puede llamar a este constructor.</summary>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.ConfigurePage(System.Web.WebPages.WebPageBase)">
      <summary>Cuando se omite en una clase derivada, configura la página web actual en función de la configuración de la página web primaria.</summary>
      <param name="parentPage">La página primaria desde la que se va a leer la información de configuración.</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.CreateInstanceFromVirtualPath(System.String)">
      <summary>Crea una nueva instancia de la clase <see cref="T:System.Web.WebPages.WebPageBase" /> utilizando la ruta de acceso virtual especificada.</summary>
      <returns>Nuevo objeto <see cref="T:System.Web.WebPages.WebPageBase" />.</returns>
      <param name="virtualPath">Ruta de acceso virtual que se va a utilizar para crear la instancia.</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.DefineSection(System.String,System.Web.WebPages.SectionWriter)">
      <summary>Llamado por las páginas de contenido para crear secciones de contenido nombrado.</summary>
      <param name="name">Nombre de la sección para crear.</param>
      <param name="action">Tipo de acción que se va a llevar a cabo con la nueva sección.</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.ExecutePageHierarchy">
      <summary>Ejecuta el código en un conjunto de páginas web dependientes.</summary>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.ExecutePageHierarchy(System.Web.WebPages.WebPageContext,System.IO.TextWriter)">
      <summary>Ejecuta el código en un conjunto de páginas web dependientes utilizando parámetros especificados.</summary>
      <param name="pageContext">Datos de contexto para la página.</param>
      <param name="writer">Escritor que se va a utilizar para escribir el HTML ejecutado.</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.ExecutePageHierarchy(System.Web.WebPages.WebPageContext,System.IO.TextWriter,System.Web.WebPages.WebPageRenderingBase)">
      <summary>Ejecuta el código en un conjunto de páginas web dependientes utilizando la página de inicio, el escritor y el contexto especificados.</summary>
      <param name="pageContext">Datos de contexto para la página.</param>
      <param name="writer">Escritor que se va a utilizar para escribir el HTML ejecutado.</param>
      <param name="startPage">Página para iniciar la ejecución en la jerarquía de la página.</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.GetOutputWriter">
      <summary>Devuelve la instancia del escritor de texto que se utiliza para presentar la página.</summary>
      <returns>Escritor de texto.</returns>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.InitializePage">
      <summary>Inicializa la página actual.</summary>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.IsSectionDefined(System.String)">
      <summary>Devuelve un valor que indica si la sección especificada está definida en la página.</summary>
      <returns>true si la sección especificada está definida en la página; de lo contrario false.</returns>
      <param name="name">Nombre de la sección para buscar.</param>
    </member>
    <member name="P:System.Web.WebPages.WebPageBase.Layout">
      <summary>Obtiene o establece la ruta de acceso de la página de diseño.</summary>
      <returns>Ruta de acceso de la página de diseño.</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPageBase.Output">
      <summary>Obtiene el objeto <see cref="T:System.IO.TextWriter" /> actual de la página.</summary>
      <returns>Objeto <see cref="T:System.IO.TextWriter" />.</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPageBase.OutputStack">
      <summary>Obtiene la pila de objetos <see cref="T:System.IO.TextWriter" /> del contexto de la página actual.</summary>
      <returns>Objetos <see cref="T:System.IO.TextWriter" />.</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPageBase.Page">
      <summary>Proporciona un acceso similar a una propiedad a los datos de la página que se comparte entre las páginas, las páginas de diseño y las páginas parciales.</summary>
      <returns>Objeto que contiene los datos de la página.</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPageBase.PageData">
      <summary>Proporciona un acceso similar a una matriz a los datos de la página que se comparte entre las páginas, las páginas de diseño y las páginas parciales.</summary>
      <returns>Diccionario que contiene los datos de la página.</returns>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.PopContext">
      <summary>Devuelve y quita el contexto de la parte superior de la instancia <see cref="P:System.Web.WebPages.WebPageBase.OutputStack" />.</summary>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.PushContext(System.Web.WebPages.WebPageContext,System.IO.TextWriter)">
      <summary>Inserta el contexto especificado en la parte superior de la instancia <see cref="P:System.Web.WebPages.WebPageBase.OutputStack" />.</summary>
      <param name="pageContext">Contexto de la página para enviar a la instancia <see cref="P:System.Web.WebPages.WebPageBase.OutputStack" />.</param>
      <param name="writer">Escritor del contexto de la página.</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.RenderBody">
      <summary>En las páginas de diseño, presenta la parte de la página de contenido que no está en una sección con nombre.</summary>
      <returns>Contenido HTML que se presentará.</returns>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.RenderPage(System.String,System.Object[])">
      <summary>Presenta el contenido de una página en otra página.</summary>
      <returns>Contenido HTML que se presentará.</returns>
      <param name="path">Ruta de acceso a la página que se va a presentar.</param>
      <param name="data">(Opcional) Matriz de datos para pasar a la página que se está presentando. En la página presentada, es posible tener acceso a estos parámetros mediante la propiedad <see cref="P:System.Web.WebPages.WebPageBase.PageData" />.</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.RenderSection(System.String)">
      <summary>En páginas de diseño, presenta el contenido de una sección designada.</summary>
      <returns>Contenido HTML que se presentará.</returns>
      <param name="name">Sección que se va a presentar.</param>
      <exception cref="T:System.Web.HttpException">La sección <paramref name="name" /> ya se ha presentado.O bienLa sección <paramref name="name" /> se ha marcado como obligatoria pero no se ha encontrado.</exception>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.RenderSection(System.String,System.Boolean)">
      <summary>En páginas de diseño, presenta el contenido de una sección con nombre y especifica si la sección es obligatoria.</summary>
      <returns>Contenido HTML que se presentará.</returns>
      <param name="name">Sección que se va a presentar.</param>
      <param name="required">true para especificar que la sección es obligatoria; de lo contrario false.</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.Write(System.Object)">
      <summary>Escribe el objeto especificado como cadena codificada en HTML.</summary>
      <param name="value">Objeto que se va a codificar y escribir.</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.Write(System.Web.WebPages.HelperResult)">
      <summary>Escribe el objeto <see cref="T:System.Web.WebPages.HelperResult" /> especificado como cadena codificada en HTML.</summary>
      <param name="result">Resultado de aplicación auxiliar que se va a codificar y escribir.</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageBase.WriteLiteral(System.Object)">
      <summary>Escribe el objeto especificado sin codificación HTML en primer lugar.</summary>
      <param name="value">Objeto que se escribirá.</param>
    </member>
    <member name="T:System.Web.WebPages.WebPageContext">
      <summary>Contiene los datos que utiliza el objeto <see cref="T:System.Web.WebPages.WebPage" /> para referirse a los detalles de la aplicación web, a la solicitud HTTP actual, al contexto de la ejecución actual y a los datos de presentación de página.</summary>
    </member>
    <member name="M:System.Web.WebPages.WebPageContext.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.WebPages.WebPageContext" />.</summary>
    </member>
    <member name="M:System.Web.WebPages.WebPageContext.#ctor(System.Web.HttpContextBase,System.Web.WebPages.WebPageRenderingBase,System.Object)">
      <summary>Inicia una nueva instancia de la clase utilizando el contexto, la página y el modelo especificados.</summary>
      <param name="context">Datos de contexto de la solicitud HTTP para asociar al contexto de la página.</param>
      <param name="page">Datos de la página para compartir entre las páginas, las páginas de diseño y las páginas parciales.</param>
      <param name="model">Modelo para asociar a los datos de visualización.</param>
    </member>
    <member name="P:System.Web.WebPages.WebPageContext.Current">
      <summary>Obtiene una referencia al objeto <see cref="T:System.Web.WebPages.WebPageContext" /> actual que está asociado a la página.</summary>
      <returns>Objeto de contexto de la página actual.</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPageContext.Model">
      <summary>Obtiene el modelo que está asociado con una página.</summary>
      <returns>Objeto que representa un modelo que está asociado con los datos de visualización para una página.</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPageContext.Page">
      <summary>Obtiene el objeto <see cref="T:System.Web.WebPages.WebPageRenderingBase" /> que está asociado con una página.</summary>
      <returns>Objeto que presenta la página.</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPageContext.PageData">
      <summary>Obtiene los datos de la página que se comparten en las páginas, las páginas de diseño y las páginas parciales.</summary>
      <returns>Diccionario que contiene los datos de la página.</returns>
    </member>
    <member name="T:System.Web.WebPages.WebPageExecutingBase">
      <summary>Proporciona objetos y métodos que se utilizan para ejecutar y presentar páginas ASP.NET que incluyen sintaxis Razor.</summary>
    </member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.#ctor">
      <summary>Inicializa la clase <see cref="T:System.Web.WebPages.WebPageExecutingBase" /> para su uso por una instancia de clase heredada. Solo una clase heredada puede llamar a este constructor.</summary>
    </member>
    <member name="P:System.Web.WebPages.WebPageExecutingBase.App">
      <summary>Obtiene los datos de aplicación-estado como objeto <see cref="T:System.Dynamic.DynamicObject" /> que pueden utilizar los llamadores para crear y obtener acceso a propiedades personalizadas en el ámbito de la aplicación.</summary>
      <returns>Datos de aplicación-estado.</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPageExecutingBase.AppState">
      <summary>Obtiene una referencia a datos globales de aplicación-estado que se pueden compartir entre sesiones y solicitudes en una aplicación ASP.NET.</summary>
      <returns>Datos de aplicación-estado.</returns>
    </member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.BeginContext(System.Int32,System.Int32,System.Boolean)">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.BeginContext(System.IO.TextWriter,System.Int32,System.Int32,System.Boolean)">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.BeginContext(System.IO.TextWriter,System.String,System.Int32,System.Int32,System.Boolean)">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.BeginContext(System.String,System.Int32,System.Int32,System.Boolean)">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="P:System.Web.WebPages.WebPageExecutingBase.Context">
      <summary>Cuando se omite en una clase derivada, se obtiene o se establece el objeto <see cref="T:System.Web.HttpContextBase" /> que se asocia a una página.</summary>
      <returns>Los datos de contexto actuales.</returns>
    </member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.EndContext(System.Int32,System.Int32,System.Boolean)">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.EndContext(System.IO.TextWriter,System.Int32,System.Int32,System.Boolean)">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.EndContext(System.IO.TextWriter,System.String,System.Int32,System.Int32,System.Boolean)">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.EndContext(System.String,System.Int32,System.Int32,System.Boolean)">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.Execute">
      <summary>Ejecuta el código del servidor en la página web actual marcada como ejecuta la sintaxis Razor.</summary>
    </member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.GetOutputWriter">
      <summary>Devuelve la instancia del escritor de texto que se utiliza para presentar la página.</summary>
      <returns>Escritor de texto.</returns>
    </member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.Href(System.String,System.Object[])">
      <summary>Crea una dirección URL absoluta a partir de una dirección URL relativa de la aplicación utilizando los parámetros especificados.</summary>
      <returns>Dirección URL absoluta.</returns>
      <param name="path">La ruta de acceso inicial para utilizar en la dirección URL.</param>
      <param name="pathParts">Información adicional de la ruta de acceso, como carpetas y subcarpetas.</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.NormalizePath(System.String)">
      <summary>Devuelve una ruta de acceso normalizada de la ruta de acceso especificada.</summary>
      <returns>La ruta de acceso normalizada.</returns>
      <param name="path">La ruta de acceso para normalizar.</param>
    </member>
    <member name="P:System.Web.WebPages.WebPageExecutingBase.VirtualPath">
      <summary>Obtiene o establece la ruta de acceso virtual de la página.</summary>
      <returns>Ruta de acceso virtual.</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPageExecutingBase.VirtualPathFactory">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.Write(System.Object)">
      <summary>Escribe la representación de cadena del objeto especificado como una cadena codificada en HTML.</summary>
      <param name="value">Objeto que se va a codificar y escribir.</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.Write(System.Web.WebPages.HelperResult)">
      <summary>Escribe el objeto <see cref="T:System.Web.WebPages.HelperResult" /> especificado como cadena codificada en HTML.</summary>
      <param name="result">Resultado de aplicación auxiliar que se va a codificar y escribir.</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.WriteAttribute(System.String,System.Web.WebPages.Instrumentation.PositionTagged{System.String},System.Web.WebPages.Instrumentation.PositionTagged{System.String},System.Web.WebPages.AttributeValue[])">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.WriteAttributeTo(System.IO.TextWriter,System.String,System.Web.WebPages.Instrumentation.PositionTagged{System.String},System.Web.WebPages.Instrumentation.PositionTagged{System.String},System.Web.WebPages.AttributeValue[])">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.WriteAttributeTo(System.String,System.IO.TextWriter,System.String,System.Web.WebPages.Instrumentation.PositionTagged{System.String},System.Web.WebPages.Instrumentation.PositionTagged{System.String},System.Web.WebPages.AttributeValue[])">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.WriteLiteral(System.Object)">
      <summary>Escribe el objeto especificado sin codificación HTML.</summary>
      <param name="value">Objeto que se escribirá.</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.WriteLiteralTo(System.IO.TextWriter,System.Object)">
      <summary>Escribe el objeto especificado en la instancia <see cref="T:System.IO.TextWriter" /> especificada sin la codificación HTML.</summary>
      <param name="writer">Escritor de texto.</param>
      <param name="content">Objeto que se escribirá.</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.WriteTo(System.IO.TextWriter,System.Object)">
      <summary>Escribe el objeto especificado como cadena codificada en HTML en el escritor de texto especificado.</summary>
      <param name="writer">Escritor de texto.</param>
      <param name="content">Objeto que se va a codificar y escribir.</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageExecutingBase.WriteTo(System.IO.TextWriter,System.Web.WebPages.HelperResult)">
      <summary>Escribe el objeto <see cref="T:System.Web.WebPages.HelperResult" /> especificado como cadena codificada en HTML en el escritor de texto especificado.</summary>
      <param name="writer">Escritor de texto.</param>
      <param name="content">Resultado de aplicación auxiliar que se va a codificar y escribir.</param>
    </member>
    <member name="T:System.Web.WebPages.WebPageHttpHandler">
      <summary>Proporciona métodos y propiedades que se utilizan para procesar extensiones de dirección URL específicas.</summary>
    </member>
    <member name="M:System.Web.WebPages.WebPageHttpHandler.#ctor(System.Web.WebPages.WebPage)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.WebPages.WebPageHttpHandler" /> utilizando la página web especificada.</summary>
      <param name="webPage">Página web para procesar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="webPage" /> es null.</exception>
    </member>
    <member name="M:System.Web.WebPages.WebPageHttpHandler.CreateFromVirtualPath(System.String)">
      <summary>Crea un nuevo objeto de controlador <see cref="T:System.Web.IHttpHandler" /> desde la ruta de acceso virtual especificada.</summary>
      <returns>Objeto <see cref="T:System.Web.IHttpHandler" /> para la ruta de acceso virtual especificada.</returns>
      <param name="virtualPath">Ruta de acceso virtual que se va a utilizar para crear el controlador.</param>
    </member>
    <member name="P:System.Web.WebPages.WebPageHttpHandler.DisableWebPagesResponseHeader">
      <summary>Obtiene o establece un valor que indica si los encabezados de respuesta de la página web están deshabilitados.</summary>
      <returns>true si los encabezados de respuesta de la página web están deshabilitados; de lo contrario false.</returns>
    </member>
    <member name="M:System.Web.WebPages.WebPageHttpHandler.GetRegisteredExtensions">
      <summary>Devuelve una lista de extensiones de nombres de archivo que la instancia actual de <see cref="T:System.Web.WebPages.WebPageHttpHandler" /> puede procesar.</summary>
      <returns>Lista de solo lectura de las extensiones de nombre de archivo procesadas por la instancia actual de <see cref="T:System.Web.WebPages.WebPageHttpHandler" />.</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPageHttpHandler.IsReusable">
      <summary>Obtiene un valor que indica si otra solicitud puede utilizar la instancia de <see cref="T:System.Web.WebPages.WebPageHttpHandler" />.</summary>
      <returns>true si la instancia <see cref="T:System.Web.WebPages.WebPageHttpHandler" /> se puede volver a utilizar; de lo contrario false.</returns>
    </member>
    <member name="M:System.Web.WebPages.WebPageHttpHandler.ProcessRequest(System.Web.HttpContext)">
      <summary>Procesa la página web mediante el contexto especificado.</summary>
      <param name="context">Contexto que se debe utilizar durante el procesamiento de la página web.</param>
    </member>
    <member name="M:System.Web.WebPages.WebPageHttpHandler.RegisterExtension(System.String)">
      <summary>Agrega una extensión de nombre de archivo a la lista de extensiones procesadas por la instancia actual de <see cref="T:System.Web.WebPages.WebPageHttpHandler" />.</summary>
      <param name="extension">Extensión para agregar, sin punto inicial.</param>
    </member>
    <member name="F:System.Web.WebPages.WebPageHttpHandler.WebPagesVersionHeaderName">
      <summary>Nombre de etiqueta HTML (X-AspNetWebPages-Version) de la versión de la especificación de las páginas web ASP.NET que se utiliza en esta página web.</summary>
    </member>
    <member name="T:System.Web.WebPages.WebPageRenderingBase">
      <summary>Proporciona métodos y propiedades que se utilizan para presentar páginas que utilizan el motor de vista Razor.</summary>
    </member>
    <member name="M:System.Web.WebPages.WebPageRenderingBase.#ctor">
      <summary>Inicia una nueva instancia de la clase <see cref="T:System.Web.WebPages.WebPageRenderingBase" />.</summary>
    </member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.Cache">
      <summary>Si se omite en una clase derivada, obtiene el objeto de caché del dominio de aplicación actual.</summary>
      <returns>Objeto de caché.</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.Culture">
      <summary>Si se omite en una clase derivada, obtiene o establece la cultura del subproceso actual.</summary>
      <returns>Cultura del subproceso actual.</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.DisplayMode">
      <summary>Obtiene el modo de visualización de la solicitud.</summary>
      <returns>Modo de visualización.</returns>
    </member>
    <member name="M:System.Web.WebPages.WebPageRenderingBase.ExecutePageHierarchy">
      <summary>Cuando se omite en una clase derivada, llama a los métodos que se utilizan para inicializar la página.</summary>
    </member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.IsAjax">
      <summary>Si se omite en una clase derivada, obtiene un valor que indica si se está utilizando Ajax durante la solicitud de la página web.</summary>
      <returns>true si se va a utilizar Ajax durante la solicitud; en caso contrario, false.</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.IsPost">
      <summary>Si se omite en una clase derivada, devuelve un valor que indica si el método de transferencia de datos HTTP que utiliza el cliente para solicitar la página web es una solicitud de POST.</summary>
      <returns>true si el verbo HTTP es POST; de lo contrario, false.false.</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.Layout">
      <summary>Si se omite en una clase derivada, obtiene o establece la ruta de acceso de la página de diseño.</summary>
      <returns>Ruta de acceso de una página de diseño.</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.Page">
      <summary>Si se omite en una clase derivada, proporciona acceso similar a una propiedad a los datos de la página que se comparten entre las páginas, las páginas de diseño y las páginas parciales.</summary>
      <returns>Objeto que contiene los datos de la página.</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.PageContext">
      <summary>Si se omite en una clase derivada, obtiene el contexto HTTP de la página web.</summary>
      <returns>Contexto HTTP para la página web.</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.PageData">
      <summary>Si se omite en una clase derivada, proporciona acceso similar a una matriz a los datos de la página que se comparten entre las páginas, las páginas de diseño y las páginas parciales.</summary>
      <returns>Objeto que proporciona acceso similar a matriz a los datos de una página.</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.Profile">
      <summary>Obtiene la información de perfil del contexto de la solicitud actual.</summary>
      <returns>Información de perfil.</returns>
    </member>
    <member name="M:System.Web.WebPages.WebPageRenderingBase.RenderPage(System.String,System.Object[])">
      <summary>Cuando se omite en una clase derivada, presenta una página web.</summary>
      <returns>El marcado que representa la página web.</returns>
      <param name="path">Ruta de acceso a la página que se va a presentar.</param>
      <param name="data">Datos adicionales que se utilizan para presentar la página.</param>
    </member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.Request">
      <summary>Si se omite en una clase derivada, obtiene el objeto <see cref="T:System.Web.HttpRequest" /> para la solicitud HTTP actual.</summary>
      <returns>Objeto <see cref="T:System.Web.HttpRequest" /> que contiene los valores HTTP enviados por un cliente durante una solicitud web.</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.Response">
      <summary>Si se omite en una clase derivada, obtiene el objeto <see cref="T:System.Web.HttpResponse" /> para la respuesta HTTP actual.</summary>
      <returns>Objeto <see cref="T:System.Web.HttpResponse" /> que contiene la información de respuesta HTTP de una operación ASP.NET.</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.Server">
      <summary>Si se omite en una clase derivada, obtiene el objeto <see cref="T:System.Web.HttpServerUtility" /> que proporciona los métodos que se pueden utilizar como parte del procesamiento de la página web.</summary>
      <returns>Objeto <see cref="T:System.Web.HttpServerUtility" />.</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.Session">
      <summary>Si se omite en una clase derivada, obtiene el objeto <see cref="T:System.Web.HttpSessionState" /> para la solicitud HTTP actual.</summary>
      <returns>Datos de sesión de la solicitud actual.</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.TemplateInfo">
      <summary>Si se omite en una clase derivada, obtiene la información sobre el archivo que se está ejecutando.</summary>
      <returns>Información sobre el archivo que se está ejecutando.</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.UICulture">
      <summary>Si se omite en una clase derivada, obtiene o establece la cultura actual utilizada por el Administrador de recursos para buscar recursos con una cultura específica en tiempo de ejecución.</summary>
      <returns>Cultura actual utilizada por el Administrador de recursos.</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.UrlData">
      <summary>Si se omite en una clase derivada, obtiene los datos relacionados con la ruta de acceso URL.</summary>
      <returns>Datos relacionados con la ruta de acceso URL.</returns>
    </member>
    <member name="P:System.Web.WebPages.WebPageRenderingBase.User">
      <summary>Si se omite en una clase derivada, obtiene un valor de usuario basado en el contexto HTTP.</summary>
      <returns>Valor de usuario basado en el contexto HTTP.</returns>
    </member>
    <member name="T:System.Web.WebPages.Html.HtmlHelper">
      <summary>Permite presentar controles de formularios HTML y llevar a cabo la validación de formularios en una página web.</summary>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.AttributeEncode(System.Object)">
      <summary>Devuelve una cadena con codificación HTML que representa el objeto especificado usando la mínima codificación que es adecuada solo para atributos HTML escritos entre comillas.</summary>
      <returns>Cadena con código HTML que representa el objeto.</returns>
      <param name="value">Objeto que se va a codificar.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.AttributeEncode(System.String)">
      <summary>Devuelve una cadena con codificación HTML que representa la cadena especificada usando la mínima codificación que es adecuada solo para atributos HTML escritos entre comillas.</summary>
      <returns>Cadena con código HTML que representa la cadena original.</returns>
      <param name="value">Cadena que se va a codificar.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.CheckBox(System.String)">
      <summary>Devuelve un control de casilla HTML que contiene el nombre especificado.</summary>
      <returns>La marca HTML que representa el control de casilla.</returns>
      <param name="name">El valor que asignar al atributo name del elemento de control HTML.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.CheckBox(System.String,System.Boolean)">
      <summary>Devuelve un control de casilla HTML que contiene el nombre especificado y el estado activado predeterminado.</summary>
      <returns>La marca HTML que representa el control de casilla.</returns>
      <param name="name">El valor que asignar al atributo name del elemento de control HTML.</param>
      <param name="isChecked">true para indicar que el atributo checked está definido en checked; en caso contrario, false.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.CheckBox(System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve un control de casilla HTML que contiene el nombre especificado, el estado activado predeterminado y atributos personalizados definidos por un diccionario de atributos.</summary>
      <returns>La marca HTML que representa el control de casilla.</returns>
      <param name="name">El valor que asignar al atributo name del elemento de control HTML.</param>
      <param name="isChecked">true para indicar que el atributo checked está definido en checked; en caso contrario, false.</param>
      <param name="htmlAttributes">Los nombres y valores de los atributos personalizados del elemento.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.CheckBox(System.String,System.Boolean,System.Object)">
      <summary>Devuelve un control de casilla HTML que contiene el nombre especificado, el estado activado predeterminado y atributos personalizados definidos por un objeto de atributo.</summary>
      <returns>La marca HTML que representa el control de casilla.</returns>
      <param name="name">El valor que asignar al atributo name del elemento de control HTML.</param>
      <param name="isChecked">true para indicar que el atributo checked está definido en checked; en caso contrario, false.</param>
      <param name="htmlAttributes">Objeto que contiene atributos personalizados del elemento. Los nombres y valores de atributos se recuperan mediante reflexión examinando las propiedades del objeto.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.CheckBox(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve un control de casilla HTML que contiene el nombre especificado y atributos personalizados definidos por un diccionario de atributos.</summary>
      <returns>La marca HTML que representa el control de casilla.</returns>
      <param name="name"> El valor que asignar al atributo name del elemento de control HTML.</param>
      <param name="htmlAttributes">Los nombres y valores de los atributos personalizados del elemento.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.CheckBox(System.String,System.Object)">
      <summary>Devuelve un control de casilla HTML que contiene el nombre especificado y atributos personalizados definidos por un objeto de atributo.</summary>
      <returns>La marca HTML que representa el control de casilla.</returns>
      <param name="name">El valor que asignar al atributo name del elemento de control HTML.</param>
      <param name="htmlAttributes">Objeto que contiene atributos personalizados del elemento. Los nombres y valores de atributos se recuperan mediante reflexión examinando las propiedades del objeto.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.DropDownList(System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem})">
      <summary>Devuelve un control de lista desplegable HTML que contiene el nombre especificado y los elementos de lista especificados.</summary>
      <returns>La marca HTML que representa el control de lista desplegable.</returns>
      <param name="name">El valor que asignar al atributo name del elemento select HTML.</param>
      <param name="selectList">Lista de instancias de <see cref="T:System.Web.WebPages.Html.SelectListItem" /> que se usan para rellenar la lista.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.DropDownList(System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve un control de lista desplegable HTML que contiene el nombre especificado, los atributos personalizados definidos por un diccionario de atributos y los elementos de lista especificados.</summary>
      <returns>La marca HTML que representa el control de lista desplegable.</returns>
      <param name="name">El valor que asignar al atributo name del elemento select HTML.</param>
      <param name="selectList">Lista de instancias de <see cref="T:System.Web.WebPages.Html.SelectListItem" /> que se usan para rellenar la lista.</param>
      <param name="htmlAttributes">Los nombres y valores de los atributos personalizados del elemento.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.DropDownList(System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object)">
      <summary>Devuelve un control de lista desplegable HTML que contiene el nombre especificado, los atributos personalizados definidos por un objeto de atributo y los elementos de lista especificados.</summary>
      <returns>La marca HTML que representa el control de lista desplegable.</returns>
      <param name="name">El valor que asignar al atributo name del elemento select HTML.</param>
      <param name="selectList">Lista de instancias de <see cref="T:System.Web.WebPages.Html.SelectListItem" /> que se usan para rellenar la lista.</param>
      <param name="htmlAttributes">Objeto que contiene atributos personalizados del elemento. Los nombres y valores de atributos se recuperan mediante reflexión examinando las propiedades del objeto.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.DropDownList(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem})">
      <summary>Devuelve un control de lista desplegable HTML que contiene el nombre especificado, los elementos de lista especificados y el elemento predeterminado.</summary>
      <returns>La marca HTML que representa el control de lista desplegable.</returns>
      <param name="name">El valor que asignar al atributo name del elemento select HTML.</param>
      <param name="defaultOption">El texto que mostrar para la opción predeterminada de la lista.</param>
      <param name="selectList">Lista de instancias de <see cref="T:System.Web.WebPages.Html.SelectListItem" /> que se usan para rellenar la lista.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.DropDownList(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve un control de lista desplegable HTML que contiene el nombre especificado, los atributos personalizados definidos por un diccionario de atributos, los elementos de lista especificados y el elemento predeterminado.</summary>
      <returns>La marca HTML que representa el control de lista desplegable.</returns>
      <param name="name">El valor que asignar al atributo name del elemento select HTML.</param>
      <param name="defaultOption">El texto que mostrar para la opción predeterminada de la lista.</param>
      <param name="selectList">Lista de instancias de <see cref="T:System.Web.WebPages.Html.SelectListItem" /> que se usan para rellenar la lista.</param>
      <param name="htmlAttributes">Los nombres y valores de los atributos personalizados del elemento.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.DropDownList(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object)">
      <summary>Devuelve un control de lista desplegable HTML que contiene el nombre especificado, los atributos personalizados definidos por un objeto de atributo, los elementos de lista especificados y el elemento predeterminado.</summary>
      <returns>La marca HTML que representa el control de lista desplegable.</returns>
      <param name="name">El valor que asignar al atributo name del elemento select HTML.</param>
      <param name="defaultOption">El texto que mostrar para la opción predeterminada de la lista.</param>
      <param name="selectList">Lista de instancias de <see cref="T:System.Web.WebPages.Html.SelectListItem" /> que se usan para rellenar la lista.</param>
      <param name="htmlAttributes">Objeto que contiene atributos personalizados del elemento. Los nombres y valores de atributos se recuperan mediante reflexión examinando las propiedades del objeto.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.DropDownList(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve un control de lista desplegable HTML que contiene el nombre especificado, los atributos personalizados definidos por un diccionario de atributos, la selección predeterminada, los elementos de lista especificados y el elemento predeterminado.</summary>
      <returns>La marca HTML que representa el control de lista desplegable.</returns>
      <param name="name">El valor que asignar al atributo name del elemento select HTML.</param>
      <param name="defaultOption">El texto que mostrar para la opción predeterminada de la lista.</param>
      <param name="selectList">Lista de instancias de <see cref="T:System.Web.WebPages.Html.SelectListItem" /> que se usan para rellenar la lista.</param>
      <param name="selectedValue">El valor que especifica el elemento en la lista que está seleccionado de manera predeterminada. El elemento seleccionado es el primer elemento de la lista cuyo valor coincide con el parámetro (o cuyo texto coincide, si no hay ningún valor.) </param>
      <param name="htmlAttributes">Los nombres y valores de los atributos personalizados del elemento.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.DropDownList(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object,System.Object)">
      <summary>Devuelve un control de lista desplegable HTML que contiene el nombre especificado, los atributos personalizados definidos por un objeto de atributo, la selección predeterminada, los elementos de lista especificados y el elemento predeterminado.</summary>
      <returns>La marca HTML que representa el control de lista desplegable.</returns>
      <param name="name">El valor que asignar al atributo name del elemento select HTML.</param>
      <param name="defaultOption">El texto que mostrar para la opción predeterminada de la lista.</param>
      <param name="selectList">Lista de instancias de <see cref="T:System.Web.WebPages.Html.SelectListItem" /> que se usan para rellenar la lista.</param>
      <param name="selectedValue">El valor que especifica el elemento en la lista que está seleccionado de manera predeterminada. El elemento seleccionado es el primer elemento de la lista con un valor coincidente o que coincide con el texto mostrado en los elementos si el elemento no tiene ningún valor.</param>
      <param name="htmlAttributes">Objeto que contiene atributos personalizados del elemento. Los nombres y valores de atributos se recuperan mediante reflexión examinando las propiedades del objeto.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Encode(System.Object)">
      <summary>Devuelve una cadena con codificación HTML que representa el objeto especificado usando una codificación completa que es adecuada para HTML arbitrario.</summary>
      <returns>Cadena con código HTML que representa el objeto.</returns>
      <param name="value">Objeto que se va a codificar.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Encode(System.String)">
      <summary>Devuelve una cadena con codificación HTML que representa la cadena especificada usando una codificación completa que es adecuada para HTML arbitrario.</summary>
      <returns>Cadena con código HTML que representa la cadena original.</returns>
      <param name="value">Cadena que se va a codificar.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Hidden(System.String)">
      <summary>Devuelve un control oculto HTML que contiene el nombre especificado.</summary>
      <returns>La marca HTML que representa el control oculto.</returns>
      <param name="name">El valor que asignar al atributo name del elemento de control HTML.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Hidden(System.String,System.Object)">
      <summary>Devuelve un control oculto HTML que contiene el nombre y el valor especificados.</summary>
      <returns>La marca HTML que representa el control oculto.</returns>
      <param name="name">El valor que asignar al atributo name del elemento de control HTML.</param>
      <param name="value">El valor que asignar al atributo value del elemento.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Hidden(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve un control oculto HTML que contiene el nombre y el valor especificados y atributos personalizados definidos por un diccionario de atributos.</summary>
      <returns>La marca HTML que representa el control oculto.</returns>
      <param name="name">El valor que asignar al atributo name del elemento de control HTML.</param>
      <param name="value">El valor que asignar al atributo value del elemento.</param>
      <param name="htmlAttributes">Los nombres y valores de los atributos personalizados del elemento.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Hidden(System.String,System.Object,System.Object)">
      <summary>Devuelve un control oculto HTML que contiene el nombre y el valor especificados y atributos personalizados definidos por un objeto de atributo.</summary>
      <returns>La marca HTML que representa el control oculto.</returns>
      <param name="name"> El valor que asignar al atributo name del elemento de control HTML.</param>
      <param name="value">El valor que asignar al atributo value del elemento.</param>
      <param name="htmlAttributes">Objeto que contiene atributos personalizados del elemento. Los nombres y valores de atributos se recuperan mediante reflexión examinando las propiedades del objeto.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="P:System.Web.WebPages.Html.HtmlHelper.IdAttributeDotReplacement">
      <summary>Obtiene o establece el carácter que se utiliza para reemplazar el punto (.) en el atributo id de los controles de formulario presentados.</summary>
      <returns>Carácter que se utiliza para reemplazar el punto en el atributo id de los controles de formulario presentados. El valor predeterminado es el carácter de subrayado _.</returns>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Label(System.String)">
      <summary>Devuelve una etiqueta HTML que muestra el texto especificado.</summary>
      <returns>La marca HTML que representa la etiqueta.</returns>
      <param name="labelText">Texto que se va a mostrar.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="labelText" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Label(System.String,System.Object)">
      <summary>Devuelve una etiqueta HTML que muestra el texto especificado y que contiene los atributos personalizados especificados.</summary>
      <returns>La marca HTML que representa la etiqueta.</returns>
      <param name="labelText">Texto que se va a mostrar.</param>
      <param name="attributes">Objeto que contiene atributos personalizados del elemento. Los nombres y valores de atributos se recuperan mediante reflexión examinando las propiedades del objeto.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="labelText" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Label(System.String,System.String)">
      <summary>Devuelve una etiqueta HTML que muestra el texto especificado y que contiene el atributo for especificado.</summary>
      <returns>La marca HTML que representa la etiqueta.</returns>
      <param name="labelText">Texto que se va a mostrar.</param>
      <param name="labelFor">El valor que asignar al atributo for del elemento de control HTML.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="labelText" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Label(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve una etiqueta HTML que muestra el texto especificado y que contiene el atributo for especificado y los atributos personalizados definidos por un diccionario de atributos.</summary>
      <returns>La marca HTML que representa la etiqueta.</returns>
      <param name="labelText">Texto que se va a mostrar.</param>
      <param name="labelFor"> El valor que asignar al atributo for del elemento de control HTML.</param>
      <param name="attributes">Los nombres y valores de los atributos personalizados del elemento.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="labelText" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Label(System.String,System.String,System.Object)">
      <summary>Devuelve una etiqueta HTML que muestra el texto especificado y que contiene el atributo for especificado y los atributos personalizados definidos por un objeto de atributo.</summary>
      <returns>La marca HTML que representa la etiqueta.</returns>
      <param name="labelText">Texto que se va a mostrar.</param>
      <param name="labelFor">El valor que asignar al atributo for del elemento de control HTML.</param>
      <param name="attributes">Objeto que contiene atributos personalizados del elemento. Los nombres y valores de atributos se recuperan mediante reflexión examinando las propiedades del objeto.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="labelText" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem})">
      <summary>Devuelve un control de cuadro de lista HTML que contiene el nombre especificado y los elementos de lista especificados.</summary>
      <returns>La marca HTML que representa el control de cuadro de lista.</returns>
      <param name="name"> El valor que asignar al atributo name del elemento select HTML.</param>
      <param name="selectList">Lista de instancias de <see cref="T:System.Web.WebPages.Html.SelectListItem" /> que se usan para rellenar la lista.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve un control de cuadro de lista HTML que contiene el nombre especificado, los atributos personalizados definidos por un diccionario de atributos y los elementos de lista especificados.</summary>
      <returns>La marca HTML que representa el control de cuadro de lista.</returns>
      <param name="name">El valor que asignar al atributo name del elemento select HTML.</param>
      <param name="selectList">Lista de instancias de <see cref="T:System.Web.WebPages.Html.SelectListItem" /> que se usan para rellenar la lista.</param>
      <param name="htmlAttributes">Los nombres y valores de los atributos personalizados del elemento.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object)">
      <summary>Devuelve un control de cuadro de lista HTML que contiene el nombre especificado, los atributos personalizados definidos por un objeto de atributo y los elementos de lista especificados.</summary>
      <returns>La marca HTML que representa el control de cuadro de lista.</returns>
      <param name="name">El valor que asignar al atributo name del elemento select HTML.</param>
      <param name="selectList">Lista de instancias de <see cref="T:System.Web.WebPages.Html.SelectListItem" /> que se usan para rellenar la lista.</param>
      <param name="htmlAttributes">Objeto que contiene atributos personalizados del elemento. Los nombres y valores de atributos se recuperan mediante reflexión examinando las propiedades del objeto.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object,System.Int32,System.Boolean)">
      <summary>Devuelve un control de cuadro de lista HTML que contiene el nombre, tamaño, elementos de lista y selecciones predeterminadas especificados y que especifica si están habilitadas las selecciones múltiples.</summary>
      <returns>La marca HTML que representa el control de cuadro de lista.</returns>
      <param name="name">El valor que asignar al atributo name del elemento select HTML.</param>
      <param name="selectList">Lista de instancias de <see cref="T:System.Web.WebPages.Html.SelectListItem" /> que se usan para rellenar la lista.</param>
      <param name="selectedValues">Objeto que especifica los elementos en la lista que están seleccionados de manera predeterminada. Las selecciones se recuperan mediante reflexión examinando las propiedades del objeto.</param>
      <param name="size">El valor que asignar al atributo size del elemento.</param>
      <param name="allowMultiple">true para indicar que se han habilitado las selecciones múltiples; en caso contrario, false.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem})">
      <summary>Devuelve un control de cuadro de lista HTML que contiene el nombre especificado, los elementos de lista especificados y el elemento predeterminado.</summary>
      <returns>La marca HTML que representa el control de cuadro de lista.</returns>
      <param name="name">El valor que asignar al atributo name del elemento select HTML.</param>
      <param name="defaultOption">El texto que mostrar para la opción predeterminada de la lista.</param>
      <param name="selectList">Lista de instancias de <see cref="T:System.Web.WebPages.Html.SelectListItem" /> que se usan para rellenar el cuadro de lista.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve un control de cuadro de lista HTML que contiene el nombre especificado, los atributos personalizados definidos por un diccionario de atributos, los elementos de lista especificados y el elemento predeterminado.</summary>
      <returns>La marca HTML que representa el control de cuadro de lista.</returns>
      <param name="name">El valor que asignar al atributo name del elemento select HTML.</param>
      <param name="defaultOption">El texto que mostrar para la opción predeterminada de la lista.</param>
      <param name="selectList">Lista de instancias de <see cref="T:System.Web.WebPages.Html.SelectListItem" /> que se usan para rellenar la lista.</param>
      <param name="htmlAttributes">Los nombres y valores de los atributos personalizados del elemento.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object)">
      <summary>Devuelve un control de cuadro de lista HTML que contiene el nombre especificado, los atributos personalizados definidos por un objeto de atributo, los elementos de lista especificados y el elemento predeterminado.</summary>
      <returns>La marca HTML que representa el control de cuadro de lista.</returns>
      <param name="name">El valor que asignar al atributo name del elemento select HTML.</param>
      <param name="defaultOption">El texto que mostrar para la opción predeterminada de la lista.</param>
      <param name="selectList">Lista de instancias de <see cref="T:System.Web.WebPages.Html.SelectListItem" /> que se usan para rellenar el cuadro de lista.</param>
      <param name="htmlAttributes">Objeto que contiene atributos personalizados del elemento. Los nombres y valores de atributos se recuperan mediante reflexión examinando las propiedades del objeto.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve un control de cuadro de lista HTML que contiene el nombre especificado, los atributos personalizados definidos por un diccionario de atributos, los elementos de lista especificados, el elemento predeterminado y las selecciones.</summary>
      <returns>La marca HTML que representa el control de cuadro de lista.</returns>
      <param name="name">El valor que asignar al atributo name del elemento select HTML.</param>
      <param name="defaultOption">El texto que mostrar para la opción predeterminada de la lista.</param>
      <param name="selectList">Lista de instancias de <see cref="T:System.Web.WebPages.Html.SelectListItem" /> que se usan para rellenar la lista.</param>
      <param name="selectedValues">Objeto que especifica los elementos en la lista que están seleccionados de manera predeterminada. Las selecciones se recuperan mediante reflexión examinando las propiedades del objeto. </param>
      <param name="htmlAttributes">Los nombres y valores de los atributos personalizados del elemento.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object,System.Int32,System.Boolean)">
      <summary>Devuelve un control de cuadro de lista HTML que contiene el nombre, tamaño, elementos, elemento predeterminado y selecciones especificados y que especifica si están habilitadas las selecciones múltiples.</summary>
      <returns>La marca HTML que representa el control de cuadro de lista.</returns>
      <param name="name">El valor que asignar al atributo name del elemento select HTML.</param>
      <param name="defaultOption">El texto que mostrar para la opción predeterminada de la lista.</param>
      <param name="selectList">Lista de instancias de <see cref="T:System.Web.WebPages.Html.SelectListItem" /> que se usan para rellenar la lista.</param>
      <param name="selectedValues">Objeto que especifica los elementos en la lista que están seleccionados de manera predeterminada. Las selecciones se recuperan mediante reflexión examinando las propiedades del objeto.</param>
      <param name="size">El valor que asignar al atributo size del elemento.</param>
      <param name="allowMultiple">true para indicar que se han habilitado las selecciones múltiples; en caso contrario, false.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object,System.Int32,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve un control de cuadro de lista HTML que contiene el nombre, tamaño, atributos personalizados definidos por un diccionario de atributos, elementos, elemento predeterminado y selecciones especificados y que especifica si están habilitadas las selecciones múltiples.</summary>
      <returns>La marca HTML que representa el control de cuadro de lista.</returns>
      <param name="name">El valor que asignar al atributo name del elemento select HTML.</param>
      <param name="defaultOption">El texto que mostrar para la opción predeterminada de la lista.</param>
      <param name="selectList">Lista de instancias de <see cref="T:System.Web.WebPages.Html.SelectListItem" /> que se usan para rellenar la lista.</param>
      <param name="selectedValues">Objeto que especifica los elementos en la lista que están seleccionados de manera predeterminada. Las selecciones se recuperan mediante reflexión examinando las propiedades del objeto.</param>
      <param name="size">El valor que asignar al atributo size del elemento.</param>
      <param name="allowMultiple">true para indicar que se han habilitado las selecciones múltiples; en caso contrario, false.</param>
      <param name="htmlAttributes">Los nombres y valores de los atributos personalizados del elemento.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object,System.Int32,System.Boolean,System.Object)">
      <summary>Devuelve un control de cuadro de lista HTML que contiene el nombre, tamaño, atributos personalizados definidos por un objeto de atributo, elementos, elemento predeterminado y selecciones especificados y que especifica si están habilitadas las selecciones múltiples.</summary>
      <returns>La marca HTML que representa el control de cuadro de lista.</returns>
      <param name="name">El valor que asignar al atributo name del elemento select HTML.</param>
      <param name="defaultOption">El texto que mostrar para la opción predeterminada de la lista.</param>
      <param name="selectList">Lista de instancias de <see cref="T:System.Web.WebPages.Html.SelectListItem" /> que se usan para rellenar la lista.</param>
      <param name="selectedValues">Objeto que especifica los elementos en la lista que están seleccionados de manera predeterminada. Las selecciones se recuperan mediante reflexión examinando las propiedades del objeto.</param>
      <param name="size">El valor que asignar al atributo size del elemento.</param>
      <param name="allowMultiple">true para indicar que se han habilitado las selecciones múltiples; en caso contrario, false.</param>
      <param name="htmlAttributes">Objeto que contiene atributos personalizados del elemento. Los nombres y valores de atributos se recuperan mediante reflexión examinando las propiedades del objeto.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ListBox(System.String,System.String,System.Collections.Generic.IEnumerable{System.Web.WebPages.Html.SelectListItem},System.Object,System.Object)">
      <summary>Devuelve un control de cuadro de lista HTML que contiene el nombre, elementos, elemento predeterminado y atributos personalizados definidos por un objeto de atributo especificados y las selecciones.</summary>
      <returns>La marca HTML que representa el control de cuadro de lista.</returns>
      <param name="name">El valor que asignar al atributo name del elemento select HTML.</param>
      <param name="defaultOption">El texto que mostrar para la opción predeterminada de la lista.</param>
      <param name="selectList">Lista de instancias de <see cref="T:System.Web.WebPages.Html.SelectListItem" /> que se usan para rellenar la lista.</param>
      <param name="selectedValues">Objeto que especifica los elementos en la lista que están seleccionados de manera predeterminada. Las selecciones se recuperan mediante reflexión examinando las propiedades del objeto.</param>
      <param name="htmlAttributes">Objeto que contiene atributos personalizados del elemento. Los nombres y valores de atributos se recuperan mediante reflexión examinando las propiedades del objeto.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Password(System.String)">
      <summary>Devuelve un control de contraseña HTML que contiene el nombre especificado.</summary>
      <returns>La marca HTML que representa el control de contraseña.</returns>
      <param name="name">El valor que asignar al atributo name del elemento de control HTML.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Password(System.String,System.Object)">
      <summary>Devuelve un control de contraseña HTML que contiene el nombre y el valor especificados.</summary>
      <returns>La marca HTML que representa el control de contraseña.</returns>
      <param name="name">El valor que asignar al atributo name del elemento de control HTML.</param>
      <param name="value">El valor que asignar al atributo value del elemento.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Password(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve un control de contraseña HTML que contiene el nombre y el valor especificados y atributos personalizados definidos por un diccionario de atributos.</summary>
      <returns>La marca HTML que representa el control de contraseña.</returns>
      <param name="name">El valor que asignar al atributo name del elemento de control HTML.</param>
      <param name="value">El valor que asignar al atributo value del elemento.</param>
      <param name="htmlAttributes">Los nombres y valores de los atributos personalizados del elemento.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Password(System.String,System.Object,System.Object)">
      <summary>Devuelve un control de contraseña HTML que contiene el nombre y el valor especificados y atributos personalizados definidos por un objeto de atributo.</summary>
      <returns>La marca HTML que representa el control de contraseña.</returns>
      <param name="name">El valor que asignar al atributo name del elemento de control HTML.</param>
      <param name="value">El valor que asignar al atributo value del elemento.</param>
      <param name="htmlAttributes"> Objeto que contiene atributos personalizados del elemento. Los nombres y valores de atributos se recuperan mediante reflexión examinando las propiedades del objeto.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.RadioButton(System.String,System.Object)">
      <summary>Devuelve un control de botón de radio HTML que contiene el nombre y el valor especificados.</summary>
      <returns>La marca HTML que representa el control de botón de radio.</returns>
      <param name="name">El valor que asignar al atributo name del elemento de control HTML. El atributo name define el grupo al que pertenece el botón de radio.</param>
      <param name="value">El valor que asignar al atributo value del elemento.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.RadioButton(System.String,System.Object,System.Boolean)">
      <summary>Devuelve un control de botón de radio HTML que contiene el nombre y el valor especificados y el estado seleccionado predeterminado.</summary>
      <returns>La marca HTML que representa el control de botón de radio.</returns>
      <param name="name">El valor que asignar al atributo name del elemento de control HTML. El atributo name define el grupo al que pertenece el botón de radio.</param>
      <param name="value">El valor que asignar al atributo value del elemento.</param>
      <param name="isChecked">true para indicar que se ha seleccionado el control; en caso contrario, false.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.RadioButton(System.String,System.Object,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve un control de botón de radio HTML que contiene el nombre y valor especificados, el estado seleccionado predeterminado y atributos personalizados definidos por un diccionario de atributos.</summary>
      <returns>La marca HTML que representa el control de botón de radio.</returns>
      <param name="name">El valor que asignar al atributo name del elemento de control HTML. El atributo name define el grupo al que pertenece el botón de radio.</param>
      <param name="value">El valor que asignar al atributo value del elemento.</param>
      <param name="isChecked">true para indicar que se ha seleccionado el control; en caso contrario, false.</param>
      <param name="htmlAttributes">Los nombres y valores de los atributos personalizados del elemento.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.RadioButton(System.String,System.Object,System.Boolean,System.Object)">
      <summary>Devuelve un control de botón de radio HTML que contiene el nombre y valor especificados, el estado seleccionado predeterminado y atributos personalizados definidos por un objeto de atributo.</summary>
      <returns>La marca HTML que representa el control de botón de radio.</returns>
      <param name="name">El valor que asignar al atributo name del elemento de control HTML. El atributo name define el grupo al que pertenece el botón de radio.</param>
      <param name="value">El valor que asignar al atributo value del elemento.</param>
      <param name="isChecked">true para indicar que se ha seleccionado el control; en caso contrario, false.</param>
      <param name="htmlAttributes">Objeto que contiene atributos personalizados del elemento. Los nombres y valores de atributos se recuperan mediante reflexión examinando las propiedades del objeto.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.RadioButton(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve un control de botón de radio HTML que contiene el nombre y el valor especificados y atributos personalizados definidos por un diccionario de atributos.</summary>
      <returns>La marca HTML que representa el control de botón de radio.</returns>
      <param name="name">El valor que asignar al atributo name del elemento de control HTML. El atributo name define el grupo al que pertenece el botón de radio.</param>
      <param name="value">El valor que asignar al atributo value del elemento.</param>
      <param name="htmlAttributes"> Los nombres y valores de los atributos personalizados del elemento.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.RadioButton(System.String,System.Object,System.Object)">
      <summary>Devuelve un control de botón de radio HTML que contiene el nombre y el valor especificados y atributos personalizados definidos por un objeto de atributo.</summary>
      <returns>La marca HTML que representa el control de botón de radio.</returns>
      <param name="name">El valor que asignar al atributo name del elemento de control HTML. El atributo name define el grupo al que pertenece el botón de radio.</param>
      <param name="value">El valor que asignar al atributo value del elemento.</param>
      <param name="htmlAttributes">Objeto que contiene atributos personalizados del elemento. Los nombres y valores de atributos se recuperan mediante reflexión examinando las propiedades del objeto.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Raw(System.Object)">
      <summary>Envuelve la marca HTML en una instancia <see cref="T:System.Web.HtmlString" /> de modo que se interpreta como marca HTML.</summary>
      <returns>HTML sin codificar.</returns>
      <param name="value">El objeto para el que se va a presentar HTML.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.Raw(System.String)">
      <summary>Envuelve la marca HTML en una instancia <see cref="T:System.Web.HtmlString" /> de modo que se interpreta como marca HTML.</summary>
      <returns>HTML sin codificar.</returns>
      <param name="value">La cadena que interpretar como marca HTML en lugar de codificada en HTML.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.TextArea(System.String)">
      <summary>Devuelve un control de entrada de texto de varias líneas HTML (área de texto) que contiene el nombre especificado.</summary>
      <returns>La marca HTML que representa el control de área de texto.</returns>
      <param name="name">El valor que asignar al atributo name del elemento textarea HTML.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.TextArea(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve un control de entrada de texto de varias líneas HTML (área de texto) que contiene el nombre especificado y atributos personalizados definidos por un diccionario de atributos.</summary>
      <returns>La marca HTML que representa el control de área de texto.</returns>
      <param name="name">El valor que asignar al atributo name del elemento textarea HTML.</param>
      <param name="htmlAttributes">Los nombres y valores de los atributos personalizados del elemento.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.TextArea(System.String,System.Object)">
      <summary>Devuelve un control de entrada de texto de varias líneas HTML (área de texto) que contiene el nombre especificado y atributos personalizados definidos por un objeto de atributo.</summary>
      <returns>La marca HTML que representa el control de área de texto.</returns>
      <param name="name">El valor que asignar al atributo name del elemento textarea HTML.</param>
      <param name="htmlAttributes">Objeto que contiene atributos personalizados del elemento. Los nombres y valores de atributos se recuperan mediante reflexión examinando las propiedades del objeto.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.TextArea(System.String,System.String)">
      <summary>Devuelve un control de entrada de texto de varias líneas HTML (área de texto) que contiene el nombre y el valor especificados.</summary>
      <returns>La marca HTML que representa el control de área de texto.</returns>
      <param name="name">El valor que asignar al atributo name del elemento textarea HTML.</param>
      <param name="value">Texto que se va a mostrar.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.TextArea(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve un control de entrada de texto de varias líneas HTML (área de texto) que contiene el nombre y valor especificados y atributos personalizados definidos por un diccionario de atributos.</summary>
      <returns>La marca HTML que representa el control de área de texto.</returns>
      <param name="name">El valor que asignar al atributo name del elemento textarea HTML.</param>
      <param name="value">Texto que se va a mostrar.</param>
      <param name="htmlAttributes">Los nombres y valores de los atributos personalizados del elemento.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.TextArea(System.String,System.String,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve un control de entrada de texto de varias líneas HTML (área de texto) que contiene el nombre y valor especificados, el atributo row, el atributo col y atributos personalizados definidos por un diccionario de atributos.</summary>
      <returns>La marca HTML que representa el control de área de texto.</returns>
      <param name="name">El valor que asignar al atributo name del elemento textarea HTML.</param>
      <param name="value">Texto que se va a mostrar.</param>
      <param name="rows">El valor que asignar al atributo rows del elemento.</param>
      <param name="columns">El valor que asignar al atributo cols del elemento.</param>
      <param name="htmlAttributes">Los nombres y valores de los atributos personalizados del elemento.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.TextArea(System.String,System.String,System.Int32,System.Int32,System.Object)">
      <summary>Devuelve un control de entrada de texto de varias líneas HTML (área de texto) que contiene el nombre y valor especificados, el atributo row, el atributo col y atributos personalizados definidos por un objeto de atributo.</summary>
      <returns>La marca HTML que representa el control de área de texto.</returns>
      <param name="name"> El valor que asignar al atributo name del elemento textarea HTML.</param>
      <param name="value">Texto que se va a mostrar.</param>
      <param name="rows">El valor que asignar al atributo rows del elemento.</param>
      <param name="columns">El valor que asignar al atributo cols del elemento.</param>
      <param name="htmlAttributes">Objeto que contiene atributos personalizados del elemento. Los nombres y valores de atributos se recuperan mediante reflexión examinando las propiedades del objeto.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.TextArea(System.String,System.String,System.Object)">
      <summary>Devuelve un control de entrada de texto de varias líneas HTML (área de texto) que contiene el nombre y valor especificados y atributos personalizados definidos por un objeto de atributo.</summary>
      <returns>La marca HTML que representa el control de área de texto.</returns>
      <param name="name">El valor que asignar al atributo name del elemento textarea HTML.</param>
      <param name="value">Texto que se va a mostrar.</param>
      <param name="htmlAttributes">Objeto que contiene atributos personalizados del elemento. Los nombres y valores de atributos se recuperan mediante reflexión examinando las propiedades del objeto.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.TextBox(System.String)">
      <summary>Devuelve un control de texto HTML que contiene el nombre especificado.</summary>
      <returns>La marca HTML que representa el control de texto.</returns>
      <param name="name">El valor que asignar al atributo name del elemento de control HTML.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.TextBox(System.String,System.Object)">
      <summary>Devuelve un control de texto HTML que contiene el nombre y el valor especificados.</summary>
      <returns>La marca HTML que representa el control de texto.</returns>
      <param name="name">El valor que asignar al atributo name del elemento de control HTML.</param>
      <param name="value">El valor que asignar al atributo value del elemento.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.TextBox(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve un control de texto HTML que contiene el nombre y el valor especificados y atributos personalizados definidos por un diccionario de atributos.</summary>
      <returns>La marca HTML que representa el control de texto.</returns>
      <param name="name">El valor que asignar al atributo name del elemento de control HTML.</param>
      <param name="value">El valor que asignar al atributo value del elemento.</param>
      <param name="htmlAttributes">Los nombres y valores de los atributos personalizados del elemento.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.TextBox(System.String,System.Object,System.Object)">
      <summary>Devuelve un control de texto HTML que contiene el nombre y el valor especificados y atributos personalizados definidos por un objeto de atributo.</summary>
      <returns>La marca HTML que representa el control de texto.</returns>
      <param name="name">El valor que asignar al atributo name del elemento de control HTML.</param>
      <param name="value">El valor que asignar al atributo value del elemento.</param>
      <param name="htmlAttributes">Objeto que contiene atributos personalizados del elemento. Los nombres y valores de atributos se recuperan mediante reflexión examinando las propiedades del objeto.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="P:System.Web.WebPages.Html.HtmlHelper.UnobtrusiveJavaScriptEnabled">
      <summary>Obtiene o establece un valor que indica si la página usa funciones JavaScript para Ajax discretas.</summary>
      <returns>true si la página usa JavaScript discreto; de lo contrario, false.</returns>
    </member>
    <member name="P:System.Web.WebPages.Html.HtmlHelper.ValidationInputCssClassName">
      <summary>Obtiene o establece el nombre de la clase CSS que define el aspecto de los elementos input cuando falla la validación.</summary>
      <returns>Nombre de la clase CSS. El valor predeterminado es field-validation-error.</returns>
    </member>
    <member name="P:System.Web.WebPages.Html.HtmlHelper.ValidationInputValidCssClassName">
      <summary>Obtiene o establece el nombre de la clase CSS que define el aspecto de los elementos input cuando la validación es correcta.</summary>
      <returns>Nombre de la clase CSS. El valor predeterminado es input-validation-valid.</returns>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationMessage(System.String)">
      <summary>Devuelve un elemento HTML span que contiene el primer mensaje de error de validación para el campo de formulario especificado.</summary>
      <returns>Si el valor del campo especificado es válido, null; en caso contrario, la marca HTML que representa el mensaje de error de validación asociado con el campo especificado.</returns>
      <param name="name">Nombre del campo de formulario que se ha validado.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationMessage(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve un elemento HTML span que tiene los atributos personalizados especificados definidos por un diccionario de atributos y que contiene el primer mensaje de error de validación para el campo de formulario especificado.</summary>
      <returns>Si el valor del campo especificado es válido, null; en caso contrario, la marca HTML que representa el mensaje de error de validación asociado con el campo especificado.</returns>
      <param name="name">Nombre del campo de formulario que se ha validado.</param>
      <param name="htmlAttributes">Los nombres y valores de los atributos personalizados del elemento.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationMessage(System.String,System.Object)">
      <summary>Devuelve un elemento HTML span que tiene los atributos personalizados especificados definidos por un objeto de atributo y que contiene el primer mensaje de error de validación para el campo de formulario especificado.</summary>
      <returns>Si el valor del campo especificado es válido, null; en caso contrario, la marca HTML que representa el mensaje de error de validación asociado con el campo especificado.</returns>
      <param name="name">Nombre del campo de formulario que se ha validado.</param>
      <param name="htmlAttributes">Objeto que contiene atributos personalizados del elemento. Los nombres y valores de atributos se recuperan mediante reflexión examinando las propiedades del objeto.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationMessage(System.String,System.String)">
      <summary>Devuelve un elemento HTML span que contiene un mensaje de error de validación para el campo de formulario especificado.</summary>
      <returns>Si el valor del campo especificado es válido, null; en caso contrario, la marca HTML que representa el mensaje de error de validación asociado con el campo especificado.</returns>
      <param name="name">Nombre del campo de formulario que se ha validado.</param>
      <param name="message">Mensaje de error de la validación que mostrar. Si es null, se muestra el primer mensaje de error de validación que está asociado con el campo de formulario especificado.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationMessage(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve un elemento HTML span que tiene los atributos personalizados especificados definidos por un diccionario de atributos y que contiene un mensaje de error de validación para el campo de formulario especificado.</summary>
      <returns>Si el campo especificado es válido, null; en caso contrario, la marca HTML que representa el mensaje de error de validación asociado con el campo especificado.</returns>
      <param name="name">Nombre del campo de formulario que se ha validado.</param>
      <param name="message">Mensaje de error de la validación que mostrar. Si es null, se muestra el primer mensaje de error de validación que está asociado con el campo de formulario especificado.</param>
      <param name="htmlAttributes"> Los nombres y valores de los atributos personalizados del elemento.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationMessage(System.String,System.String,System.Object)">
      <summary>Devuelve un elemento HTML span que tiene los atributos personalizados especificados definidos por un objeto de atributo y que contiene un mensaje de error de validación para el campo de formulario especificado.</summary>
      <returns>Si el campo especificado es válido, null; en caso contrario, la marca HTML que representa el mensaje de error de validación asociado con el campo especificado.</returns>
      <param name="name">Nombre del campo de formulario que se ha validado.</param>
      <param name="message">Mensaje de error de la validación que mostrar. Si es null, se muestra el primer mensaje de error de validación que está asociado con el campo de formulario especificado.</param>
      <param name="htmlAttributes">Objeto que contiene atributos personalizados del elemento. Los nombres y valores de atributos se recuperan mediante reflexión examinando las propiedades del objeto.</param>
      <exception cref="T:Sytem.ArgumentException">
        <paramref name="name" /> es null o está vacío.</exception>
    </member>
    <member name="P:System.Web.WebPages.Html.HtmlHelper.ValidationMessageCssClassName">
      <summary>Obtiene o establece el nombre de la clase CSS que define el aspecto de los mensajes de errores de validación cuando falla la validación.</summary>
      <returns>Nombre de la clase CSS.  El valor predeterminado es field-validation-error.</returns>
    </member>
    <member name="P:System.Web.WebPages.Html.HtmlHelper.ValidationMessageValidCssClassName">
      <summary>Obtiene o establece el nombre de la clase CSS que define el aspecto de los mensajes de errores de validación cuando la validación es correcta.</summary>
      <returns>Nombre de la clase CSS. El valor predeterminado es field-validation-valid.</returns>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationSummary">
      <summary>Devuelve un elemento HTML div que contiene una lista sin ordenar de todos los mensajes de errores de validación del diccionario de estado del modelo.</summary>
      <returns>La marca HTML que representa los mensajes de errores de validación.</returns>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationSummary(System.Boolean)">
      <summary>Devuelve un elemento HTML div que contiene una lista sin ordenar de mensajes de errores de validación del diccionario de estado del modelo, excluyendo opcionalmente los errores de nivel de campo.</summary>
      <returns>La marca HTML que representa los mensajes de errores de validación.</returns>
      <param name="excludeFieldErrors">true para excluir de la lista los mensajes de errores de validación de nivel de campo; false para incluir los mensajes de errores de validación tanto de nivel de modelo como de nivel de campo.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationSummary(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve un elemento HTML div que tiene los atributos personalizados especificados definidos por un diccionario de atributos y que contiene una lista sin ordenar de todos los mensajes de errores de validación que se encuentran en el diccionario de estado del modelo.</summary>
      <returns>La marca HTML que representa los mensajes de errores de validación.</returns>
      <param name="htmlAttributes">Los nombres y valores de los atributos personalizados del elemento.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationSummary(System.Object)">
      <summary>Devuelve un elemento HTML div que tiene los atributos personalizados especificados definidos por un objeto de atributo y que contiene una lista sin ordenar de todos los mensajes de errores de validación que se encuentran en el diccionario de estado del modelo.</summary>
      <returns>La marca HTML que representa los mensajes de errores de validación.</returns>
      <param name="htmlAttributes">Objeto que contiene atributos personalizados del elemento. Los nombres y valores de atributos se recuperan mediante reflexión examinando las propiedades del objeto.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationSummary(System.String)">
      <summary>Devuelve un elemento HTML div que contiene un mensaje de resumen y una lista sin ordenar de todos los mensajes de errores de validación que se encuentran en el diccionario de estado del modelo.</summary>
      <returns>La marca HTML que representa los mensajes de errores de validación.</returns>
      <param name="message">Mensaje que aparece antes de la lista de mensajes de errores de validación.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationSummary(System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve un elemento HTML div que tiene los atributos personalizados especificados definidos por un diccionario de atributos y que contiene un mensaje de resumen y una lista sin ordenar de mensajes de errores de validación del diccionario de estado del modelo, excluyendo opcionalmente los errores de nivel de campo.</summary>
      <returns>La marca HTML que representa los mensajes de errores de validación.</returns>
      <param name="message">Mensaje de resumen que aparece antes de la lista de mensajes de errores de validación.</param>
      <param name="excludeFieldErrors">true para excluir de los resultados los mensajes de errores de validación de nivel de campo; false para incluir los mensajes de errores de validación tanto de nivel de modelo como de nivel de campo.</param>
      <param name="htmlAttributes">Los nombres y valores de los atributos personalizados del elemento.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationSummary(System.String,System.Boolean,System.Object)">
      <summary>Devuelve un elemento HTML div que tiene los atributos personalizados especificados definidos por un objeto de atributo y que contiene un mensaje de resumen y una lista sin ordenar de mensajes de errores de validación del diccionario de estado del modelo, excluyendo opcionalmente los errores de nivel de campo.</summary>
      <returns>La marca HTML que representa los mensajes de errores de validación.</returns>
      <param name="message">Mensaje de resumen que aparece antes de la lista de mensajes de errores de validación.</param>
      <param name="excludeFieldErrors">true para excluir de los resultados los mensajes de errores de validación de nivel de campo; false para incluir los mensajes de errores de validación tanto de nivel de modelo como de nivel de campo.</param>
      <param name="htmlAttributes">Objeto que contiene atributos personalizados del elemento. Los nombres y valores de atributos se recuperan mediante reflexión examinando las propiedades del objeto.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationSummary(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Devuelve un elemento HTML div que tiene los atributos personalizados especificados definidos por un diccionario de atributos y que contiene un mensaje de resumen y una lista sin ordenar de todos los mensajes de errores de validación del diccionario de estado del modelo.</summary>
      <returns>La marca HTML que representa los mensajes de errores de validación.</returns>
      <param name="message">Mensaje que aparece antes de la lista de mensajes de errores de validación.</param>
      <param name="htmlAttributes">Los nombres y valores de los atributos personalizados del elemento.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.HtmlHelper.ValidationSummary(System.String,System.Object)">
      <summary>Devuelve un elemento HTML div que tiene los atributos personalizados especificados definidos por un objeto de atributo y que contiene un mensaje de resumen y una lista sin ordenar de todos los mensajes de errores de validación del diccionario de estado del modelo.</summary>
      <returns>La marca HTML que representa los mensajes de errores de validación.</returns>
      <param name="message">Mensaje de resumen que aparece antes de la lista de mensajes de errores de validación.</param>
      <param name="htmlAttributes">Objeto que contiene atributos personalizados del elemento. Los nombres y valores de atributos se recuperan mediante reflexión examinando las propiedades del objeto.</param>
    </member>
    <member name="P:System.Web.WebPages.Html.HtmlHelper.ValidationSummaryClass">
      <summary>Obtiene o establece el nombre de la clase CSS que define el aspecto de un resumen de validación cuando falla la validación.</summary>
      <returns>Nombre de la clase CSS. El valor predeterminado es validation-summary-errors.</returns>
    </member>
    <member name="P:System.Web.WebPages.Html.HtmlHelper.ValidationSummaryValidClass">
      <summary>Obtiene o establece el nombre de la clase CSS que define el aspecto de un resumen de validación cuando la validación es correcta.</summary>
      <returns>Nombre de la clase CSS. El valor predeterminado es validation-summary-valid.</returns>
    </member>
    <member name="T:System.Web.WebPages.Html.ModelState">
      <summary>Encapsula el estado del enlace del modelo a una propiedad de un argumento de acción-método o al propio argumento.</summary>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelState.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.WebPages.Html.ModelState" />.</summary>
    </member>
    <member name="P:System.Web.WebPages.Html.ModelState.Errors">
      <summary>Devuelve una lista de cadenas que contiene los errores producidos durante el enlace del modelo.</summary>
      <returns>Los errores producidos durante el enlace del modelo.</returns>
    </member>
    <member name="P:System.Web.WebPages.Html.ModelState.Value">
      <summary>Devuelve un objeto que encapsula el valor que se enlazó durante el enlace del modelo.</summary>
      <returns>El valor que se enlazó.</returns>
    </member>
    <member name="T:System.Web.WebPages.Html.ModelStateDictionary">
      <summary>Representa el resultado de enlazar un formulario expuesto a un método de acción, que incluye información tal como el estado de validación y los mensajes de error de validación.</summary>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.WebPages.Html.ModelStateDictionary" />.</summary>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.#ctor(System.Web.WebPages.Html.ModelStateDictionary)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.WebPages.Html.ModelStateDictionary" /> utilizando valores que se copian del diccionario de modelo-estado especificado.</summary>
      <param name="dictionary">Diccionario de modelo-estado del que se copian los valores.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,System.Web.WebPages.Html.ModelState})">
      <summary>Agrega el elemento especificado al diccionario de modelo-estado.</summary>
      <param name="item">Elemento que se va a agregar al diccionario de modelo-estado.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.Add(System.String,System.Web.WebPages.Html.ModelState)">
      <summary>Agrega un elemento que tiene la clave y el valor especificados al diccionario de modelo-estado.</summary>
      <param name="key">Clave.</param>
      <param name="value">Valor.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.AddError(System.String,System.String)">
      <summary>Agrega un mensaje de error al estado de modelo asociado a la clave especificada.</summary>
      <param name="key">La clave asociada con el estado de modelo al que se agrega el mensaje de error.</param>
      <param name="errorMessage">Mensaje de error.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.AddFormError(System.String)">
      <summary>Agrega un mensaje de error al estado de modelo asociado al formulario especificado.</summary>
      <param name="errorMessage">Mensaje de error.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.Clear">
      <summary>Quita todos los elementos del diccionario de modelo-estado.</summary>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Web.WebPages.Html.ModelState})">
      <summary>Determina si el diccionario de modelo-estado contiene el elemento especificado.</summary>
      <returns>true si el diccionario de modelo-estado contiene el elemento especificado; de lo contrario, false.</returns>
      <param name="item">Elemento que se va a buscar.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.ContainsKey(System.String)">
      <summary>Determina si el diccionario de modelo-estado contiene la clave especificada.</summary>
      <returns>true si el diccionario de modelo-estado contiene la clave especificada; de lo contrario, false.</returns>
      <param name="key">Clave que se va a buscar.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Web.WebPages.Html.ModelState}[],System.Int32)">
      <summary>Copia los elementos del diccionario de modelo-estado en una matriz, empezando en el índice especificado.</summary>
      <param name="array">Instancia unidimensional de <see cref="T:System.Array" /> donde se van a copiar los elementos.</param>
      <param name="arrayIndex">Índice de <paramref name="array" /> donde se comienza a copiar.</param>
    </member>
    <member name="P:System.Web.WebPages.Html.ModelStateDictionary.Count">
      <summary>Obtiene el número de estados del modelo que contiene el diccionario de modelo-estado.</summary>
      <returns>El número de estados del modelo en el diccionario de modelo-estado.</returns>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.GetEnumerator">
      <summary>Devuelve un enumerador que puede utilizarse para iterar por la colección.</summary>
      <returns>Enumerador que se puede usar para iterar por la colección.</returns>
    </member>
    <member name="P:System.Web.WebPages.Html.ModelStateDictionary.IsReadOnly">
      <summary>Obtiene un valor que indica si el diccionario de modelo-estado es de solo lectura.</summary>
      <returns>true si el diccionario de modelo-estado es de solo lectura; en caso contrario, false.</returns>
    </member>
    <member name="P:System.Web.WebPages.Html.ModelStateDictionary.IsValid">
      <summary>Obtiene un valor que indica si hay mensajes de error asociados a cualquier estado del modelo en el diccionario de modelo-estado.</summary>
      <returns>true si hay mensajes de error asociados a cualquier estado del modelo en el diccionario; de lo contrario, false.</returns>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.IsValidField(System.String)">
      <summary>Determina si hay mensajes de error asociados con la clave especificada.</summary>
      <returns>true si no hay mensajes de error asociados con la clave especificada o si la clave especificada no existe; de lo contrario, false.</returns>
      <param name="key">Clave.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> es null.</exception>
    </member>
    <member name="P:System.Web.WebPages.Html.ModelStateDictionary.Item(System.String)">
      <summary>Obtiene o establece el estado del modelo asociado a la clave especificada en el diccionario de modelo-estado.</summary>
      <returns>Estado del modelo asociado a la clave especificada en el diccionario.</returns>
      <param name="key">Clave asociada al estado del modelo.</param>
    </member>
    <member name="P:System.Web.WebPages.Html.ModelStateDictionary.Keys">
      <summary>Obtiene una lista que contiene las claves del diccionario de modelo-estado.</summary>
      <returns>Lista de claves del diccionario.</returns>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.Merge(System.Web.WebPages.Html.ModelStateDictionary)">
      <summary>Copia los valores del diccionario de modelo-estado especificado en esta instancia de <see cref="T:System.Web.WebPages.Html.ModelStateDictionary" />, sobrescribiendo los valores existentes si las claves son las mismas.</summary>
      <param name="dictionary">Diccionario de modelo-estado del que se copian los valores.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Web.WebPages.Html.ModelState})">
      <summary>Quita la primera aparición del elemento especificado del diccionario de modelo-estado.</summary>
      <returns>true si se ha quitado correctamente el elemento del diccionario de modelo-estado; false si no se ha quitado el elemento o si este no existe en el diccionario de modelo-estado.</returns>
      <param name="item">Elemento que se va a quitar.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.Remove(System.String)">
      <summary>Quita el elemento que contiene la clave especificada del diccionario de modelo-estado.</summary>
      <returns>true si se ha quitado correctamente el elemento del diccionario de modelo-estado; false si no se ha quitado el elemento o si este no existe en el diccionario de modelo-estado.</returns>
      <param name="key">Clave del elemento que se va a quitar.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.SetModelValue(System.String,System.Object)">
      <summary>Establece el valor del estado del modelo asociado a la clave especificada.</summary>
      <param name="key">Clave de la que establecer el valor.</param>
      <param name="value">Valor en el que se va a establecer la clave.</param>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>Devuelve un enumerador que puede utilizarse para iterar por el diccionario de modelo-estado.</summary>
      <returns>Enumerador que puede utilizarse para iterar por el diccionario de modelo-estado.</returns>
    </member>
    <member name="M:System.Web.WebPages.Html.ModelStateDictionary.TryGetValue(System.String,System.Web.WebPages.Html.ModelState@)">
      <summary>Obtiene el valor de modelo-estado que está asociado a la clave especificada.</summary>
      <returns>true si el diccionario de modelo-estado contiene un elemento que tiene la clave especificada; de lo contrario, false.</returns>
      <param name="key">Clave de la que obtener el valor.</param>
      <param name="value">Cuando este método devuelve el resultado, si se encuentra la clave, contiene el valor de modelo-estado asociado a la clave especificada; de lo contrario, contiene el valor predeterminado para el tipo <see cref="T:System.Web.WebPages.Html.ModelState" />. Este parámetro se pasa sin inicializar.</param>
    </member>
    <member name="P:System.Web.WebPages.Html.ModelStateDictionary.Values">
      <summary>Obtiene una lista que contiene los valores del diccionario de modelo-estado.</summary>
      <returns>Lista de valores del diccionario.</returns>
    </member>
    <member name="T:System.Web.WebPages.Html.SelectListItem">
      <summary>Representa un elemento en una lista de selección HTML.</summary>
    </member>
    <member name="M:System.Web.WebPages.Html.SelectListItem.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.WebPages.Html.SelectListItem" /> usando la configuración predeterminada.</summary>
    </member>
    <member name="M:System.Web.WebPages.Html.SelectListItem.#ctor(System.Web.WebPages.Html.SelectListItem)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.WebPages.Html.SelectListItem" /> copiando el elemento de la lista de selección especificado.</summary>
      <param name="item">El elemento de la lista de selección que copiar.</param>
    </member>
    <member name="P:System.Web.WebPages.Html.SelectListItem.Selected">
      <summary>Obtiene o establece un valor que indica si la instancia <see cref="T:System.Web.WebPages.Html.SelectListItem" /> está seleccionada.</summary>
      <returns>true si el elemento de la lista de selección está seleccionado; en caso contrario, false.</returns>
    </member>
    <member name="P:System.Web.WebPages.Html.SelectListItem.Text">
      <summary>Obtiene o establece el texto que se usa para mostrar la instancia de <see cref="T:System.Web.WebPages.Html.SelectListItem" /> en una página web.</summary>
      <returns>El texto que se usa para mostrar el elemento de la lista de selección.</returns>
    </member>
    <member name="P:System.Web.WebPages.Html.SelectListItem.Value">
      <summary>Obtiene o establece el valor del atributo value HTML del elemento option HTML asociado con la instancia de <see cref="T:System.Web.WebPages.Html.SelectListItem" />.</summary>
      <returns>El valor del atributo value HTML asociado con el elemento de la lista de selección.</returns>
    </member>
    <member name="T:System.Web.WebPages.Instrumentation.InstrumentationService">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Web.WebPages.Instrumentation.InstrumentationService.#ctor">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Web.WebPages.Instrumentation.InstrumentationService.BeginContext(System.Web.HttpContextBase,System.String,System.IO.TextWriter,System.Int32,System.Int32,System.Boolean)">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Web.WebPages.Instrumentation.InstrumentationService.EndContext(System.Web.HttpContextBase,System.String,System.IO.TextWriter,System.Int32,System.Int32,System.Boolean)">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="P:System.Web.WebPages.Instrumentation.InstrumentationService.IsAvailable">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="T:System.Web.WebPages.Instrumentation.PositionTagged`1">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.Web.WebPages.Instrumentation.PositionTagged`1.#ctor(`0,System.Int32)">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Web.WebPages.Instrumentation.PositionTagged`1.Equals(System.Object)">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Web.WebPages.Instrumentation.PositionTagged`1.GetHashCode">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Web.WebPages.Instrumentation.PositionTagged`1.op_Equality(System.Web.WebPages.Instrumentation.PositionTagged{`0},System.Web.WebPages.Instrumentation.PositionTagged{`0})">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Web.WebPages.Instrumentation.PositionTagged`1.op_Implicit(System.Tuple`2)~System.Web.WebPages.Instrumentation.PositionTagged{`0}">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Web.WebPages.Instrumentation.PositionTagged`1.op_Implicit(System.Web.WebPages.Instrumentation.PositionTagged{`0})~`0">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Web.WebPages.Instrumentation.PositionTagged`1.op_Inequality(System.Web.WebPages.Instrumentation.PositionTagged{`0},System.Web.WebPages.Instrumentation.PositionTagged{`0})">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="P:System.Web.WebPages.Instrumentation.PositionTagged`1.Position">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="M:System.Web.WebPages.Instrumentation.PositionTagged`1.ToString">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="P:System.Web.WebPages.Instrumentation.PositionTagged`1.Value">
      <summary>Este tipo/miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</summary>
    </member>
    <member name="T:System.Web.WebPages.Scope.AspNetRequestScopeStorageProvider">
      <summary>Define un proveedor de almacenamiento de ámbito de la solicitud de ASP.NET.</summary>
    </member>
    <member name="M:System.Web.WebPages.Scope.AspNetRequestScopeStorageProvider.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.WebPages.Scope.AspNetRequestScopeStorageProvider" />.</summary>
    </member>
    <member name="P:System.Web.WebPages.Scope.AspNetRequestScopeStorageProvider.ApplicationScope">
      <summary>Obtiene el diccionario que almacena datos en el ámbito de la aplicación.</summary>
      <returns>Diccionario que almacena los datos de ámbito de la aplicación.</returns>
    </member>
    <member name="P:System.Web.WebPages.Scope.AspNetRequestScopeStorageProvider.CurrentScope">
      <summary>Obtiene o establece el diccionario que almacena datos en el ámbito actual.</summary>
      <returns>Diccionario que almacena los datos de ámbito actual.</returns>
      <exception cref="T:System.InvalidOperationException">La página de inicio de la aplicación no se ejecutó antes de que se realizara el intento para establecer esta propiedad.</exception>
    </member>
    <member name="P:System.Web.WebPages.Scope.AspNetRequestScopeStorageProvider.GlobalScope">
      <summary>Obtiene el diccionario que almacena datos en el ámbito global.</summary>
      <returns>Diccionario que almacena los datos de ámbito global.</returns>
    </member>
    <member name="P:System.Web.WebPages.Scope.AspNetRequestScopeStorageProvider.RequestScope">
      <summary>Obtiene el diccionario que almacena datos en el ámbito de la solicitud.</summary>
      <returns>Diccionario que almacena los datos de ámbito de la solicitud.</returns>
      <exception cref="T:System.InvalidOperationException">La página de inicio de la aplicación no se ejecutó antes de que se realizara el intento para obtener esta propiedad.</exception>
    </member>
    <member name="T:System.Web.WebPages.Scope.IScopeStorageProvider">
      <summary>Define un diccionario que proporciona acceso por ámbito a datos.</summary>
    </member>
    <member name="P:System.Web.WebPages.Scope.IScopeStorageProvider.CurrentScope">
      <summary>Obtiene y establece el diccionario que se usa para almacenar datos en el ámbito actual.</summary>
      <returns>Diccionario que almacena los datos de ámbito actual.</returns>
    </member>
    <member name="P:System.Web.WebPages.Scope.IScopeStorageProvider.GlobalScope">
      <summary>Obtiene el diccionario que se usa para almacenar datos en el ámbito global.</summary>
      <returns>Diccionario que almacena los datos de ámbito global.</returns>
    </member>
    <member name="T:System.Web.WebPages.Scope.ScopeStorage">
      <summary>Define una clase que se usa para contener almacenamiento para un ámbito transitorio.</summary>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorage.CreateTransientScope">
      <summary>Devuelve un diccionario que se usa para almacenar datos en un ámbito transitorio, basándose en el ámbito de la propiedad <see cref="P:System.Web.WebPages.Scope.ScopeStorage.CurrentScope" />.</summary>
      <returns>Diccionario que almacena los datos de ámbito transitorio.</returns>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorage.CreateTransientScope(System.Collections.Generic.IDictionary{System.Object,System.Object})">
      <summary>Devuelve un diccionario que se usa para almacenar datos en un ámbito transitorio.</summary>
      <returns>Diccionario que almacena los datos de ámbito transitorio.</returns>
      <param name="context">Contexto.</param>
    </member>
    <member name="P:System.Web.WebPages.Scope.ScopeStorage.CurrentProvider">
      <summary>Obtiene o establece el proveedor de ámbito actual.</summary>
      <returns>Proveedor de ámbito actual.</returns>
    </member>
    <member name="P:System.Web.WebPages.Scope.ScopeStorage.CurrentScope">
      <summary>Obtiene el diccionario que se usa para almacenar datos en el ámbito actual.</summary>
      <returns>Diccionario que almacena los datos de ámbito actual.</returns>
    </member>
    <member name="P:System.Web.WebPages.Scope.ScopeStorage.GlobalScope">
      <summary>Obtiene el diccionario que se usa para almacenar datos en el ámbito global.</summary>
      <returns>Diccionario que almacena los datos de ámbito global.</returns>
    </member>
    <member name="T:System.Web.WebPages.Scope.ScopeStorageDictionary">
      <summary>Representa una colección de claves y valores que se usan para almacenar datos en diferentes niveles de ámbito (local, global, etc.).</summary>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" />.</summary>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.#ctor(System.Collections.Generic.IDictionary{System.Object,System.Object})">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> utilizando el ámbito base especificado.</summary>
      <param name="baseScope">Ámbito base.</param>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.Add(System.Collections.Generic.KeyValuePair{System.Object,System.Object})">
      <summary>Agrega un par clave-valor al objeto <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> usando la colección genérica especificada.</summary>
      <param name="item">Par clave-valor.</param>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.Add(System.Object,System.Object)">
      <summary>Agrega la clave y el valor especificados al objeto <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" />.</summary>
      <param name="key">Clave.</param>
      <param name="value">Valor.</param>
    </member>
    <member name="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BackingStore">
      <summary>Obtiene el diccionario que almacena los datos del objeto <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" />.</summary>
    </member>
    <member name="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope">
      <summary>Obtiene el ámbito base para el objeto <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" />.</summary>
      <returns>Ámbito base para el objeto <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" />.</returns>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.Clear">
      <summary>Elimina todas las claves y valores de los objetos <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> y <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> concatenados.</summary>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.Contains(System.Collections.Generic.KeyValuePair{System.Object,System.Object})">
      <summary>Devuelve un valor que indica si existe el par clave-valor especificado en el objeto <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> o en el objeto <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" />.</summary>
      <returns>true si el objeto <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> o el objeto <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> contiene un elemento que tenga el par clave-valor especificado; de lo contrario, false.</returns>
      <param name="item">Par clave-valor.</param>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.ContainsKey(System.Object)">
      <summary>Devuelve un valor que indica si existe la clave especificada en el objeto <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> o en el objeto <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" />.</summary>
      <returns>true si el objeto <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> o el objeto <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> contiene un elemento que tenga la clave especificada; de lo contrario, false.</returns>
      <param name="key">Clave.</param>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.Object,System.Object}[],System.Int32)">
      <summary>Copia todos los elementos del objeto <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> y el objeto <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> en un objeto <see cref="T:System.Array" />, comenzando por el índice especificado.</summary>
      <param name="array">Matriz.</param>
      <param name="arrayIndex">Índice basado en cero de <paramref name="array" />.</param>
    </member>
    <member name="P:System.Web.WebPages.Scope.ScopeStorageDictionary.Count">
      <summary>Obtiene el número de pares clave-valor que se encuentran en los objetos <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> y <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> concatenados.</summary>
      <returns>Número de pares de clave-valor.</returns>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.GetEnumerator">
      <summary>Devuelve un enumerador que puede usarse para recorrer en iteración objetos <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> y <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> concatenados.</summary>
      <returns>Objeto de <see cref="T:System.Collections.Generic.IEnumerator" />.</returns>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.GetItems">
      <summary>Devuelve un enumerador que puede usarse para recorrer en iteración los diferentes elementos de objetos <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> y <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> concatenados.</summary>
      <returns>Enumerador que contiene los diferentes elementos de los objetos de diccionario concatenados.</returns>
    </member>
    <member name="P:System.Web.WebPages.Scope.ScopeStorageDictionary.IsReadOnly">
      <summary>Obtiene un valor que indica si el objeto <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> es de sólo lectura.</summary>
      <returns>true si el objeto <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> es de solo lectura; en caso contrario, false.</returns>
    </member>
    <member name="P:System.Web.WebPages.Scope.ScopeStorageDictionary.Item(System.Object)">
      <summary>Obtiene o establece el elemento que está asociado a la clave especificada.</summary>
      <returns>Elemento que tiene la clave especificada.</returns>
      <param name="key">Clave del elemento que se va a obtener o establecer.</param>
    </member>
    <member name="P:System.Web.WebPages.Scope.ScopeStorageDictionary.Keys">
      <summary>Obtiene un objeto <see cref="T:System.Collections.Generic.List`1" /> que contiene las claves de los objetos <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> y <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> concatenados.</summary>
      <returns>Objeto que contiene las claves.</returns>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.Remove(System.Collections.Generic.KeyValuePair{System.Object,System.Object})">
      <summary>Quita el par clave-valor especificado de los objetos <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> y <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> concatenados.</summary>
      <returns>true si se quita el par clave-valor o false si no se encuentra <paramref name="item" /> en los objetos <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> y <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> concatenados.</returns>
      <param name="item">Par clave-valor.</param>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.Remove(System.Object)">
      <summary>Quita el valor que tiene la clave especificada de los objetos <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> y <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> concatenados.</summary>
      <returns>true si se quita el par clave-valor o false si no se encuentra <paramref name="key" /> en los objetos <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> y <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> concatenados.</returns>
      <param name="key">Clave.</param>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.SetValue(System.Object,System.Object)">
      <summary>Establece un valor usando la clave especificada en los objetos <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> y <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> concatenados.</summary>
      <param name="key">Clave.</param>
      <param name="value">Valor.</param>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>Devuelve un enumerador para los objetos <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> y <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> concatenados.</summary>
      <returns>Enumerador.</returns>
    </member>
    <member name="M:System.Web.WebPages.Scope.ScopeStorageDictionary.TryGetValue(System.Object,System.Object@)">
      <summary>Obtiene el valor que está asociado con la clave especificada de los objetos <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> y <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> concatenados.</summary>
      <returns>true si los objetos <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> y <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> concatenados contienen un elemento que tenga la clave especificada; de lo contrario, false.</returns>
      <param name="key">Clave.</param>
      <param name="value">Cuando este método devuelve el resultado, si se encuentra la clave, contiene el valor asociado a la clave especificada; en caso contrario, el valor predeterminado para el tipo del parámetro <paramref name="value" />. Este parámetro se pasa sin inicializar.</param>
    </member>
    <member name="P:System.Web.WebPages.Scope.ScopeStorageDictionary.Values">
      <summary>Obtiene un objeto <see cref="T:System.Collections.Generic.List`1" /> que contiene los valores de los objetos <see cref="T:System.Web.WebPages.Scope.ScopeStorageDictionary" /> y <see cref="P:System.Web.WebPages.Scope.ScopeStorageDictionary.BaseScope" /> concatenados.</summary>
      <returns>Objeto que contiene los valores.</returns>
    </member>
    <member name="T:System.Web.WebPages.Scope.StaticScopeStorageProvider">
      <summary>Proporciona acceso por ámbitos a los datos estáticos.</summary>
    </member>
    <member name="M:System.Web.WebPages.Scope.StaticScopeStorageProvider.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.WebPages.Scope.StaticScopeStorageProvider" />.</summary>
    </member>
    <member name="P:System.Web.WebPages.Scope.StaticScopeStorageProvider.CurrentScope">
      <summary>Obtiene o establece un diccionario que almacena los datos actuales bajo un contexto estático.</summary>
      <returns>Diccionario que proporciona los datos de ámbito actual.</returns>
    </member>
    <member name="P:System.Web.WebPages.Scope.StaticScopeStorageProvider.GlobalScope">
      <summary>Obtiene un diccionario que almacena los datos globales bajo un contexto estático.</summary>
      <returns>Diccionario que proporciona los datos de ámbito global.</returns>
    </member>
  </members>
</doc>